Last login: Wed Apr  5 20:29:33 on ttys000
Tszs-MBP:~ tszyeunglam$ cd ./Desktop/Coding/Prolog
Tszs-MBP:Prolog tszyeunglam$ java -jar ptestpelecaniformes.jar -prolog /opt/local/bin/gprolog pelecaniformes.pl
Prolog testing harness version 7
CPSC 449 Prolog Assignment: Pelecaniformes version 3 (Prolog testing harness version 7).
---------------------------------------------------------------
  1. Running test 'order(pelecaniformes). true'...
  Executing: /opt/local/bin/gprolog --c pelecaniformes.pl
  
  List = [_]
  
  yes
  | ?-
  Test 'order(pelecaniformes). true': Success
---------------------------------------------------------------
  2. Running test 'order(pelecanidae). false'...
  List = []
  
  yes
  | ?-
  Test 'order(pelecanidae). false': Success
---------------------------------------------------------------
  3. Running test 'order(X).'...
  setof(X,order(X),L).
  L = [pelecaniformes]
  
  yes
  | ?-
  Test 'order(X).': Success
---------------------------------------------------------------
  4. Running test 'family(pelecanidae). true'...
  List = [_]
  
  yes
  | ?-
  Test 'family(pelecanidae). true': Success
---------------------------------------------------------------
  5. Running test 'family(ardeidae). true'...
  List = [_]
  
  yes
  | ?-
  Test 'family(ardeidae). true': Success
---------------------------------------------------------------
  6. Running test 'family(threskiornithidae). true'...
  List = [_]
  
  yes
  | ?-
  Test 'family(threskiornithidae). true': Success
---------------------------------------------------------------
  7. Running test 'family(pelecaniformes). is an order'...
  List = []
  
  yes
  | ?-
  Test 'family(pelecaniformes). is an order': Success
---------------------------------------------------------------
  8. Running test 'family(X).'...
  setof(X,family(X),L).
  L = [ardeidae,pelecanidae,threskiornithidae]
  
  yes
  | ?-
  Test 'family(X).': Success
---------------------------------------------------------------
  9. Running test 'genus(botaurus). true'...
  List = [_]
  
  yes
  | ?-
  Test 'genus(botaurus). true': Success
---------------------------------------------------------------
 10. Running test 'genus(ardea). true'...
  List = [_]
  
  yes
  | ?-
  Test 'genus(ardea). true': Success
---------------------------------------------------------------
 11. Running test 'genus(nycticorax). is both a genus and a species'...
  List = [_]
  
  yes
  | ?-
  Test 'genus(nycticorax). is both a genus and a species': Success
---------------------------------------------------------------
 12. Running test 'genus(erythrorhynchos). is a species'...
  List = []
  
  yes
  | ?-
  Test 'genus(erythrorhynchos). is a species': Success
---------------------------------------------------------------
 13. Running test 'genus(X).'...
  setof(X,genus(X),L).
  L = [ardea,botaurus,bubulcus,butorides,egretta,eudocimus,ixobrychus,nyctanassa,nycticorax,pelecanus,platalea,plegadis]
  
  yes
  | ?-
  Test 'genus(X).': Success
---------------------------------------------------------------
 14. Running test 'species(occidentalis). true'...
  List = [_]
  
  yes
  | ?-
  Test 'species(occidentalis). true': Success
---------------------------------------------------------------
 15. Running test 'species(thula). true'...
  List = [_]
  
  yes
  | ?-
  Test 'species(thula). true': Success
---------------------------------------------------------------
 16. Running test 'species(nycticorax). is both a genus and a species'...
  List = [_]
  
  yes
  | ?-
  Test 'species(nycticorax). is both a genus and a species': Success
---------------------------------------------------------------
 17. Running test 'species(plegadis). is a genus'...
  List = []
  
  (1 ms) yes
  | ?-
  Test 'species(plegadis). is a genus': Success
---------------------------------------------------------------
 18. Running test 'species(X).'...
  setof(X,species(X),L).
  L = [ajaja,alba,albus,caerulea,chihi,erythrorhynchos,exilis,falcinellus,herodias,ibis,lentiginosus,nycticorax,occidentalis,rufescens,thula,tricolor,violacea,virescens]
  
  yes
  | ?-
  Test 'species(X).': Success
---------------------------------------------------------------
 19. Running test 'hasParent(plegadis_falcinellus,plegadis). cspecies/genus'...
  List = []
  
  yes
  | ?-
  Test 'hasParent(plegadis_falcinellus,plegadis). cspecies/genus': Success
---------------------------------------------------------------
 20. Running test 'hasParent(falcinellus,plegadis). species/genus'...
  List = [_]
  
  yes
  | ?-
  Test 'hasParent(falcinellus,plegadis). species/genus': Success
---------------------------------------------------------------
 21. Running test 'hasParent(nycticorax,ardeidae). genus/family'...
  List = [_]
  
  yes
  | ?-
  Test 'hasParent(nycticorax,ardeidae). genus/family': Success
---------------------------------------------------------------
 22. Running test 'hasParent(threskiornithidae,pelecaniformes). family/order'...
  List = [_]
  
  yes
  | ?-
  Test 'hasParent(threskiornithidae,pelecaniformes). family/order': Success
---------------------------------------------------------------
 23. Running test 'hasParent(falcinellus,ardeidae). species/family'...
  List = []
  
  yes
  | ?-
  Test 'hasParent(falcinellus,ardeidae). species/family': Success
---------------------------------------------------------------
 24. Running test 'hasParent(nycticorax,pelecaniformes). genus/order'...
  List = []
  
  yes
  | ?-
  Test 'hasParent(nycticorax,pelecaniformes). genus/order': Success
---------------------------------------------------------------
 25. Running test 'hasParent(X,egretta).'...
  setof(X,hasParent(X,egretta),L).
  L = [caerulea,rufescens,thula,tricolor]
  
  (1 ms) yes
  | ?-
  Test 'hasParent(X,egretta).': Success
---------------------------------------------------------------
 26. Running test 'hasParent(egretta,ardeidae). genus/family'...
  List = [_]
  
  yes
  | ?-
  Test 'hasParent(egretta,ardeidae). genus/family': Success
---------------------------------------------------------------
 27. Running test 'hasParent(caerulea,X).'...
  setof(X,hasParent(caerulea,X),L).
  L = [egretta]
  
  yes
  | ?-
  Test 'hasParent(caerulea,X).': Success
---------------------------------------------------------------
 28. Running test 'hasParent(X,Y).'...
  setof([X,Y],hasParent(X,Y),L).
  L = [[ajaja,platalea],[alba,ardea],[albus,eudocimus],[ardea,ardeidae],[ardeidae,pelecaniformes],[botaurus,ardeidae],[bubulcus,ardeidae],[butorides,ardeidae],[caerulea,egretta],[chihi,plegadis],[egretta,ardeidae],[erythrorhynchos,pelecanus],[eudocimus,threskiornithidae],[exilis,ixobrychus],[falcinellus,plegadis],[herodias,ardea],[ibis,bubulcus],[ixobrychus,ardeidae],[lentiginosus,botaurus],[nyctanassa,ardeidae],[nycticorax,ardeidae],[nycticorax,nycticorax],[occidentalis,pelecanus],[pelecanidae,pelecaniformes],[pelecanus,pelecanidae],[platalea,threskiornithidae],[plegadis,threskiornithidae],[rufescens,egretta],[threskiornithidae,pelecaniformes],[thula,egretta],[tricolor,egretta],[violacea,nyctanassa],[virescens,butorides]]
  
  yes
  | ?-
  Test 'hasParent(X,Y).': Success
---------------------------------------------------------------
 29. Running test 'hasParent2(plegadis_falcinellus,plegadis). cspecies/genus'...
  List = [_]
  
  yes
  | ?-
  Test 'hasParent2(plegadis_falcinellus,plegadis). cspecies/genus': Success
---------------------------------------------------------------
 30. Running test 'hasParent2(falcinellus,plegadis). species/genus'...
  List = []
  
  yes
  | ?-
  Test 'hasParent2(falcinellus,plegadis). species/genus': Success
---------------------------------------------------------------
 31. Running test 'hasParent2(nycticorax,ardeidae). genus/family'...
  List = [_]
  
  yes
  | ?-
  Test 'hasParent2(nycticorax,ardeidae). genus/family': Success
---------------------------------------------------------------
 32. Running test 'hasParent2(threskiornithidae,pelecaniformes). family/order'...
  List = [_]
  
  yes
  | ?-
  Test 'hasParent2(threskiornithidae,pelecaniformes). family/order': Success
---------------------------------------------------------------
 33. Running test 'hasParent2(plegadis_falcinellus,ardeidae). cspecies/family'...
  List = []
  
  yes
  | ?-
  Test 'hasParent2(plegadis_falcinellus,ardeidae). cspecies/family': Success
---------------------------------------------------------------
 34. Running test 'hasParent2(nycticorax,pelecaniformes). genus/order'...
  List = []
  
  yes
  | ?-
  Test 'hasParent2(nycticorax,pelecaniformes). genus/order': Success
---------------------------------------------------------------
 35. Running test 'hasParent2(X,egretta).'...
  setof(X,hasParent2(X,egretta),L).
  L = [egretta_caerulea,egretta_rufescens,egretta_thula,egretta_tricolor]
  
  yes
  | ?-
  Test 'hasParent2(X,egretta).': Success
---------------------------------------------------------------
 36. Running test 'hasParent2(egretta,ardeidae). genus/family'...
  List = [_]
  
  yes
  | ?-
  Test 'hasParent2(egretta,ardeidae). genus/family': Success
---------------------------------------------------------------
 37. Running test 'hasParent2(egretta_caerulea,X).'...
  setof(X,hasParent2(egretta_caerulea,X),L).
  L = [egretta]
  
  yes
  | ?-
  Test 'hasParent2(egretta_caerulea,X).': Success
---------------------------------------------------------------
 38. Running test 'hasParent2(X,Y).'...
  setof([X,Y],hasParent2(X,Y),L).
  L = [[ardea,ardeidae],[ardea_alba,ardea],[ardea_herodias,ardea],[ardeidae,pelecaniformes],[botaurus,ardeidae],[botaurus_lentiginosus,botaurus],[bubulcus,ardeidae],[bubulcus_ibis,bubulcus],[butorides,ardeidae],[butorides_virescens,butorides],[egretta,ardeidae],[egretta_caerulea,egretta],[egretta_rufescens,egretta],[egretta_thula,egretta],[egretta_tricolor,egretta],[eudocimus,threskiornithidae],[eudocimus_albus,eudocimus],[ixobrychus,ardeidae],[ixobrychus_exilis,ixobrychus],[nyctanassa,ardeidae],[nyctanassa_violacea,nyctanassa],[nycticorax,ardeidae],[nycticorax_nycticorax,nycticorax],[pelecanidae,pelecaniformes],[pelecanus,pelecanidae],[pelecanus_erythrorhynchos,pelecanus],[pelecanus_occidentalis,pelecanus],[platalea,threskiornithidae],[platalea_ajaja,platalea],[plegadis,threskiornithidae],[plegadis_chihi,plegadis],[plegadis_falcinellus,plegadis],[threskiornithidae,pelecaniformes]]
  
  yes
  | ?-
  Test 'hasParent2(X,Y).': Success
---------------------------------------------------------------
 39. Running test 'hasCommonName(pelecanus,pelican). order'...
  List = [_]
  
  yes
  | ?-
  Test 'hasCommonName(pelecanus,pelican). order': Success
---------------------------------------------------------------
 40. Running test 'hasCommonName(ardea,heron). genus'...
  List = [_]
  
  (1 ms) yes
  | ?-
  Test 'hasCommonName(ardea,heron). genus': Success
---------------------------------------------------------------
 41. Running test 'hasCommonName(nycticorax,nightHeron). genus'...
  List = [_]
  
  yes
  | ?-
  Test 'hasCommonName(nycticorax,nightHeron). genus': Success
---------------------------------------------------------------
 42. Running test 'hasCommonName(nyctanassa,nightHeron). genus (also above)'...
  List = [_]
  
  yes
  | ?-
  Test 'hasCommonName(nyctanassa,nightHeron). genus (also above)': Success
---------------------------------------------------------------
 43. Running test 'hasCommonName(pelecanus_erythrorhynchos,americanWhitePelican). cspeces'...
  List = [_]
  
  yes
  | ?-
  Test 'hasCommonName(pelecanus_erythrorhynchos,americanWhitePelican). cspeces': Success
---------------------------------------------------------------
 44. Running test 'hasCommonName(erythrorhynchos,americanWhitePelican). raw speces'...
  List = []
  
  yes
  | ?-
  Test 'hasCommonName(erythrorhynchos,americanWhitePelican). raw speces': Success
---------------------------------------------------------------
 45. Running test 'hasCommonName(pelecanus_erythrorhynchos,brownPelican). cspeces/wrongName'...
  List = []
  
  yes
  | ?-
  Test 'hasCommonName(pelecanus_erythrorhynchos,brownPelican). cspeces/wrongName': Success
---------------------------------------------------------------
 46. Running test 'hasCommonName(butorides_virescens,greenHeron). cspecies'...
  List = [_]
  
  yes
  | ?-
  Test 'hasCommonName(butorides_virescens,greenHeron). cspecies': Success
---------------------------------------------------------------
 47. Running test 'hasCommonName(nyctanassa_violacea,X). cspecies/'...
  setof(X,hasCommonName(nyctanassa_violacea,X),L).
  L = [yellowCrownedNightHeron]
  
  yes
  | ?-
  Test 'hasCommonName(nyctanassa_violacea,X). cspecies/': Success
---------------------------------------------------------------
 48. Running test 'hasCommonName(X,roseateSpoonbill). /commonName'...
  setof(X,hasCommonName(X,roseateSpoonbill),L).
  L = [platalea_ajaja]
  
  yes
  | ?-
  Test 'hasCommonName(X,roseateSpoonbill). /commonName': Success
---------------------------------------------------------------
 49. Running test 'hasCommonName(botaurus,lentiginosus,americanBittern). true'...
  List = [_]
  
  yes
  | ?-
  Test 'hasCommonName(botaurus,lentiginosus,americanBittern). true': Success
---------------------------------------------------------------
 50. Running test 'hasCommonName(egretta,rufescens,reddishEgret). true'...
  List = [_]
  
  yes
  | ?-
  Test 'hasCommonName(egretta,rufescens,reddishEgret). true': Success
---------------------------------------------------------------
 51. Running test 'hasCommonName(egretta,alba,reddishEgret). genus/species mismatch'...
  List = []
  
  yes
  | ?-
  Test 'hasCommonName(egretta,alba,reddishEgret). genus/species mismatch': Success
---------------------------------------------------------------
 52. Running test 'hasCommonName(egretta,rufescens,snowyEgret). wrong common name'...
  List = []
  
  yes
  | ?-
  Test 'hasCommonName(egretta,rufescens,snowyEgret). wrong common name': Success
---------------------------------------------------------------
 53. Running test 'hasCommonName(nycticorax,nycticorax,blackCrownedNightHeron). true'...
  List = [_]
  
  yes
  | ?-
  Test 'hasCommonName(nycticorax,nycticorax,blackCrownedNightHeron). true': Success
---------------------------------------------------------------
 54. Running test 'hasCommonName(botaurus,lentiginosus,X).'...
  setof(X,hasCommonName(botaurus,lentiginosus,X),L).
  L = [americanBittern]
  
  yes
  | ?-
  Test 'hasCommonName(botaurus,lentiginosus,X).': Success
---------------------------------------------------------------
 55. Running test 'hasCommonName(egretta,rufescens,X).'...
  setof(X,hasCommonName(egretta,rufescens,X),L).
  L = [reddishEgret]
  
  yes
  | ?-
  Test 'hasCommonName(egretta,rufescens,X).': Success
---------------------------------------------------------------
 56. Running test 'hasCommonName(nycticorax,nycticorax,X).'...
  setof(X,hasCommonName(nycticorax,nycticorax,X),L).
  L = [blackCrownedNightHeron]
  
  yes
  | ?-
  Test 'hasCommonName(nycticorax,nycticorax,X).': Success
---------------------------------------------------------------
 57. Running test 'hasCommonName(X,Y,americanBittern).'...
  setof([X,Y],hasCommonName(X,Y,americanBittern),L).
  L = [[botaurus,lentiginosus]]
  
  yes
  | ?-
  Test 'hasCommonName(X,Y,americanBittern).': Success
---------------------------------------------------------------
 58. Running test 'hasCommonName(X,Y,reddishEgret).'...
  setof([X,Y],hasCommonName(X,Y,reddishEgret),L).
  L = [[egretta,rufescens]]
  
  yes
  | ?-
  Test 'hasCommonName(X,Y,reddishEgret).': Success
---------------------------------------------------------------
 59. Running test 'hasCommonName(X,Y,blackCrownedNightHeron).'...
  setof([X,Y],hasCommonName(X,Y,blackCrownedNightHeron),L).
  L = [[nycticorax,nycticorax]]
  
  yes
  | ?-
  Test 'hasCommonName(X,Y,blackCrownedNightHeron).': Success
---------------------------------------------------------------
 60. Running test 'hasSciName(greatBlueHeron,ardea_herodias). cspeces'...
  List = [_]
  
  yes
  | ?-
  Test 'hasSciName(greatBlueHeron,ardea_herodias). cspeces': Success
---------------------------------------------------------------
 61. Running test 'hasSciName(snowyEgret,egretta_thula). cspeces'...
  List = [_]
  
  yes
  | ?-
  Test 'hasSciName(snowyEgret,egretta_thula). cspeces': Success
---------------------------------------------------------------
 62. Running test 'hasSciName(snowyEgret,thula). raw speces'...
  List = []
  
  (1 ms) yes
  | ?-
  Test 'hasSciName(snowyEgret,thula). raw speces': Success
---------------------------------------------------------------
 63. Running test 'hasSciName(cattleEgret,bubulcus_ibis). cspeces'...
  List = [_]
  
  yes
  | ?-
  Test 'hasSciName(cattleEgret,bubulcus_ibis). cspeces': Success
---------------------------------------------------------------
 64. Running test 'hasSciName(cattleEgret,ibis). raw speces'...
  List = []
  
  yes
  | ?-
  Test 'hasSciName(cattleEgret,ibis). raw speces': Success
---------------------------------------------------------------
 65. Running test 'hasSciName(ibis,eudocimus). genus'...
  List = [_]
  
  yes
  | ?-
  Test 'hasSciName(ibis,eudocimus). genus': Success
---------------------------------------------------------------
 66. Running test 'hasSciName(ibis,plegadis). genus (same as above)'...
  List = [_]
  
  (1 ms) yes
  | ?-
  Test 'hasSciName(ibis,plegadis). genus (same as above)': Success
---------------------------------------------------------------
 67. Running test 'hasSciName(greatBlueHeron,X). cspecies/'...
  setof(X,hasSciName(greatBlueHeron,X),L).
  L = [ardea_herodias]
  
  yes
  | ?-
  Test 'hasSciName(greatBlueHeron,X). cspecies/': Success
---------------------------------------------------------------
 68. Running test 'hasSciName(snowyEgret,X). cspecies/'...
  setof(X,hasSciName(snowyEgret,X),L).
  L = [egretta_thula]
  
  yes
  | ?-
  Test 'hasSciName(snowyEgret,X). cspecies/': Success
---------------------------------------------------------------
 69. Running test 'hasSciName(cattleEgret,X). cspecies/'...
  setof(X,hasSciName(cattleEgret,X),L).
  L = [bubulcus_ibis]
  
  yes
  | ?-
  Test 'hasSciName(cattleEgret,X). cspecies/': Success
---------------------------------------------------------------
 70. Running test 'hasSciName(X,ardea_herodias). /cspecies'...
  setof(X,hasSciName(X,ardea_herodias),L).
  L = [greatBlueHeron]
  
  yes
  | ?-
  Test 'hasSciName(X,ardea_herodias). /cspecies': Success
---------------------------------------------------------------
 71. Running test 'hasSciName(X,egretta_thula). /cspecies'...
  setof(X,hasSciName(X,egretta_thula),L).
  L = [snowyEgret]
  
  yes
  | ?-
  Test 'hasSciName(X,egretta_thula). /cspecies': Success
---------------------------------------------------------------
 72. Running test 'hasSciName(X,bubulcus_ibis). /cspecies'...
  setof(X,hasSciName(X,bubulcus_ibis),L).
  L = [cattleEgret]
  
  yes
  | ?-
  Test 'hasSciName(X,bubulcus_ibis). /cspecies': Success
---------------------------------------------------------------
 73. Running test 'hasCompoundName(pelecanus,occidentalis,pelecanus_occidentalis). true'...
  List = [_]
  
  yes
  | ?-
  Test 'hasCompoundName(pelecanus,occidentalis,pelecanus_occidentalis). true': Success
---------------------------------------------------------------
 74. Running test 'hasCompoundName(egretta,tricolor,egretta_tricolor). true'...
  List = [_]
  
  yes
  | ?-
  Test 'hasCompoundName(egretta,tricolor,egretta_tricolor). true': Success
---------------------------------------------------------------
 75. Running test 'hasCompoundName(plegadis,chihi,plegadis_chihi). true'...
  List = [_]
  
  yes
  | ?-
  Test 'hasCompoundName(plegadis,chihi,plegadis_chihi). true': Success
---------------------------------------------------------------
 76. Running test 'hasCompoundName(plegadis,chihi,egretta_tricolor). wrong name'...
  List = []
  
  yes
  | ?-
  Test 'hasCompoundName(plegadis,chihi,egretta_tricolor). wrong name': Success
---------------------------------------------------------------
 77. Running test 'hasCompoundName(pelecanus,occidentalis,X).'...
  setof(X,hasCompoundName(pelecanus,occidentalis,X),L).
  L = [pelecanus_occidentalis]
  
  yes
  | ?-
  Test 'hasCompoundName(pelecanus,occidentalis,X).': Success
---------------------------------------------------------------
 78. Running test 'hasCompoundName(egretta,tricolor,X).'...
  setof(X,hasCompoundName(egretta,tricolor,X),L).
  L = [egretta_tricolor]
  
  yes
  | ?-
  Test 'hasCompoundName(egretta,tricolor,X).': Success
---------------------------------------------------------------
 79. Running test 'hasCompoundName(plegadis,chihi,X).'...
  setof(X,hasCompoundName(plegadis,chihi,X),L).
  L = [plegadis_chihi]
  
  yes
  | ?-
  Test 'hasCompoundName(plegadis,chihi,X).': Success
---------------------------------------------------------------
 80. Running test 'hasCompoundName(X,Y,pelecanus_occidentalis).'...
  setof([X,Y],hasCompoundName(X,Y,pelecanus_occidentalis),L).
  L = [[pelecanus,occidentalis]]
  
  yes
  | ?-
  Test 'hasCompoundName(X,Y,pelecanus_occidentalis).': Success
---------------------------------------------------------------
 81. Running test 'hasCompoundName(X,Y,egretta_tricolor).'...
  setof([X,Y],hasCompoundName(X,Y,egretta_tricolor),L).
  L = [[egretta,tricolor]]
  
  yes
  | ?-
  Test 'hasCompoundName(X,Y,egretta_tricolor).': Success
---------------------------------------------------------------
 82. Running test 'hasCompoundName(X,Y,plegadis_chihi).'...
  setof([X,Y],hasCompoundName(X,Y,plegadis_chihi),L).
  L = [[plegadis,chihi]]
  
  yes
  | ?-
  Test 'hasCompoundName(X,Y,plegadis_chihi).': Success
---------------------------------------------------------------
 83. Running test 'synonym(plegadis,plegadis). equal'...
  List = []
  
  yes
  | ?-
  Test 'synonym(plegadis,plegadis). equal': Success
---------------------------------------------------------------
 84. Running test 'synonym(glossyIbis,plegadis_falcinellus). common/cspecies'...
  List = [_]
  
  (1 ms) yes
  | ?-
  Test 'synonym(glossyIbis,plegadis_falcinellus). common/cspecies': Success
---------------------------------------------------------------
 85. Running test 'synonym(glossyIbis,alcinellus). common/rawSpecies'...
  List = []
  
  yes
  | ?-
  Test 'synonym(glossyIbis,alcinellus). common/rawSpecies': Success
---------------------------------------------------------------
 86. Running test 'synonym(plegadis_falcinellus,glossyIbis). cspecies/common'...
  List = [_]
  
  yes
  | ?-
  Test 'synonym(plegadis_falcinellus,glossyIbis). cspecies/common': Success
---------------------------------------------------------------
 87. Running test 'synonym(falcinellus,glossyIbis). rawSpecies/common'...
  List = []
  
  yes
  | ?-
  Test 'synonym(falcinellus,glossyIbis). rawSpecies/common': Success
---------------------------------------------------------------
 88. Running test 'synonym(glossyIbis,plegadis_falcinellus). common/compound'...
  List = [_]
  
  yes
  | ?-
  Test 'synonym(glossyIbis,plegadis_falcinellus). common/compound': Success
---------------------------------------------------------------
 89. Running test 'synonym(plegadis_falcinellus,glossyIbis). compound/common'...
  List = [_]
  
  yes
  | ?-
  Test 'synonym(plegadis_falcinellus,glossyIbis). compound/common': Success
---------------------------------------------------------------
 90. Running test 'synonym(bittern,ixobrychus). common/genus'...
  List = [_]
  
  yes
  | ?-
  Test 'synonym(bittern,ixobrychus). common/genus': Success
---------------------------------------------------------------
 91. Running test 'synonym(ixobrychus,botaurus). genus/genus with same common name'...
  List = []
  
  yes
  | ?-
  Test 'synonym(ixobrychus,botaurus). genus/genus with same common name': Success
---------------------------------------------------------------
 92. Running test 'synonym(bittern,botaurus). common/genus (same as above)'...
  List = [_]
  
  yes
  | ?-
  Test 'synonym(bittern,botaurus). common/genus (same as above)': Success
---------------------------------------------------------------
 93. Running test 'synonym(heron,egret). both are names for egretta'...
  List = [_]
  
  yes
  | ?-
  Test 'synonym(heron,egret). both are names for egretta': Success
---------------------------------------------------------------
 94. Running test 'synonym(greenHeron,X). common/'...
  setof(X,synonym(greenHeron,X),L).
  L = [butorides_virescens]
  
  yes
  | ?-
  Test 'synonym(greenHeron,X). common/': Success
---------------------------------------------------------------
 95. Running test 'synonym(X,greenHeron). /common'...
  setof(X,synonym(X,greenHeron),L).
  L = [butorides_virescens]
  
  yes
  | ?-
  Test 'synonym(X,greenHeron). /common': Success
---------------------------------------------------------------
 96. Running test 'synonym(butorides_virescens,X). cspecies/'...
  setof(X,synonym(butorides_virescens,X),L).
  L = [greenHeron]
  
  yes
  | ?-
  Test 'synonym(butorides_virescens,X). cspecies/': Success
---------------------------------------------------------------
 97. Running test 'synonym(X,butorides_virescens). /cspecies'...
  setof(X,synonym(X,butorides_virescens),L).
  L = [greenHeron]
  
  yes
  | ?-
  Test 'synonym(X,butorides_virescens). /cspecies': Success
---------------------------------------------------------------
 98. Running test 'synonym(X,heron). /common that maps to 3 genera'...
  setof(X,synonym(X,heron),L).
  L = [ardea,butorides,egret,egretta]
  
  (1 ms) yes
  | ?-
  Test 'synonym(X,heron). /common that maps to 3 genera': Success
---------------------------------------------------------------
 99. Running test 'synonym(heron,X). /common that maps to 3 genera'...
  setof(X,synonym(heron,X),L).
  L = [ardea,butorides,egret,egretta]
  
  yes
  | ?-
  Test 'synonym(heron,X). /common that maps to 3 genera': Success
---------------------------------------------------------------
100. Running test 'isaStrict(exilis,exilis). equal species'...
  List = []
  
  yes
  | ?-
  Test 'isaStrict(exilis,exilis). equal species': Success
---------------------------------------------------------------
101. Running test 'isaStrict(ardeidae,ardeidae). equal families'...
  List = [_]
  
  yes
  | ?-
  Test 'isaStrict(ardeidae,ardeidae). equal families': Success
---------------------------------------------------------------
102. Running test 'isaStrict(x,x). equal but unknown'...
  List = []
  
  yes
  | ?-
  Test 'isaStrict(x,x). equal but unknown': Success
---------------------------------------------------------------
103. Running test 'isaStrict(ixobrychus_exilis,ixobrychus). cspecies to genus'...
  List = [_]
  
  yes
  | ?-
  Test 'isaStrict(ixobrychus_exilis,ixobrychus). cspecies to genus': Success
---------------------------------------------------------------
104. Running test 'isaStrict(ixobrychus_exilis,ardeidae). cspecies to family'...
  List = [_]
  
  yes
  | ?-
  Test 'isaStrict(ixobrychus_exilis,ardeidae). cspecies to family': Success
---------------------------------------------------------------
105. Running test 'isaStrict(ixobrychus_exilis,pelecaniformes). cspecies to top'...
  List = [_]
  
  yes
  | ?-
  Test 'isaStrict(ixobrychus_exilis,pelecaniformes). cspecies to top': Success
---------------------------------------------------------------
106. Running test 'isaStrict(ixobrychus_exilis,botaurus). cspecies to wrong genus'...
  List = []
  
  (1 ms) yes
  | ?-
  Test 'isaStrict(ixobrychus_exilis,botaurus). cspecies to wrong genus': Success
---------------------------------------------------------------
107. Running test 'isaStrict(ixobrychus_exilis,pelecanidae). cspecies to wrong family'...
  List = []
  
  yes
  | ?-
  Test 'isaStrict(ixobrychus_exilis,pelecanidae). cspecies to wrong family': Success
---------------------------------------------------------------
108. Running test 'isaStrict(exilis,ixobrychus). raw species to genus'...
  List = []
  
  yes
  | ?-
  Test 'isaStrict(exilis,ixobrychus). raw species to genus': Success
---------------------------------------------------------------
109. Running test 'isaStrict(ixobrychus_exilis,X).'...
  setof(X,isaStrict(ixobrychus_exilis,X),L).
  L = [ardeidae,ixobrychus,ixobrychus_exilis,pelecaniformes]
  
  yes
  | ?-
  Test 'isaStrict(ixobrychus_exilis,X).': Success
---------------------------------------------------------------
110. Running test 'isa(exilis,exilis). equal raw species'...
  List = []
  
  yes
  | ?-
  Test 'isa(exilis,exilis). equal raw species': Success
---------------------------------------------------------------
111. Running test 'isa(ardeidae,ardeidae). equal families'...
  List = [_]
  
  yes
  | ?-
  Test 'isa(ardeidae,ardeidae). equal families': Success
---------------------------------------------------------------
112. Running test 'isa(x,x). equal but unknown name'...
  List = []
  
  yes
  | ?-
  Test 'isa(x,x). equal but unknown name': Success
---------------------------------------------------------------
113. Running test 'isa(ixobrychus_exilis,ixobrychus). cspecies to genus'...
  List = [_]
  
  yes
  | ?-
  Test 'isa(ixobrychus_exilis,ixobrychus). cspecies to genus': Success
---------------------------------------------------------------
114. Running test 'isa(ixobrychus_exilis,ardeidae). cspecies to family'...
  List = [_]
  
  yes
  | ?-
  Test 'isa(ixobrychus_exilis,ardeidae). cspecies to family': Success
---------------------------------------------------------------
115. Running test 'isa(ixobrychus_exilis,pelecaniformes). cspecies to top'...
  List = [_]
  
  yes
  | ?-
  Test 'isa(ixobrychus_exilis,pelecaniformes). cspecies to top': Success
---------------------------------------------------------------
116. Running test 'isa(ixobrychus_exilis,botaurus). cspecies to wrong genus'...
  List = []
  
  yes
  | ?-
  Test 'isa(ixobrychus_exilis,botaurus). cspecies to wrong genus': Success
---------------------------------------------------------------
117. Running test 'isa(ixobrychus_exilis,pelecanidae). cspecies to wrong family'...
  List = []
  
  yes
  | ?-
  Test 'isa(ixobrychus_exilis,pelecanidae). cspecies to wrong family': Success
---------------------------------------------------------------
118. Running test 'isa(exilis,ixobrychus). raw species to genus'...
  List = []
  
  yes
  | ?-
  Test 'isa(exilis,ixobrychus). raw species to genus': Success
---------------------------------------------------------------
119. Running test 'isa(ixobrychus_exilis,X).'...
  setof(X,isa(ixobrychus_exilis,X),L).
  L = [ardeidae,ixobrychus,ixobrychus_exilis,pelecaniformes]
  
  yes
  | ?-
  Test 'isa(ixobrychus_exilis,X).': Success
---------------------------------------------------------------
120. Running test 'isa(X,pelecanidae).'...
  setof(X,isa(X,pelecanidae),L).
  L = [pelecanidae,pelecanus,pelecanus_erythrorhynchos,pelecanus_occidentalis]
  
  yes
  | ?-
  Test 'isa(X,pelecanidae).': Success
---------------------------------------------------------------
121. Running test 'isa(plegadis,ibis). equal genera/common'...
  List = [_]
  
  (1 ms) yes
  | ?-
  Test 'isa(plegadis,ibis). equal genera/common': Success
---------------------------------------------------------------
122. Running test 'isa(plegadis_chihi,ibis). equal cspecies/common'...
  List = [_]
  
  yes
  | ?-
  Test 'isa(plegadis_chihi,ibis). equal cspecies/common': Success
---------------------------------------------------------------
123. Running test 'isa(cattleEgret,cattleEgret). equal common/common'...
  List = [_]
  
  yes
  | ?-
  Test 'isa(cattleEgret,cattleEgret). equal common/common': Success
---------------------------------------------------------------
124. Running test 'isa(chihi,ibis). equal rawSpecies/common'...
  List = []
  
  yes
  | ?-
  Test 'isa(chihi,ibis). equal rawSpecies/common': Success
---------------------------------------------------------------
125. Running test 'isa(platalea_ajaja,pelecaniformes). bottom to top'...
  List = [_]
  
  yes
  | ?-
  Test 'isa(platalea_ajaja,pelecaniformes). bottom to top': Success
---------------------------------------------------------------
126. Running test 'isa(cattleEgret,bubulcus_ibis). equal commonName to compound species'...
  List = [_]
  
  yes
  | ?-
  Test 'isa(cattleEgret,bubulcus_ibis). equal commonName to compound species': Success
---------------------------------------------------------------
127. Running test 'isa(whiteIbis,eudocimus). common species name to genus'...
  List = [_]
  
  yes
  | ?-
  Test 'isa(whiteIbis,eudocimus). common species name to genus': Success
---------------------------------------------------------------
128. Running test 'isa(leastBittern,ardeidae). common species name to family'...
  List = [_]
  
  yes
  | ?-
  Test 'isa(leastBittern,ardeidae). common species name to family': Success
---------------------------------------------------------------
129. Running test 'isa(leastBittern,bittern). common species name to common family'...
  List = [_]
  
  yes
  | ?-
  Test 'isa(leastBittern,bittern). common species name to common family': Success
---------------------------------------------------------------
130. Running test 'isa(whiteFacedIbis,chihi). common species name to species alone'...
  List = []
  
  yes
  | ?-
  Test 'isa(whiteFacedIbis,chihi). common species name to species alone': Success
---------------------------------------------------------------
131. Running test 'isa(plegadis_falcinellus,threskiornithidae). compound species name to family'...
  List = [_]
  
  yes
  | ?-
  Test 'isa(plegadis_falcinellus,threskiornithidae). compound species name to family': Success
---------------------------------------------------------------
132. Running test 'isa(nyctanassa,nightHeron). genus to genus common name'...
  List = [_]
  
  yes
  | ?-
  Test 'isa(nyctanassa,nightHeron). genus to genus common name': Success
---------------------------------------------------------------
133. Running test 'isa(nyctanassa,egret). genus to wrong genus common name'...
  List = []
  
  yes
  | ?-
  Test 'isa(nyctanassa,egret). genus to wrong genus common name': Success
---------------------------------------------------------------
134. Running test 'isa(nyctanassa_violacea,nightHeron). cspecies to genus common name'...
  List = [_]
  
  yes
  | ?-
  Test 'isa(nyctanassa_violacea,nightHeron). cspecies to genus common name': Success
---------------------------------------------------------------
135. Running test 'isa(nyctanassa_violacea,egret). cspecies to wrong genus common name'...
  List = []
  
  yes
  | ?-
  Test 'isa(nyctanassa_violacea,egret). cspecies to wrong genus common name': Success
---------------------------------------------------------------
136. Running test 'isa(x,X). unknown/'...
  setof(X,isa(x,X),L).
  (1 ms) no
  | ?-
  Test 'isa(x,X). unknown/': Success
---------------------------------------------------------------
137. Running test 'isa(ardea_herodias,X). species'...
  setof(X,isa(ardea_herodias,X),L).
  L = [ardea,ardea_herodias,ardeidae,pelecaniformes]
  
  yes
  | ?-
  Test 'isa(ardea_herodias,X). species': Success
---------------------------------------------------------------
138. Running test 'isa(greatBlueHeron,X). common species'...
  setof(X,isa(greatBlueHeron,X),L).
  L = [ardea,ardea_herodias,ardeidae,pelecaniformes]
  
  yes
  | ?-
  Test 'isa(greatBlueHeron,X). common species': Success
---------------------------------------------------------------
139. Running test 'isa(ixobrychus_exilis,X). compound species'...
  setof(X,isa(ixobrychus_exilis,X),L).
  L = [ardeidae,ixobrychus,ixobrychus_exilis,pelecaniformes]
  
  yes
  | ?-
  Test 'isa(ixobrychus_exilis,X). compound species': Success
---------------------------------------------------------------
140. Running test 'isa(butorides,X). genus'...
  setof(X,isa(butorides,X),L).
  L = [ardeidae,butorides,pelecaniformes]
  
  yes
  | ?-
  Test 'isa(butorides,X). genus': Success
---------------------------------------------------------------
141. Running test 'isa(X,ardeidae). family'...
  setof(X,isa(X,ardeidae),L).
  L = [ardea,ardea_alba,ardea_herodias,ardeidae,botaurus,botaurus_lentiginosus,bubulcus,bubulcus_ibis,butorides,butorides_virescens,egretta,egretta_caerulea,egretta_rufescens,egretta_thula,egretta_tricolor,ixobrychus,ixobrychus_exilis,nyctanassa,nyctanassa_violacea,nycticorax,nycticorax_nycticorax]
  
  yes
  | ?-
  Test 'isa(X,ardeidae). family': Success
---------------------------------------------------------------
142. Running test 'isa(X,eudocimus_albus). compound species'...
  setof(X,isa(X,eudocimus_albus),L).
  L = [eudocimus_albus]
  
  yes
  | ?-
  Test 'isa(X,eudocimus_albus). compound species': Success
---------------------------------------------------------------
143. Running test 'isa(X,bittern). common species (multi)'...
  setof(X,isa(X,bittern),L).
  L = [botaurus,botaurus_lentiginosus,ixobrychus,ixobrychus_exilis]
  
  (1 ms) yes
  | ?-
  Test 'isa(X,bittern). common species (multi)': Success
---------------------------------------------------------------
144. Running test 'countSpecies(botaurus_lentiginosus,1). species'...
  List = [_]
  
  yes
  | ?-
  Test 'countSpecies(botaurus_lentiginosus,1). species': Success
---------------------------------------------------------------
145. Running test 'countSpecies(botaurus,1). single-species genus'...
  List = [_]
  
  yes
  | ?-
  Test 'countSpecies(botaurus,1). single-species genus': Success
---------------------------------------------------------------
146. Running test 'countSpecies(egretta,4). 4-species genus'...
  List = [_]
  
  yes
  | ?-
  Test 'countSpecies(egretta,4). 4-species genus': Success
---------------------------------------------------------------
147. Running test 'countSpecies(ardeidae,12). 12-species family'...
  List = [_]
  
  yes
  | ?-
  Test 'countSpecies(ardeidae,12). 12-species family': Success
---------------------------------------------------------------
148. Running test 'countSpecies(pelecaniformes,18). 18-species order'...
  List = [_]
  
  yes
  | ?-
  Test 'countSpecies(pelecaniformes,18). 18-species order': Success
---------------------------------------------------------------
149. Running test 'countSpecies(x,0). 0-species unknown name'...
  List = [_]
  
  (1 ms) yes
  | ?-
  Test 'countSpecies(x,0). 0-species unknown name': Success
---------------------------------------------------------------
150. Running test 'countSpecies(botaurus_lentiginosus,X). species'...
  setof(X,countSpecies(botaurus_lentiginosus,X),L).
  L = [1]
  
  yes
  | ?-
  Test 'countSpecies(botaurus_lentiginosus,X). species': Success
---------------------------------------------------------------
151. Running test 'countSpecies(botaurus,X). single-species genus'...
  setof(X,countSpecies(botaurus,X),L).
  L = [1]
  
  yes
  | ?-
  Test 'countSpecies(botaurus,X). single-species genus': Success
---------------------------------------------------------------
152. Running test 'countSpecies(egretta,X). 4-species genus'...
  setof(X,countSpecies(egretta,X),L).
  L = [4]
  
  yes
  | ?-
  Test 'countSpecies(egretta,X). 4-species genus': Success
---------------------------------------------------------------
153. Running test 'countSpecies(ardeidae,X). 12-species family'...
  setof(X,countSpecies(ardeidae,X),L).
  L = [12]
  
  yes
  | ?-
  Test 'countSpecies(ardeidae,X). 12-species family': Success
---------------------------------------------------------------
154. Running test 'countSpecies(pelecaniformes,X). 18-species order'...
  setof(X,countSpecies(pelecaniformes,X),L).
  L = [18]
  
  yes
  | ?-
  Test 'countSpecies(pelecaniformes,X). 18-species order': Success
---------------------------------------------------------------
155. Running test 'countSpecies(x,X). 0-species unknown name'...
  setof(X,countSpecies(x,X),L).
  L = [0]
  
  yes
  | ?-
  Test 'countSpecies(x,X). 0-species unknown name': Success
---------------------------------------------------------------
156. Running test 'rangesTo(botaurus_lentiginosus,alberta). simple species'...
  List = [_]
  
  (1 ms) yes
  | ?-
  Test 'rangesTo(botaurus_lentiginosus,alberta). simple species': Success
---------------------------------------------------------------
157. Running test 'rangesTo(botaurus_lentiginosus,canada). species, inferred location'...
  List = [_]
  
  yes
  | ?-
  Test 'rangesTo(botaurus_lentiginosus,canada). species, inferred location': Success
---------------------------------------------------------------
158. Running test 'rangesTo(pelecanus,alberta). simple genus'...
  List = [_]
  
  yes
  | ?-
  Test 'rangesTo(pelecanus,alberta). simple genus': Success
---------------------------------------------------------------
159. Running test 'rangesTo(pelecanus,canada). genus, inferred location'...
  List = [_]
  
  yes
  | ?-
  Test 'rangesTo(pelecanus,canada). genus, inferred location': Success
---------------------------------------------------------------
160. Running test 'rangesTo(pelecanidae,canada). order, inferred location'...
  List = [_]
  
  yes
  | ?-
  Test 'rangesTo(pelecanidae,canada). order, inferred location': Success
---------------------------------------------------------------
161. Running test 'rangesTo(ardea_alba,alberta). speces, wrong location'...
  List = []
  
  yes
  | ?-
  Test 'rangesTo(ardea_alba,alberta). speces, wrong location': Success
---------------------------------------------------------------
162. Running test 'rangesTo(platalea_ajaja,canada). speces, wrong location'...
  List = []
  
  yes
  | ?-
  Test 'rangesTo(platalea_ajaja,canada). speces, wrong location': Success
---------------------------------------------------------------
163. Running test 'rangesTo(botaurus_lentiginosus,X). species, inferred location'...
  setof(X,rangesTo(botaurus_lentiginosus,X),L).
  L = [alberta,canada]
  
  yes
  | ?-
  Test 'rangesTo(botaurus_lentiginosus,X). species, inferred location': Success
---------------------------------------------------------------
164. Running test 'rangesTo(pelecanus,X). simple genus'...
  setof(X,rangesTo(pelecanus,X),L).
  L = [alberta,canada]
  
  yes
  | ?-
  Test 'rangesTo(pelecanus,X). simple genus': Success
---------------------------------------------------------------
165. Running test 'rangesTo(pelecanus,X). genus, inferred location'...
  setof(X,rangesTo(pelecanus,X),L).
  L = [alberta,canada]
  
  yes
  | ?-
  Test 'rangesTo(pelecanus,X). genus, inferred location': Success
---------------------------------------------------------------
166. Running test 'rangesTo(pelecanidae,X). order, inferred location'...
  setof(X,rangesTo(pelecanidae,X),L).
  L = [alberta,canada]
  
  yes
  | ?-
  Test 'rangesTo(pelecanidae,X). order, inferred location': Success
---------------------------------------------------------------
167. Running test 'rangesTo(ardea_alba,alberta). speces, wrong location'...
  setof(X,rangesTo(ardea_alba,alberta),L).
  no
  | ?-
  Test 'rangesTo(ardea_alba,alberta). speces, wrong location': Success
---------------------------------------------------------------
168. Running test 'rangesTo(platalea_ajaja,canada). speces, wrong location'...
  setof(X,rangesTo(platalea_ajaja,canada),L).
  no
  | ?-
  Test 'rangesTo(platalea_ajaja,canada). speces, wrong location': Success
---------------------------------------------------------------
169. Running test 'rangesTo(X,alberta). /alberta'...
  setof(X,rangesTo(X,alberta),L).
  L = [ardea_herodias,botaurus_lentiginosus,nycticorax_nycticorax,pelecanus_erythrorhynchos]
  
  yes
  | ?-
  Test 'rangesTo(X,alberta). /alberta': Success
---------------------------------------------------------------
170. Running test 'rangesTo(X,canada). /canada'...
  setof(X,rangesTo(X,canada),L).
  L = [ardea_alba,ardea_herodias,botaurus_lentiginosus,bubulcus_ibis,butorides_virescens,nycticorax_nycticorax,pelecanus_erythrorhynchos]
  
  yes
  | ?-
  Test 'rangesTo(X,canada). /canada': Success
---------------------------------------------------------------
171. Running test 'rangesTo(X,Y). * / *'...
  setof([X,Y],rangesTo(X,Y),L).
  L = [[ardea_alba,canada],[ardea_herodias,alberta],[ardea_herodias,canada],[botaurus_lentiginosus,alberta],[botaurus_lentiginosus,canada],[bubulcus_ibis,canada],[butorides_virescens,canada],[nycticorax_nycticorax,alberta],[nycticorax_nycticorax,canada],[pelecanus_erythrorhynchos,alberta],[pelecanus_erythrorhynchos,canada]]
  
  yes
  | ?-
  Test 'rangesTo(X,Y). * / *': Success
---------------------------------------------------------------
172. Running test 'habitat(pelecanus_erythrorhynchos,lakePond). true'...
  List = [_]
  
  yes
  | ?-
  Test 'habitat(pelecanus_erythrorhynchos,lakePond). true': Success
---------------------------------------------------------------
173. Running test 'habitat(botaurus_lentiginosus,marsh). true'...
  List = [_]
  
  yes
  | ?-
  Test 'habitat(botaurus_lentiginosus,marsh). true': Success
---------------------------------------------------------------
174. Running test 'habitat(botaurus_lentiginosus,ocean). false'...
  List = []
  
  (1 ms) yes
  | ?-
  Test 'habitat(botaurus_lentiginosus,ocean). false': Success
---------------------------------------------------------------
175. Running test 'habitat(x,ocean). false'...
  List = []
  
  yes
  | ?-
  Test 'habitat(x,ocean). false': Success
---------------------------------------------------------------
176. Running test 'habitat(egretta_tricolor,X). single'...
  setof(X,habitat(egretta_tricolor,X),L).
  L = [marsh]
  
  yes
  | ?-
  Test 'habitat(egretta_tricolor,X). single': Success
---------------------------------------------------------------
177. Running test 'habitat(X,ocean). single'...
  setof(X,habitat(X,ocean),L).
  L = [pelecanus_occidentalis]
  
  yes
  | ?-
  Test 'habitat(X,ocean). single': Success
---------------------------------------------------------------
178. Running test 'habitat(X,marsh). multiple'...
  setof(X,habitat(X,marsh),L).
  L = [ardea_alba,ardea_herodias,botaurus_lentiginosus,bubulcus_ibis,butorides_virescens,egretta_caerulea,egretta_rufescens,egretta_thula,egretta_tricolor,eudocimus_albus,ixobrychus_exilis,nyctanassa_violacea,nycticorax_nycticorax,platalea_ajaja,plegadis_chihi,plegadis_falcinellus]
  
  yes
  | ?-
  Test 'habitat(X,marsh). multiple': Success
---------------------------------------------------------------
179. Running test 'habitat(pelecanus,ocean). genus'...
  List = [_]
  
  yes
  | ?-
  Test 'habitat(pelecanus,ocean). genus': Success
---------------------------------------------------------------
180. Running test 'habitat(pelecaniformes,ocean). order'...
  List = [_]
  
  yes
  | ?-
  Test 'habitat(pelecaniformes,ocean). order': Success
---------------------------------------------------------------
181. Running test 'habitat(pelecaniformes,X). multiple'...
  setof(X,habitat(pelecaniformes,X),L).
  L = [lakePond,marsh,ocean]
  
  yes
  | ?-
  Test 'habitat(pelecaniformes,X). multiple': Success
---------------------------------------------------------------
182. Running test 'food(pelecanus_erythrorhynchos,fish). true'...
  List = [_]
  
  (1 ms) yes
  | ?-
  Test 'food(pelecanus_erythrorhynchos,fish). true': Success
---------------------------------------------------------------
183. Running test 'food(bubulcus_ibis,insects). true'...
  List = [_]
  
  yes
  | ?-
  Test 'food(bubulcus_ibis,insects). true': Success
---------------------------------------------------------------
184. Running test 'food(botaurus_lentiginosus,insects). false'...
  List = []
  
  yes
  | ?-
  Test 'food(botaurus_lentiginosus,insects). false': Success
---------------------------------------------------------------
185. Running test 'food(x,fish). false'...
  List = []
  
  yes
  | ?-
  Test 'food(x,fish). false': Success
---------------------------------------------------------------
186. Running test 'food(egretta_tricolor,X). single'...
  setof(X,food(egretta_tricolor,X),L).
  L = [fish]
  
  yes
  | ?-
  Test 'food(egretta_tricolor,X). single': Success
---------------------------------------------------------------
187. Running test 'food(X,insects). single'...
  setof(X,food(X,insects),L).
  L = [bubulcus_ibis,eudocimus_albus,nyctanassa_violacea,plegadis_chihi,plegadis_falcinellus]
  
  yes
  | ?-
  Test 'food(X,insects). single': Success
---------------------------------------------------------------
188. Running test 'food(pelecanus,fish). genus'...
  List = [_,_]
  
  yes
  | ?-
  Test 'food(pelecanus,fish). genus': Success
---------------------------------------------------------------
189. Running test 'food(pelecaniformes,insects). order'...
  List = [_,_,_,_,_]
  
  yes
  | ?-
  Test 'food(pelecaniformes,insects). order': Success
---------------------------------------------------------------
190. Running test 'food(pelecaniformes,X). multiple'...
  setof(X,food(pelecaniformes,X),L).
  L = [fish,insects]
  
  yes
  | ?-
  Test 'food(pelecaniformes,X). multiple': Success
---------------------------------------------------------------
191. Running test 'nesting(pelecanus_erythrorhynchos,ground). true'...
  List = [_]
  
  yes
  | ?-
  Test 'nesting(pelecanus_erythrorhynchos,ground). true': Success
---------------------------------------------------------------
192. Running test 'nesting(egretta_tricolor,tree). true'...
  List = [_]
  
  yes
  | ?-
  Test 'nesting(egretta_tricolor,tree). true': Success
---------------------------------------------------------------
193. Running test 'nesting(botaurus_lentiginosus,tree). false'...
  List = []
  
  yes
  | ?-
  Test 'nesting(botaurus_lentiginosus,tree). false': Success
---------------------------------------------------------------
194. Running test 'nesting(x,tree). false'...
  List = []
  
  yes
  | ?-
  Test 'nesting(x,tree). false': Success
---------------------------------------------------------------
195. Running test 'nesting(egretta_tricolor,X). single'...
  setof(X,nesting(egretta_tricolor,X),L).
  L = [tree]
  
  yes
  | ?-
  Test 'nesting(egretta_tricolor,X). single': Success
---------------------------------------------------------------
196. Running test 'nesting(X,ground). multi'...
  setof(X,nesting(X,ground),L).
  L = [botaurus_lentiginosus,ixobrychus_exilis,pelecanus_erythrorhynchos,plegadis_chihi,plegadis_falcinellus]
  
  yes
  | ?-
  Test 'nesting(X,ground). multi': Success
---------------------------------------------------------------
197. Running test 'nesting(X,tree). multi'...
  setof(X,nesting(X,tree),L).
  L = [ardea_alba,ardea_herodias,bubulcus_ibis,butorides_virescens,egretta_caerulea,egretta_rufescens,egretta_thula,egretta_tricolor,eudocimus_albus,nyctanassa_violacea,nycticorax_nycticorax,pelecanus_occidentalis,platalea_ajaja]
  
  yes
  | ?-
  Test 'nesting(X,tree). multi': Success
---------------------------------------------------------------
198. Running test 'nesting(pelecanus,ground). genus'...
  List = [_]
  
  yes
  | ?-
  Test 'nesting(pelecanus,ground). genus': Success
---------------------------------------------------------------
199. Running test 'nesting(pelecanus,tree). genus'...
  List = [_]
  
  (1 ms) yes
  | ?-
  Test 'nesting(pelecanus,tree). genus': Success
---------------------------------------------------------------
200. Running test 'nesting(pelecaniformes,tree). order'...
  List = [_,_,_,_,_,_,_,_,_,_,_,_,_]
  
  yes
  | ?-
  Test 'nesting(pelecaniformes,tree). order': Success
---------------------------------------------------------------
201. Running test 'nesting(pelecaniformes,X). multiple'...
  setof(X,nesting(pelecaniformes,X),L).
  L = [ground,tree]
  
  yes
  | ?-
  Test 'nesting(pelecaniformes,X). multiple': Success
---------------------------------------------------------------
202. Running test 'behavior(pelecanus_erythrorhynchos,surfaceDive). true'...
  List = [_]
  
  yes
  | ?-
  Test 'behavior(pelecanus_erythrorhynchos,surfaceDive). true': Success
---------------------------------------------------------------
203. Running test 'behavior(botaurus_lentiginosus,stalking). true'...
  List = [_]
  
  yes
  | ?-
  Test 'behavior(botaurus_lentiginosus,stalking). true': Success
---------------------------------------------------------------
204. Running test 'behavior(botaurus_lentiginosus,aerialDive). false'...
  List = []
  
  yes
  | ?-
  Test 'behavior(botaurus_lentiginosus,aerialDive). false': Success
---------------------------------------------------------------
205. Running test 'behavior(x,stalking). false'...
  List = []
  
  yes
  | ?-
  Test 'behavior(x,stalking). false': Success
---------------------------------------------------------------
206. Running test 'behavior(egretta_tricolor,X). single'...
  setof(X,behavior(egretta_tricolor,X),L).
  L = [stalking]
  
  yes
  | ?-
  Test 'behavior(egretta_tricolor,X). single': Success
---------------------------------------------------------------
207. Running test 'behavior(X,aerialDive). single'...
  setof(X,behavior(X,aerialDive),L).
  L = [pelecanus_occidentalis]
  
  (1 ms) yes
  | ?-
  Test 'behavior(X,aerialDive). single': Success
---------------------------------------------------------------
208. Running test 'behavior(X,stalking). multiple'...
  setof(X,behavior(X,stalking),L).
  L = [ardea_alba,ardea_herodias,botaurus_lentiginosus,butorides_virescens,egretta_caerulea,egretta_rufescens,egretta_thula,egretta_tricolor,ixobrychus_exilis,nyctanassa_violacea,nycticorax_nycticorax]
  
  yes
  | ?-
  Test 'behavior(X,stalking). multiple': Success
---------------------------------------------------------------
209. Running test 'behavior(pelecanus,aerialDive). genus'...
  List = [_]
  
  yes
  | ?-
  Test 'behavior(pelecanus,aerialDive). genus': Success
---------------------------------------------------------------
210. Running test 'behavior(pelecanus,surfaceDive). genus'...
  List = [_]
  
  yes
  | ?-
  Test 'behavior(pelecanus,surfaceDive). genus': Success
---------------------------------------------------------------
211. Running test 'behavior(pelecaniformes,groundForager). order'...
  List = [_]
  
  yes
  | ?-
  Test 'behavior(pelecaniformes,groundForager). order': Success
---------------------------------------------------------------
212. Running test 'behavior(pelecaniformes,X). multiple'...
  setof(X,behavior(pelecaniformes,X),L).
  L = [aerialDive,groundForager,probing,stalking,surfaceDive]
  
  yes
  | ?-
  Test 'behavior(pelecaniformes,X). multiple': Success
---------------------------------------------------------------
213. Running test 'conservation(pelecanus_erythrorhynchos,lc). true'...
  List = [_]
  
  yes
  | ?-
  Test 'conservation(pelecanus_erythrorhynchos,lc). true': Success
---------------------------------------------------------------
214. Running test 'conservation(egretta_rufescens,nt). true'...
  List = [_]
  
  (1 ms) yes
  | ?-
  Test 'conservation(egretta_rufescens,nt). true': Success
---------------------------------------------------------------
215. Running test 'conservation(botaurus_lentiginosus,nt). false'...
  List = []
  
  yes
  | ?-
  Test 'conservation(botaurus_lentiginosus,nt). false': Success
---------------------------------------------------------------
216. Running test 'conservation(x,lc). false'...
  List = []
  
  yes
  | ?-
  Test 'conservation(x,lc). false': Success
---------------------------------------------------------------
217. Running test 'conservation(egretta_tricolor,X). single'...
  setof(X,conservation(egretta_tricolor,X),L).
  L = [lc]
  
  yes
  | ?-
  Test 'conservation(egretta_tricolor,X). single': Success
---------------------------------------------------------------
218. Running test 'conservation(X,nt). single'...
  setof(X,conservation(X,nt),L).
  L = [egretta_rufescens]
  
  yes
  | ?-
  Test 'conservation(X,nt). single': Success
---------------------------------------------------------------
219. Running test 'conservation(X,lc). multiple'...
  setof(X,conservation(X,lc),L).
  L = [ardea_alba,ardea_herodias,botaurus_lentiginosus,bubulcus_ibis,butorides_virescens,egretta_caerulea,egretta_thula,egretta_tricolor,eudocimus_albus,ixobrychus_exilis,nyctanassa_violacea,nycticorax_nycticorax,pelecanus_erythrorhynchos,pelecanus_occidentalis,platalea_ajaja,plegadis_chihi,plegadis_falcinellus]
  
  yes
  | ?-
  Test 'conservation(X,lc). multiple': Success
---------------------------------------------------------------
220. Running test 'conservation(egretta,nt). genus'...
  List = [_]
  
  yes
  | ?-
  Test 'conservation(egretta,nt). genus': Success
---------------------------------------------------------------
221. Running test 'conservation(egretta,lc). genus'...
  List = [_,_,_]
  
  yes
  | ?-
  Test 'conservation(egretta,lc). genus': Success
---------------------------------------------------------------
222. Running test 'conservation(pelecaniformes,nt). order'...
  List = [_]
  
  (1 ms) yes
  | ?-
  Test 'conservation(pelecaniformes,nt). order': Success
---------------------------------------------------------------
223. Running test 'conservation(pelecaniformes,X). multiple'...
  setof(X,conservation(pelecaniformes,X),L).
  L = [lc,nt]
  
  yes
  | ?-
  Test 'conservation(pelecaniformes,X). multiple': Success

<pre>

CPSC 449 Prolog Assignment: Pelecaniformes version 3 (Prolog testing harness version 7).
========================================================================================
     Test                                                                   Result 
     ------------                                                           ------------
  1. order(pelecaniformes). true                                            Success
  2. order(pelecanidae). false                                              Success
  3. order(X).                                                              Success
  4. family(pelecanidae). true                                              Success
  5. family(ardeidae). true                                                 Success
  6. family(threskiornithidae). true                                        Success
  7. family(pelecaniformes). is an order                                    Success
  8. family(X).                                                             Success
  9. genus(botaurus). true                                                  Success
 10. genus(ardea). true                                                     Success
 11. genus(nycticorax). is both a genus and a species                       Success
 12. genus(erythrorhynchos). is a species                                   Success
 13. genus(X).                                                              Success
 14. species(occidentalis). true                                            Success
 15. species(thula). true                                                   Success
 16. species(nycticorax). is both a genus and a species                     Success
 17. species(plegadis). is a genus                                          Success
 18. species(X).                                                            Success
 19. hasParent(plegadis_falcinellus,plegadis). cspecies/genus               Success
 20. hasParent(falcinellus,plegadis). species/genus                         Success
 21. hasParent(nycticorax,ardeidae). genus/family                           Success
 22. hasParent(threskiornithidae,pelecaniformes). family/order              Success
 23. hasParent(falcinellus,ardeidae). species/family                        Success
 24. hasParent(nycticorax,pelecaniformes). genus/order                      Success
 25. hasParent(X,egretta).                                                  Success
 26. hasParent(egretta,ardeidae). genus/family                              Success
 27. hasParent(caerulea,X).                                                 Success
 28. hasParent(X,Y).                                                        Success
 29. hasParent2(plegadis_falcinellus,plegadis). cspecies/genus              Success
 30. hasParent2(falcinellus,plegadis). species/genus                        Success
 31. hasParent2(nycticorax,ardeidae). genus/family                          Success
 32. hasParent2(threskiornithidae,pelecaniformes). family/order             Success
 33. hasParent2(plegadis_falcinellus,ardeidae). cspecies/family             Success
 34. hasParent2(nycticorax,pelecaniformes). genus/order                     Success
 35. hasParent2(X,egretta).                                                 Success
 36. hasParent2(egretta,ardeidae). genus/family                             Success
 37. hasParent2(egretta_caerulea,X).                                        Success
 38. hasParent2(X,Y).                                                       Success
 39. hasCommonName(pelecanus,pelican). order                                Success
 40. hasCommonName(ardea,heron). genus                                      Success
 41. hasCommonName(nycticorax,nightHeron). genus                            Success
 42. hasCommonName(nyctanassa,nightHeron). genus (also above)               Success
 43. hasCommonName(pelecanus_erythrorhynchos,americanWhitePelican). cspeces Success
 44. hasCommonName(erythrorhynchos,americanWhitePelican). raw speces        Success
 45. hasCommonName(pelecanus_erythrorhynchos,brownPelican). cspeces/wrongName Success
 46. hasCommonName(butorides_virescens,greenHeron). cspecies                Success
 47. hasCommonName(nyctanassa_violacea,X). cspecies/                        Success
 48. hasCommonName(X,roseateSpoonbill). /commonName                         Success
 49. hasCommonName(botaurus,lentiginosus,americanBittern). true             Success
 50. hasCommonName(egretta,rufescens,reddishEgret). true                    Success
 51. hasCommonName(egretta,alba,reddishEgret). genus/species mismatch       Success
 52. hasCommonName(egretta,rufescens,snowyEgret). wrong common name         Success
 53. hasCommonName(nycticorax,nycticorax,blackCrownedNightHeron). true      Success
 54. hasCommonName(botaurus,lentiginosus,X).                                Success
 55. hasCommonName(egretta,rufescens,X).                                    Success
 56. hasCommonName(nycticorax,nycticorax,X).                                Success
 57. hasCommonName(X,Y,americanBittern).                                    Success
 58. hasCommonName(X,Y,reddishEgret).                                       Success
 59. hasCommonName(X,Y,blackCrownedNightHeron).                             Success
 60. hasSciName(greatBlueHeron,ardea_herodias). cspeces                     Success
 61. hasSciName(snowyEgret,egretta_thula). cspeces                          Success
 62. hasSciName(snowyEgret,thula). raw speces                               Success
 63. hasSciName(cattleEgret,bubulcus_ibis). cspeces                         Success
 64. hasSciName(cattleEgret,ibis). raw speces                               Success
 65. hasSciName(ibis,eudocimus). genus                                      Success
 66. hasSciName(ibis,plegadis). genus (same as above)                       Success
 67. hasSciName(greatBlueHeron,X). cspecies/                                Success
 68. hasSciName(snowyEgret,X). cspecies/                                    Success
 69. hasSciName(cattleEgret,X). cspecies/                                   Success
 70. hasSciName(X,ardea_herodias). /cspecies                                Success
 71. hasSciName(X,egretta_thula). /cspecies                                 Success
 72. hasSciName(X,bubulcus_ibis). /cspecies                                 Success
 73. hasCompoundName(pelecanus,occidentalis,pelecanus_occidentalis). true   Success
 74. hasCompoundName(egretta,tricolor,egretta_tricolor). true               Success
 75. hasCompoundName(plegadis,chihi,plegadis_chihi). true                   Success
 76. hasCompoundName(plegadis,chihi,egretta_tricolor). wrong name           Success
 77. hasCompoundName(pelecanus,occidentalis,X).                             Success
 78. hasCompoundName(egretta,tricolor,X).                                   Success
 79. hasCompoundName(plegadis,chihi,X).                                     Success
 80. hasCompoundName(X,Y,pelecanus_occidentalis).                           Success
 81. hasCompoundName(X,Y,egretta_tricolor).                                 Success
 82. hasCompoundName(X,Y,plegadis_chihi).                                   Success
 83. synonym(plegadis,plegadis). equal                                      Success
 84. synonym(glossyIbis,plegadis_falcinellus). common/cspecies              Success
 85. synonym(glossyIbis,alcinellus). common/rawSpecies                      Success
 86. synonym(plegadis_falcinellus,glossyIbis). cspecies/common              Success
 87. synonym(falcinellus,glossyIbis). rawSpecies/common                     Success
 88. synonym(glossyIbis,plegadis_falcinellus). common/compound              Success
 89. synonym(plegadis_falcinellus,glossyIbis). compound/common              Success
 90. synonym(bittern,ixobrychus). common/genus                              Success
 91. synonym(ixobrychus,botaurus). genus/genus with same common name        Success
 92. synonym(bittern,botaurus). common/genus (same as above)                Success
 93. synonym(heron,egret). both are names for egretta                       Success
 94. synonym(greenHeron,X). common/                                         Success
 95. synonym(X,greenHeron). /common                                         Success
 96. synonym(butorides_virescens,X). cspecies/                              Success
 97. synonym(X,butorides_virescens). /cspecies                              Success
 98. synonym(X,heron). /common that maps to 3 genera                        Success
 99. synonym(heron,X). /common that maps to 3 genera                        Success
100. isaStrict(exilis,exilis). equal species                                Success
101. isaStrict(ardeidae,ardeidae). equal families                           Success
102. isaStrict(x,x). equal but unknown                                      Success
103. isaStrict(ixobrychus_exilis,ixobrychus). cspecies to genus             Success
104. isaStrict(ixobrychus_exilis,ardeidae). cspecies to family              Success
105. isaStrict(ixobrychus_exilis,pelecaniformes). cspecies to top           Success
106. isaStrict(ixobrychus_exilis,botaurus). cspecies to wrong genus         Success
107. isaStrict(ixobrychus_exilis,pelecanidae). cspecies to wrong family     Success
108. isaStrict(exilis,ixobrychus). raw species to genus                     Success
109. isaStrict(ixobrychus_exilis,X).                                        Success
110. isa(exilis,exilis). equal raw species                                  Success
111. isa(ardeidae,ardeidae). equal families                                 Success
112. isa(x,x). equal but unknown name                                       Success
113. isa(ixobrychus_exilis,ixobrychus). cspecies to genus                   Success
114. isa(ixobrychus_exilis,ardeidae). cspecies to family                    Success
115. isa(ixobrychus_exilis,pelecaniformes). cspecies to top                 Success
116. isa(ixobrychus_exilis,botaurus). cspecies to wrong genus               Success
117. isa(ixobrychus_exilis,pelecanidae). cspecies to wrong family           Success
118. isa(exilis,ixobrychus). raw species to genus                           Success
119. isa(ixobrychus_exilis,X).                                              Success
120. isa(X,pelecanidae).                                                    Success
121. isa(plegadis,ibis). equal genera/common                                Success
122. isa(plegadis_chihi,ibis). equal cspecies/common                        Success
123. isa(cattleEgret,cattleEgret). equal common/common                      Success
124. isa(chihi,ibis). equal rawSpecies/common                               Success
125. isa(platalea_ajaja,pelecaniformes). bottom to top                      Success
126. isa(cattleEgret,bubulcus_ibis). equal commonName to compound species   Success
127. isa(whiteIbis,eudocimus). common species name to genus                 Success
128. isa(leastBittern,ardeidae). common species name to family              Success
129. isa(leastBittern,bittern). common species name to common family        Success
130. isa(whiteFacedIbis,chihi). common species name to species alone        Success
131. isa(plegadis_falcinellus,threskiornithidae). compound species name to family Success
132. isa(nyctanassa,nightHeron). genus to genus common name                 Success
133. isa(nyctanassa,egret). genus to wrong genus common name                Success
134. isa(nyctanassa_violacea,nightHeron). cspecies to genus common name     Success
135. isa(nyctanassa_violacea,egret). cspecies to wrong genus common name    Success
136. isa(x,X). unknown/                                                     Success
137. isa(ardea_herodias,X). species                                         Success
138. isa(greatBlueHeron,X). common species                                  Success
139. isa(ixobrychus_exilis,X). compound species                             Success
140. isa(butorides,X). genus                                                Success
141. isa(X,ardeidae). family                                                Success
142. isa(X,eudocimus_albus). compound species                               Success
143. isa(X,bittern). common species (multi)                                 Success
144. countSpecies(botaurus_lentiginosus,1). species                         Success
145. countSpecies(botaurus,1). single-species genus                         Success
146. countSpecies(egretta,4). 4-species genus                               Success
147. countSpecies(ardeidae,12). 12-species family                           Success
148. countSpecies(pelecaniformes,18). 18-species order                      Success
149. countSpecies(x,0). 0-species unknown name                              Success
150. countSpecies(botaurus_lentiginosus,X). species                         Success
151. countSpecies(botaurus,X). single-species genus                         Success
152. countSpecies(egretta,X). 4-species genus                               Success
153. countSpecies(ardeidae,X). 12-species family                            Success
154. countSpecies(pelecaniformes,X). 18-species order                       Success
155. countSpecies(x,X). 0-species unknown name                              Success
156. rangesTo(botaurus_lentiginosus,alberta). simple species                Success
157. rangesTo(botaurus_lentiginosus,canada). species, inferred location     Success
158. rangesTo(pelecanus,alberta). simple genus                              Success
159. rangesTo(pelecanus,canada). genus, inferred location                   Success
160. rangesTo(pelecanidae,canada). order, inferred location                 Success
161. rangesTo(ardea_alba,alberta). speces, wrong location                   Success
162. rangesTo(platalea_ajaja,canada). speces, wrong location                Success
163. rangesTo(botaurus_lentiginosus,X). species, inferred location          Success
164. rangesTo(pelecanus,X). simple genus                                    Success
165. rangesTo(pelecanus,X). genus, inferred location                        Success
166. rangesTo(pelecanidae,X). order, inferred location                      Success
167. rangesTo(ardea_alba,alberta). speces, wrong location                   Success
168. rangesTo(platalea_ajaja,canada). speces, wrong location                Success
169. rangesTo(X,alberta). /alberta                                          Success
170. rangesTo(X,canada). /canada                                            Success
171. rangesTo(X,Y). * / *                                                   Success
172. habitat(pelecanus_erythrorhynchos,lakePond). true                      Success
173. habitat(botaurus_lentiginosus,marsh). true                             Success
174. habitat(botaurus_lentiginosus,ocean). false                            Success
175. habitat(x,ocean). false                                                Success
176. habitat(egretta_tricolor,X). single                                    Success
177. habitat(X,ocean). single                                               Success
178. habitat(X,marsh). multiple                                             Success
179. habitat(pelecanus,ocean). genus                                        Success
180. habitat(pelecaniformes,ocean). order                                   Success
181. habitat(pelecaniformes,X). multiple                                    Success
182. food(pelecanus_erythrorhynchos,fish). true                             Success
183. food(bubulcus_ibis,insects). true                                      Success
184. food(botaurus_lentiginosus,insects). false                             Success
185. food(x,fish). false                                                    Success
186. food(egretta_tricolor,X). single                                       Success
187. food(X,insects). single                                                Success
188. food(pelecanus,fish). genus                                            Success
189. food(pelecaniformes,insects). order                                    Success
190. food(pelecaniformes,X). multiple                                       Success
191. nesting(pelecanus_erythrorhynchos,ground). true                        Success
192. nesting(egretta_tricolor,tree). true                                   Success
193. nesting(botaurus_lentiginosus,tree). false                             Success
194. nesting(x,tree). false                                                 Success
195. nesting(egretta_tricolor,X). single                                    Success
196. nesting(X,ground). multi                                               Success
197. nesting(X,tree). multi                                                 Success
198. nesting(pelecanus,ground). genus                                       Success
199. nesting(pelecanus,tree). genus                                         Success
200. nesting(pelecaniformes,tree). order                                    Success
201. nesting(pelecaniformes,X). multiple                                    Success
202. behavior(pelecanus_erythrorhynchos,surfaceDive). true                  Success
203. behavior(botaurus_lentiginosus,stalking). true                         Success
204. behavior(botaurus_lentiginosus,aerialDive). false                      Success
205. behavior(x,stalking). false                                            Success
206. behavior(egretta_tricolor,X). single                                   Success
207. behavior(X,aerialDive). single                                         Success
208. behavior(X,stalking). multiple                                         Success
209. behavior(pelecanus,aerialDive). genus                                  Success
210. behavior(pelecanus,surfaceDive). genus                                 Success
211. behavior(pelecaniformes,groundForager). order                          Success
212. behavior(pelecaniformes,X). multiple                                   Success
213. conservation(pelecanus_erythrorhynchos,lc). true                       Success
214. conservation(egretta_rufescens,nt). true                               Success
215. conservation(botaurus_lentiginosus,nt). false                          Success
216. conservation(x,lc). false                                              Success
217. conservation(egretta_tricolor,X). single                               Success
218. conservation(X,nt). single                                             Success
219. conservation(X,lc). multiple                                           Success
220. conservation(egretta,nt). genus                                        Success
221. conservation(egretta,lc). genus                                        Success
222. conservation(pelecaniformes,nt). order                                 Success
223. conservation(pelecaniformes,X). multiple                               Success

Summary:
223 Success                                 
---
223     Total Tests (version 3)
  0/0   Strict Tests Passed
223/223 Non-Strict Tests Passed

Nominal mark: 4.0 (4.00)
</pre>
Tszs-MBP:Prolog tszyeunglam$ java -jar ptestpelecaniformes.jar -prolog /opt/local/bin/gprolog pelecaniformes.pl
Prolog testing harness version 7
CPSC 449 Prolog Assignment: Pelecaniformes version 3 (Prolog testing harness version 7).
---------------------------------------------------------------
  1. Running test 'order(pelecaniformes). true'...
  Executing: /opt/local/bin/gprolog --c pelecaniformes.pl
  
  List = [_]
  
  yes
  | ?-
  Test 'order(pelecaniformes). true': Success
---------------------------------------------------------------
  2. Running test 'order(pelecanidae). false'...
  List = []
  
  yes
  | ?-
  Test 'order(pelecanidae). false': Success
---------------------------------------------------------------
  3. Running test 'order(X).'...
  setof(X,order(X),L).
  L = [pelecaniformes]
  
  yes
  | ?-
  Test 'order(X).': Success
---------------------------------------------------------------
  4. Running test 'family(pelecanidae). true'...
  List = [_]
  
  yes
  | ?-
  Test 'family(pelecanidae). true': Success
---------------------------------------------------------------
  5. Running test 'family(ardeidae). true'...
  List = [_]
  
  yes
  | ?-
  Test 'family(ardeidae). true': Success
---------------------------------------------------------------
  6. Running test 'family(threskiornithidae). true'...
  List = [_]
  
  (1 ms) yes
  | ?-
  Test 'family(threskiornithidae). true': Success
---------------------------------------------------------------
  7. Running test 'family(pelecaniformes). is an order'...
  List = []
  
  yes
  | ?-
  Test 'family(pelecaniformes). is an order': Success
---------------------------------------------------------------
  8. Running test 'family(X).'...
  setof(X,family(X),L).
  L = [ardeidae,pelecanidae,threskiornithidae]
  
  yes
  | ?-
  Test 'family(X).': Success
---------------------------------------------------------------
  9. Running test 'genus(botaurus). true'...
  List = [_]
  
  yes
  | ?-
  Test 'genus(botaurus). true': Success
---------------------------------------------------------------
 10. Running test 'genus(ardea). true'...
  List = [_]
  
  yes
  | ?-
  Test 'genus(ardea). true': Success
---------------------------------------------------------------
 11. Running test 'genus(nycticorax). is both a genus and a species'...
  List = [_]
  
  yes
  | ?-
  Test 'genus(nycticorax). is both a genus and a species': Success
---------------------------------------------------------------
 12. Running test 'genus(erythrorhynchos). is a species'...
  List = []
  
  yes
  | ?-
  Test 'genus(erythrorhynchos). is a species': Success
---------------------------------------------------------------
 13. Running test 'genus(X).'...
  setof(X,genus(X),L).
  L = [ardea,botaurus,bubulcus,butorides,egretta,eudocimus,ixobrychus,nyctanassa,nycticorax,pelecanus,platalea,plegadis]
  
  yes
  | ?-
  Test 'genus(X).': Success
---------------------------------------------------------------
 14. Running test 'species(occidentalis). true'...
  List = [_]
  
  yes
  | ?-
  Test 'species(occidentalis). true': Success
---------------------------------------------------------------
 15. Running test 'species(thula). true'...
  List = [_]
  
  (1 ms) yes
  | ?-
  Test 'species(thula). true': Success
---------------------------------------------------------------
 16. Running test 'species(nycticorax). is both a genus and a species'...
  List = [_]
  
  yes
  | ?-
  Test 'species(nycticorax). is both a genus and a species': Success
---------------------------------------------------------------
 17. Running test 'species(plegadis). is a genus'...
  List = []
  
  yes
  | ?-
  Test 'species(plegadis). is a genus': Success
---------------------------------------------------------------
 18. Running test 'species(X).'...
  setof(X,species(X),L).
  L = [ajaja,alba,albus,caerulea,chihi,erythrorhynchos,exilis,falcinellus,herodias,ibis,lentiginosus,nycticorax,occidentalis,rufescens,thula,tricolor,violacea,virescens]
  
  yes
  | ?-
  Test 'species(X).': Success
---------------------------------------------------------------
 19. Running test 'hasParent(plegadis_falcinellus,plegadis). cspecies/genus'...
  List = []
  
  yes
  | ?-
  Test 'hasParent(plegadis_falcinellus,plegadis). cspecies/genus': Success
---------------------------------------------------------------
 20. Running test 'hasParent(falcinellus,plegadis). species/genus'...
  List = [_]
  
  yes
  | ?-
  Test 'hasParent(falcinellus,plegadis). species/genus': Success
---------------------------------------------------------------
 21. Running test 'hasParent(nycticorax,ardeidae). genus/family'...
  List = [_]
  
  yes
  | ?-
  Test 'hasParent(nycticorax,ardeidae). genus/family': Success
---------------------------------------------------------------
 22. Running test 'hasParent(threskiornithidae,pelecaniformes). family/order'...
  List = [_]
  
  yes
  | ?-
  Test 'hasParent(threskiornithidae,pelecaniformes). family/order': Success
---------------------------------------------------------------
 23. Running test 'hasParent(falcinellus,ardeidae). species/family'...
  List = []
  
  (1 ms) yes
  | ?-
  Test 'hasParent(falcinellus,ardeidae). species/family': Success
---------------------------------------------------------------
 24. Running test 'hasParent(nycticorax,pelecaniformes). genus/order'...
  List = []
  
  yes
  | ?-
  Test 'hasParent(nycticorax,pelecaniformes). genus/order': Success
---------------------------------------------------------------
 25. Running test 'hasParent(X,egretta).'...
  setof(X,hasParent(X,egretta),L).
  L = [caerulea,rufescens,thula,tricolor]
  
  yes
  | ?-
  Test 'hasParent(X,egretta).': Success
---------------------------------------------------------------
 26. Running test 'hasParent(egretta,ardeidae). genus/family'...
  List = [_]
  
  yes
  | ?-
  Test 'hasParent(egretta,ardeidae). genus/family': Success
---------------------------------------------------------------
 27. Running test 'hasParent(caerulea,X).'...
  setof(X,hasParent(caerulea,X),L).
  L = [egretta]
  
  yes
  | ?-
  Test 'hasParent(caerulea,X).': Success
---------------------------------------------------------------
 28. Running test 'hasParent(X,Y).'...
  setof([X,Y],hasParent(X,Y),L).
  L = [[ajaja,platalea],[alba,ardea],[albus,eudocimus],[ardea,ardeidae],[ardeidae,pelecaniformes],[botaurus,ardeidae],[bubulcus,ardeidae],[butorides,ardeidae],[caerulea,egretta],[chihi,plegadis],[egretta,ardeidae],[erythrorhynchos,pelecanus],[eudocimus,threskiornithidae],[exilis,ixobrychus],[falcinellus,plegadis],[herodias,ardea],[ibis,bubulcus],[ixobrychus,ardeidae],[lentiginosus,botaurus],[nyctanassa,ardeidae],[nycticorax,ardeidae],[nycticorax,nycticorax],[occidentalis,pelecanus],[pelecanidae,pelecaniformes],[pelecanus,pelecanidae],[platalea,threskiornithidae],[plegadis,threskiornithidae],[rufescens,egretta],[threskiornithidae,pelecaniformes],[thula,egretta],[tricolor,egretta],[violacea,nyctanassa],[virescens,butorides]]
  
  yes
  | ?-
  Test 'hasParent(X,Y).': Success
---------------------------------------------------------------
 29. Running test 'hasParent2(plegadis_falcinellus,plegadis). cspecies/genus'...
  List = [_]
  
  yes
  | ?-
  Test 'hasParent2(plegadis_falcinellus,plegadis). cspecies/genus': Success
---------------------------------------------------------------
 30. Running test 'hasParent2(falcinellus,plegadis). species/genus'...
  List = []
  
  yes
  | ?-
  Test 'hasParent2(falcinellus,plegadis). species/genus': Success
---------------------------------------------------------------
 31. Running test 'hasParent2(nycticorax,ardeidae). genus/family'...
  List = [_]
  
  yes
  | ?-
  Test 'hasParent2(nycticorax,ardeidae). genus/family': Success
---------------------------------------------------------------
 32. Running test 'hasParent2(threskiornithidae,pelecaniformes). family/order'...
  List = [_]
  
  yes
  | ?-
  Test 'hasParent2(threskiornithidae,pelecaniformes). family/order': Success
---------------------------------------------------------------
 33. Running test 'hasParent2(plegadis_falcinellus,ardeidae). cspecies/family'...
  List = []
  
  yes
  | ?-
  Test 'hasParent2(plegadis_falcinellus,ardeidae). cspecies/family': Success
---------------------------------------------------------------
 34. Running test 'hasParent2(nycticorax,pelecaniformes). genus/order'...
  List = []
  
  yes
  | ?-
  Test 'hasParent2(nycticorax,pelecaniformes). genus/order': Success
---------------------------------------------------------------
 35. Running test 'hasParent2(X,egretta).'...
  setof(X,hasParent2(X,egretta),L).
  L = [egretta_caerulea,egretta_rufescens,egretta_thula,egretta_tricolor]
  
  yes
  | ?-
  Test 'hasParent2(X,egretta).': Success
---------------------------------------------------------------
 36. Running test 'hasParent2(egretta,ardeidae). genus/family'...
  List = [_]
  
  yes
  | ?-
  Test 'hasParent2(egretta,ardeidae). genus/family': Success
---------------------------------------------------------------
 37. Running test 'hasParent2(egretta_caerulea,X).'...
  setof(X,hasParent2(egretta_caerulea,X),L).
  L = [egretta]
  
  yes
  | ?-
  Test 'hasParent2(egretta_caerulea,X).': Success
---------------------------------------------------------------
 38. Running test 'hasParent2(X,Y).'...
  setof([X,Y],hasParent2(X,Y),L).
  L = [[ardea,ardeidae],[ardea_alba,ardea],[ardea_herodias,ardea],[ardeidae,pelecaniformes],[botaurus,ardeidae],[botaurus_lentiginosus,botaurus],[bubulcus,ardeidae],[bubulcus_ibis,bubulcus],[butorides,ardeidae],[butorides_virescens,butorides],[egretta,ardeidae],[egretta_caerulea,egretta],[egretta_rufescens,egretta],[egretta_thula,egretta],[egretta_tricolor,egretta],[eudocimus,threskiornithidae],[eudocimus_albus,eudocimus],[ixobrychus,ardeidae],[ixobrychus_exilis,ixobrychus],[nyctanassa,ardeidae],[nyctanassa_violacea,nyctanassa],[nycticorax,ardeidae],[nycticorax_nycticorax,nycticorax],[pelecanidae,pelecaniformes],[pelecanus,pelecanidae],[pelecanus_erythrorhynchos,pelecanus],[pelecanus_occidentalis,pelecanus],[platalea,threskiornithidae],[platalea_ajaja,platalea],[plegadis,threskiornithidae],[plegadis_chihi,plegadis],[plegadis_falcinellus,plegadis],[threskiornithidae,pelecaniformes]]
  
  (1 ms) yes
  | ?-
  Test 'hasParent2(X,Y).': Success
---------------------------------------------------------------
 39. Running test 'hasCommonName(pelecanus,pelican). order'...
  List = [_]
  
  yes
  | ?-
  Test 'hasCommonName(pelecanus,pelican). order': Success
---------------------------------------------------------------
 40. Running test 'hasCommonName(ardea,heron). genus'...
  List = [_]
  
  yes
  | ?-
  Test 'hasCommonName(ardea,heron). genus': Success
---------------------------------------------------------------
 41. Running test 'hasCommonName(nycticorax,nightHeron). genus'...
  List = [_]
  
  yes
  | ?-
  Test 'hasCommonName(nycticorax,nightHeron). genus': Success
---------------------------------------------------------------
 42. Running test 'hasCommonName(nyctanassa,nightHeron). genus (also above)'...
  List = [_]
  
  yes
  | ?-
  Test 'hasCommonName(nyctanassa,nightHeron). genus (also above)': Success
---------------------------------------------------------------
 43. Running test 'hasCommonName(pelecanus_erythrorhynchos,americanWhitePelican). cspeces'...
  List = [_]
  
  yes
  | ?-
  Test 'hasCommonName(pelecanus_erythrorhynchos,americanWhitePelican). cspeces': Success
---------------------------------------------------------------
 44. Running test 'hasCommonName(erythrorhynchos,americanWhitePelican). raw speces'...
  List = []
  
  yes
  | ?-
  Test 'hasCommonName(erythrorhynchos,americanWhitePelican). raw speces': Success
---------------------------------------------------------------
 45. Running test 'hasCommonName(pelecanus_erythrorhynchos,brownPelican). cspeces/wrongName'...
  List = []
  
  yes
  | ?-
  Test 'hasCommonName(pelecanus_erythrorhynchos,brownPelican). cspeces/wrongName': Success
---------------------------------------------------------------
 46. Running test 'hasCommonName(butorides_virescens,greenHeron). cspecies'...
  List = [_]
  
  yes
  | ?-
  Test 'hasCommonName(butorides_virescens,greenHeron). cspecies': Success
---------------------------------------------------------------
 47. Running test 'hasCommonName(nyctanassa_violacea,X). cspecies/'...
  setof(X,hasCommonName(nyctanassa_violacea,X),L).
  L = [yellowCrownedNightHeron]
  
  yes
  | ?-
  Test 'hasCommonName(nyctanassa_violacea,X). cspecies/': Success
---------------------------------------------------------------
 48. Running test 'hasCommonName(X,roseateSpoonbill). /commonName'...
  setof(X,hasCommonName(X,roseateSpoonbill),L).
  L = [platalea_ajaja]
  
  yes
  | ?-
  Test 'hasCommonName(X,roseateSpoonbill). /commonName': Success
---------------------------------------------------------------
 49. Running test 'hasCommonName(botaurus,lentiginosus,americanBittern). true'...
  List = [_]
  
  yes
  | ?-
  Test 'hasCommonName(botaurus,lentiginosus,americanBittern). true': Success
---------------------------------------------------------------
 50. Running test 'hasCommonName(egretta,rufescens,reddishEgret). true'...
  List = [_]
  
  yes
  | ?-
  Test 'hasCommonName(egretta,rufescens,reddishEgret). true': Success
---------------------------------------------------------------
 51. Running test 'hasCommonName(egretta,alba,reddishEgret). genus/species mismatch'...
  List = []
  
  yes
  | ?-
  Test 'hasCommonName(egretta,alba,reddishEgret). genus/species mismatch': Success
---------------------------------------------------------------
 52. Running test 'hasCommonName(egretta,rufescens,snowyEgret). wrong common name'...
  List = []
  
  yes
  | ?-
  Test 'hasCommonName(egretta,rufescens,snowyEgret). wrong common name': Success
---------------------------------------------------------------
 53. Running test 'hasCommonName(nycticorax,nycticorax,blackCrownedNightHeron). true'...
  List = [_]
  
  yes
  | ?-
  Test 'hasCommonName(nycticorax,nycticorax,blackCrownedNightHeron). true': Success
---------------------------------------------------------------
 54. Running test 'hasCommonName(botaurus,lentiginosus,X).'...
  setof(X,hasCommonName(botaurus,lentiginosus,X),L).
  L = [americanBittern]
  
  (1 ms) yes
  | ?-
  Test 'hasCommonName(botaurus,lentiginosus,X).': Success
---------------------------------------------------------------
 55. Running test 'hasCommonName(egretta,rufescens,X).'...
  setof(X,hasCommonName(egretta,rufescens,X),L).
  L = [reddishEgret]
  
  yes
  | ?-
  Test 'hasCommonName(egretta,rufescens,X).': Success
---------------------------------------------------------------
 56. Running test 'hasCommonName(nycticorax,nycticorax,X).'...
  setof(X,hasCommonName(nycticorax,nycticorax,X),L).
  L = [blackCrownedNightHeron]
  
  yes
  | ?-
  Test 'hasCommonName(nycticorax,nycticorax,X).': Success
---------------------------------------------------------------
 57. Running test 'hasCommonName(X,Y,americanBittern).'...
  setof([X,Y],hasCommonName(X,Y,americanBittern),L).
  L = [[botaurus,lentiginosus]]
  
  yes
  | ?-
  Test 'hasCommonName(X,Y,americanBittern).': Success
---------------------------------------------------------------
 58. Running test 'hasCommonName(X,Y,reddishEgret).'...
  setof([X,Y],hasCommonName(X,Y,reddishEgret),L).
  L = [[egretta,rufescens]]
  
  yes
  | ?-
  Test 'hasCommonName(X,Y,reddishEgret).': Success
---------------------------------------------------------------
 59. Running test 'hasCommonName(X,Y,blackCrownedNightHeron).'...
  setof([X,Y],hasCommonName(X,Y,blackCrownedNightHeron),L).
  L = [[nycticorax,nycticorax]]
  
  yes
  | ?-
  Test 'hasCommonName(X,Y,blackCrownedNightHeron).': Success
---------------------------------------------------------------
 60. Running test 'hasSciName(greatBlueHeron,ardea_herodias). cspeces'...
  List = [_]
  
  yes
  | ?-
  Test 'hasSciName(greatBlueHeron,ardea_herodias). cspeces': Success
---------------------------------------------------------------
 61. Running test 'hasSciName(snowyEgret,egretta_thula). cspeces'...
  List = [_]
  
  yes
  | ?-
  Test 'hasSciName(snowyEgret,egretta_thula). cspeces': Success
---------------------------------------------------------------
 62. Running test 'hasSciName(snowyEgret,thula). raw speces'...
  List = []
  
  yes
  | ?-
  Test 'hasSciName(snowyEgret,thula). raw speces': Success
---------------------------------------------------------------
 63. Running test 'hasSciName(cattleEgret,bubulcus_ibis). cspeces'...
  List = [_]
  
  yes
  | ?-
  Test 'hasSciName(cattleEgret,bubulcus_ibis). cspeces': Success
---------------------------------------------------------------
 64. Running test 'hasSciName(cattleEgret,ibis). raw speces'...
  List = []
  
  yes
  | ?-
  Test 'hasSciName(cattleEgret,ibis). raw speces': Success
---------------------------------------------------------------
 65. Running test 'hasSciName(ibis,eudocimus). genus'...
  List = [_]
  
  yes
  | ?-
  Test 'hasSciName(ibis,eudocimus). genus': Success
---------------------------------------------------------------
 66. Running test 'hasSciName(ibis,plegadis). genus (same as above)'...
  List = [_]
  
  yes
  | ?-
  Test 'hasSciName(ibis,plegadis). genus (same as above)': Success
---------------------------------------------------------------
 67. Running test 'hasSciName(greatBlueHeron,X). cspecies/'...
  setof(X,hasSciName(greatBlueHeron,X),L).
  L = [ardea_herodias]
  
  yes
  | ?-
  Test 'hasSciName(greatBlueHeron,X). cspecies/': Success
---------------------------------------------------------------
 68. Running test 'hasSciName(snowyEgret,X). cspecies/'...
  setof(X,hasSciName(snowyEgret,X),L).
  L = [egretta_thula]
  
  yes
  | ?-
  Test 'hasSciName(snowyEgret,X). cspecies/': Success
---------------------------------------------------------------
 69. Running test 'hasSciName(cattleEgret,X). cspecies/'...
  setof(X,hasSciName(cattleEgret,X),L).
  L = [bubulcus_ibis]
  
  yes
  | ?-
  Test 'hasSciName(cattleEgret,X). cspecies/': Success
---------------------------------------------------------------
 70. Running test 'hasSciName(X,ardea_herodias). /cspecies'...
  setof(X,hasSciName(X,ardea_herodias),L).
  L = [greatBlueHeron]
  
  (1 ms) yes
  | ?-
  Test 'hasSciName(X,ardea_herodias). /cspecies': Success
---------------------------------------------------------------
 71. Running test 'hasSciName(X,egretta_thula). /cspecies'...
  setof(X,hasSciName(X,egretta_thula),L).
  L = [snowyEgret]
  
  yes
  | ?-
  Test 'hasSciName(X,egretta_thula). /cspecies': Success
---------------------------------------------------------------
 72. Running test 'hasSciName(X,bubulcus_ibis). /cspecies'...
  setof(X,hasSciName(X,bubulcus_ibis),L).
  L = [cattleEgret]
  
  yes
  | ?-
  Test 'hasSciName(X,bubulcus_ibis). /cspecies': Success
---------------------------------------------------------------
 73. Running test 'hasCompoundName(pelecanus,occidentalis,pelecanus_occidentalis). true'...
  List = [_]
  
  yes
  | ?-
  Test 'hasCompoundName(pelecanus,occidentalis,pelecanus_occidentalis). true': Success
---------------------------------------------------------------
 74. Running test 'hasCompoundName(egretta,tricolor,egretta_tricolor). true'...
  List = [_]
  
  yes
  | ?-
  Test 'hasCompoundName(egretta,tricolor,egretta_tricolor). true': Success
---------------------------------------------------------------
 75. Running test 'hasCompoundName(plegadis,chihi,plegadis_chihi). true'...
  List = [_]
  
  yes
  | ?-
  Test 'hasCompoundName(plegadis,chihi,plegadis_chihi). true': Success
---------------------------------------------------------------
 76. Running test 'hasCompoundName(plegadis,chihi,egretta_tricolor). wrong name'...
  List = []
  
  yes
  | ?-
  Test 'hasCompoundName(plegadis,chihi,egretta_tricolor). wrong name': Success
---------------------------------------------------------------
 77. Running test 'hasCompoundName(pelecanus,occidentalis,X).'...
  setof(X,hasCompoundName(pelecanus,occidentalis,X),L).
  L = [pelecanus_occidentalis]
  
  yes
  | ?-
  Test 'hasCompoundName(pelecanus,occidentalis,X).': Success
---------------------------------------------------------------
 78. Running test 'hasCompoundName(egretta,tricolor,X).'...
  setof(X,hasCompoundName(egretta,tricolor,X),L).
  L = [egretta_tricolor]
  
  (1 ms) yes
  | ?-
  Test 'hasCompoundName(egretta,tricolor,X).': Success
---------------------------------------------------------------
 79. Running test 'hasCompoundName(plegadis,chihi,X).'...
  setof(X,hasCompoundName(plegadis,chihi,X),L).
  L = [plegadis_chihi]
  
  yes
  | ?-
  Test 'hasCompoundName(plegadis,chihi,X).': Success
---------------------------------------------------------------
 80. Running test 'hasCompoundName(X,Y,pelecanus_occidentalis).'...
  setof([X,Y],hasCompoundName(X,Y,pelecanus_occidentalis),L).
  L = [[pelecanus,occidentalis]]
  
  yes
  | ?-
  Test 'hasCompoundName(X,Y,pelecanus_occidentalis).': Success
---------------------------------------------------------------
 81. Running test 'hasCompoundName(X,Y,egretta_tricolor).'...
  setof([X,Y],hasCompoundName(X,Y,egretta_tricolor),L).
  L = [[egretta,tricolor]]
  
  yes
  | ?-
  Test 'hasCompoundName(X,Y,egretta_tricolor).': Success
---------------------------------------------------------------
 82. Running test 'hasCompoundName(X,Y,plegadis_chihi).'...
  setof([X,Y],hasCompoundName(X,Y,plegadis_chihi),L).
  L = [[plegadis,chihi]]
  
  yes
  | ?-
  Test 'hasCompoundName(X,Y,plegadis_chihi).': Success
---------------------------------------------------------------
 83. Running test 'synonym(plegadis,plegadis). equal'...
  List = []
  
  yes
  | ?-
  Test 'synonym(plegadis,plegadis). equal': Success
---------------------------------------------------------------
 84. Running test 'synonym(glossyIbis,plegadis_falcinellus). common/cspecies'...
  List = [_]
  
  (1 ms) yes
  | ?-
  Test 'synonym(glossyIbis,plegadis_falcinellus). common/cspecies': Success
---------------------------------------------------------------
 85. Running test 'synonym(glossyIbis,alcinellus). common/rawSpecies'...
  List = []
  
  yes
  | ?-
  Test 'synonym(glossyIbis,alcinellus). common/rawSpecies': Success
---------------------------------------------------------------
 86. Running test 'synonym(plegadis_falcinellus,glossyIbis). cspecies/common'...
  List = [_]
  
  yes
  | ?-
  Test 'synonym(plegadis_falcinellus,glossyIbis). cspecies/common': Success
---------------------------------------------------------------
 87. Running test 'synonym(falcinellus,glossyIbis). rawSpecies/common'...
  List = []
  
  yes
  | ?-
  Test 'synonym(falcinellus,glossyIbis). rawSpecies/common': Success
---------------------------------------------------------------
 88. Running test 'synonym(glossyIbis,plegadis_falcinellus). common/compound'...
  List = [_]
  
  yes
  | ?-
  Test 'synonym(glossyIbis,plegadis_falcinellus). common/compound': Success
---------------------------------------------------------------
 89. Running test 'synonym(plegadis_falcinellus,glossyIbis). compound/common'...
  List = [_]
  
  yes
  | ?-
  Test 'synonym(plegadis_falcinellus,glossyIbis). compound/common': Success
---------------------------------------------------------------
 90. Running test 'synonym(bittern,ixobrychus). common/genus'...
  List = [_]
  
  yes
  | ?-
  Test 'synonym(bittern,ixobrychus). common/genus': Success
---------------------------------------------------------------
 91. Running test 'synonym(ixobrychus,botaurus). genus/genus with same common name'...
  List = []
  
  yes
  | ?-
  Test 'synonym(ixobrychus,botaurus). genus/genus with same common name': Success
---------------------------------------------------------------
 92. Running test 'synonym(bittern,botaurus). common/genus (same as above)'...
  List = [_]
  
  (1 ms) yes
  | ?-
  Test 'synonym(bittern,botaurus). common/genus (same as above)': Success
---------------------------------------------------------------
 93. Running test 'synonym(heron,egret). both are names for egretta'...
  List = [_]
  
  yes
  | ?-
  Test 'synonym(heron,egret). both are names for egretta': Success
---------------------------------------------------------------
 94. Running test 'synonym(greenHeron,X). common/'...
  setof(X,synonym(greenHeron,X),L).
  L = [butorides_virescens]
  
  yes
  | ?-
  Test 'synonym(greenHeron,X). common/': Success
---------------------------------------------------------------
 95. Running test 'synonym(X,greenHeron). /common'...
  setof(X,synonym(X,greenHeron),L).
  L = [butorides_virescens]
  
  yes
  | ?-
  Test 'synonym(X,greenHeron). /common': Success
---------------------------------------------------------------
 96. Running test 'synonym(butorides_virescens,X). cspecies/'...
  setof(X,synonym(butorides_virescens,X),L).
  L = [greenHeron]
  
  yes
  | ?-
  Test 'synonym(butorides_virescens,X). cspecies/': Success
---------------------------------------------------------------
 97. Running test 'synonym(X,butorides_virescens). /cspecies'...
  setof(X,synonym(X,butorides_virescens),L).
  L = [greenHeron]
  
  yes
  | ?-
  Test 'synonym(X,butorides_virescens). /cspecies': Success
---------------------------------------------------------------
 98. Running test 'synonym(X,heron). /common that maps to 3 genera'...
  setof(X,synonym(X,heron),L).
  L = [ardea,butorides,egret,egretta]
  
  yes
  | ?-
  Test 'synonym(X,heron). /common that maps to 3 genera': Success
---------------------------------------------------------------
 99. Running test 'synonym(heron,X). /common that maps to 3 genera'...
  setof(X,synonym(heron,X),L).
  L = [ardea,butorides,egret,egretta]
  
  (1 ms) yes
  | ?-
  Test 'synonym(heron,X). /common that maps to 3 genera': Success
---------------------------------------------------------------
100. Running test 'isaStrict(exilis,exilis). equal species'...
  List = []
  
  yes
  | ?-
  Test 'isaStrict(exilis,exilis). equal species': Success
---------------------------------------------------------------
101. Running test 'isaStrict(ardeidae,ardeidae). equal families'...
  List = [_]
  
  yes
  | ?-
  Test 'isaStrict(ardeidae,ardeidae). equal families': Success
---------------------------------------------------------------
102. Running test 'isaStrict(x,x). equal but unknown'...
  List = []
  
  yes
  | ?-
  Test 'isaStrict(x,x). equal but unknown': Success
---------------------------------------------------------------
103. Running test 'isaStrict(ixobrychus_exilis,ixobrychus). cspecies to genus'...
  List = [_]
  
  yes
  | ?-
  Test 'isaStrict(ixobrychus_exilis,ixobrychus). cspecies to genus': Success
---------------------------------------------------------------
104. Running test 'isaStrict(ixobrychus_exilis,ardeidae). cspecies to family'...
  List = [_]
  
  yes
  | ?-
  Test 'isaStrict(ixobrychus_exilis,ardeidae). cspecies to family': Success
---------------------------------------------------------------
105. Running test 'isaStrict(ixobrychus_exilis,pelecaniformes). cspecies to top'...
  List = [_]
  
  yes
  | ?-
  Test 'isaStrict(ixobrychus_exilis,pelecaniformes). cspecies to top': Success
---------------------------------------------------------------
106. Running test 'isaStrict(ixobrychus_exilis,botaurus). cspecies to wrong genus'...
  List = []
  
  (1 ms) yes
  | ?-
  Test 'isaStrict(ixobrychus_exilis,botaurus). cspecies to wrong genus': Success
---------------------------------------------------------------
107. Running test 'isaStrict(ixobrychus_exilis,pelecanidae). cspecies to wrong family'...
  List = []
  
  yes
  | ?-
  Test 'isaStrict(ixobrychus_exilis,pelecanidae). cspecies to wrong family': Success
---------------------------------------------------------------
108. Running test 'isaStrict(exilis,ixobrychus). raw species to genus'...
  List = []
  
  yes
  | ?-
  Test 'isaStrict(exilis,ixobrychus). raw species to genus': Success
---------------------------------------------------------------
109. Running test 'isaStrict(ixobrychus_exilis,X).'...
  setof(X,isaStrict(ixobrychus_exilis,X),L).
  L = [ardeidae,ixobrychus,ixobrychus_exilis,pelecaniformes]
  
  yes
  | ?-
  Test 'isaStrict(ixobrychus_exilis,X).': Success
---------------------------------------------------------------
110. Running test 'isa(exilis,exilis). equal raw species'...
  List = []
  
  yes
  | ?-
  Test 'isa(exilis,exilis). equal raw species': Success
---------------------------------------------------------------
111. Running test 'isa(ardeidae,ardeidae). equal families'...
  List = [_]
  
  yes
  | ?-
  Test 'isa(ardeidae,ardeidae). equal families': Success
---------------------------------------------------------------
112. Running test 'isa(x,x). equal but unknown name'...
  List = []
  
  yes
  | ?-
  Test 'isa(x,x). equal but unknown name': Success
---------------------------------------------------------------
113. Running test 'isa(ixobrychus_exilis,ixobrychus). cspecies to genus'...
  List = [_]
  
  yes
  | ?-
  Test 'isa(ixobrychus_exilis,ixobrychus). cspecies to genus': Success
---------------------------------------------------------------
114. Running test 'isa(ixobrychus_exilis,ardeidae). cspecies to family'...
  List = [_]
  
  yes
  | ?-
  Test 'isa(ixobrychus_exilis,ardeidae). cspecies to family': Success
---------------------------------------------------------------
115. Running test 'isa(ixobrychus_exilis,pelecaniformes). cspecies to top'...
  List = [_]
  
  yes
  | ?-
  Test 'isa(ixobrychus_exilis,pelecaniformes). cspecies to top': Success
---------------------------------------------------------------
116. Running test 'isa(ixobrychus_exilis,botaurus). cspecies to wrong genus'...
  List = []
  
  yes
  | ?-
  Test 'isa(ixobrychus_exilis,botaurus). cspecies to wrong genus': Success
---------------------------------------------------------------
117. Running test 'isa(ixobrychus_exilis,pelecanidae). cspecies to wrong family'...
  List = []
  
  yes
  | ?-
  Test 'isa(ixobrychus_exilis,pelecanidae). cspecies to wrong family': Success
---------------------------------------------------------------
118. Running test 'isa(exilis,ixobrychus). raw species to genus'...
  List = []
  
  yes
  | ?-
  Test 'isa(exilis,ixobrychus). raw species to genus': Success
---------------------------------------------------------------
119. Running test 'isa(ixobrychus_exilis,X).'...
  setof(X,isa(ixobrychus_exilis,X),L).
  L = [ardeidae,ixobrychus,ixobrychus_exilis,pelecaniformes]
  
  yes
  | ?-
  Test 'isa(ixobrychus_exilis,X).': Success
---------------------------------------------------------------
120. Running test 'isa(X,pelecanidae).'...
  setof(X,isa(X,pelecanidae),L).
  L = [pelecanidae,pelecanus,pelecanus_erythrorhynchos,pelecanus_occidentalis]
  
  (1 ms) yes
  | ?-
  Test 'isa(X,pelecanidae).': Success
---------------------------------------------------------------
121. Running test 'isa(plegadis,ibis). equal genera/common'...
  List = [_]
  
  yes
  | ?-
  Test 'isa(plegadis,ibis). equal genera/common': Success
---------------------------------------------------------------
122. Running test 'isa(plegadis_chihi,ibis). equal cspecies/common'...
  List = [_]
  
  yes
  | ?-
  Test 'isa(plegadis_chihi,ibis). equal cspecies/common': Success
---------------------------------------------------------------
123. Running test 'isa(cattleEgret,cattleEgret). equal common/common'...
  List = [_]
  
  yes
  | ?-
  Test 'isa(cattleEgret,cattleEgret). equal common/common': Success
---------------------------------------------------------------
124. Running test 'isa(chihi,ibis). equal rawSpecies/common'...
  List = []
  
  yes
  | ?-
  Test 'isa(chihi,ibis). equal rawSpecies/common': Success
---------------------------------------------------------------
125. Running test 'isa(platalea_ajaja,pelecaniformes). bottom to top'...
  List = [_]
  
  yes
  | ?-
  Test 'isa(platalea_ajaja,pelecaniformes). bottom to top': Success
---------------------------------------------------------------
126. Running test 'isa(cattleEgret,bubulcus_ibis). equal commonName to compound species'...
  List = [_]
  
  yes
  | ?-
  Test 'isa(cattleEgret,bubulcus_ibis). equal commonName to compound species': Success
---------------------------------------------------------------
127. Running test 'isa(whiteIbis,eudocimus). common species name to genus'...
  List = [_]
  
  (1 ms) yes
  | ?-
  Test 'isa(whiteIbis,eudocimus). common species name to genus': Success
---------------------------------------------------------------
128. Running test 'isa(leastBittern,ardeidae). common species name to family'...
  List = [_]
  
  yes
  | ?-
  Test 'isa(leastBittern,ardeidae). common species name to family': Success
---------------------------------------------------------------
129. Running test 'isa(leastBittern,bittern). common species name to common family'...
  List = [_]
  
  yes
  | ?-
  Test 'isa(leastBittern,bittern). common species name to common family': Success
---------------------------------------------------------------
130. Running test 'isa(whiteFacedIbis,chihi). common species name to species alone'...
  List = []
  
  yes
  | ?-
  Test 'isa(whiteFacedIbis,chihi). common species name to species alone': Success
---------------------------------------------------------------
131. Running test 'isa(plegadis_falcinellus,threskiornithidae). compound species name to family'...
  List = [_]
  
  yes
  | ?-
  Test 'isa(plegadis_falcinellus,threskiornithidae). compound species name to family': Success
---------------------------------------------------------------
132. Running test 'isa(nyctanassa,nightHeron). genus to genus common name'...
  List = [_]
  
  yes
  | ?-
  Test 'isa(nyctanassa,nightHeron). genus to genus common name': Success
---------------------------------------------------------------
133. Running test 'isa(nyctanassa,egret). genus to wrong genus common name'...
  List = []
  
  (1 ms) yes
  | ?-
  Test 'isa(nyctanassa,egret). genus to wrong genus common name': Success
---------------------------------------------------------------
134. Running test 'isa(nyctanassa_violacea,nightHeron). cspecies to genus common name'...
  List = [_]
  
  yes
  | ?-
  Test 'isa(nyctanassa_violacea,nightHeron). cspecies to genus common name': Success
---------------------------------------------------------------
135. Running test 'isa(nyctanassa_violacea,egret). cspecies to wrong genus common name'...
  List = []
  
  yes
  | ?-
  Test 'isa(nyctanassa_violacea,egret). cspecies to wrong genus common name': Success
---------------------------------------------------------------
136. Running test 'isa(x,X). unknown/'...
  setof(X,isa(x,X),L).
  no
  | ?-
  Test 'isa(x,X). unknown/': Success
---------------------------------------------------------------
137. Running test 'isa(ardea_herodias,X). species'...
  setof(X,isa(ardea_herodias,X),L).
  L = [ardea,ardea_herodias,ardeidae,pelecaniformes]
  
  yes
  | ?-
  Test 'isa(ardea_herodias,X). species': Success
---------------------------------------------------------------
138. Running test 'isa(greatBlueHeron,X). common species'...
  setof(X,isa(greatBlueHeron,X),L).
  L = [ardea,ardea_herodias,ardeidae,pelecaniformes]
  
  yes
  | ?-
  Test 'isa(greatBlueHeron,X). common species': Success
---------------------------------------------------------------
139. Running test 'isa(ixobrychus_exilis,X). compound species'...
  setof(X,isa(ixobrychus_exilis,X),L).
  L = [ardeidae,ixobrychus,ixobrychus_exilis,pelecaniformes]
  
  yes
  | ?-
  Test 'isa(ixobrychus_exilis,X). compound species': Success
---------------------------------------------------------------
140. Running test 'isa(butorides,X). genus'...
  setof(X,isa(butorides,X),L).
  L = [ardeidae,butorides,pelecaniformes]
  
  yes
  | ?-
  Test 'isa(butorides,X). genus': Success
---------------------------------------------------------------
141. Running test 'isa(X,ardeidae). family'...
  setof(X,isa(X,ardeidae),L).
  L = [ardea,ardea_alba,ardea_herodias,ardeidae,botaurus,botaurus_lentiginosus,bubulcus,bubulcus_ibis,butorides,butorides_virescens,egretta,egretta_caerulea,egretta_rufescens,egretta_thula,egretta_tricolor,ixobrychus,ixobrychus_exilis,nyctanassa,nyctanassa_violacea,nycticorax,nycticorax_nycticorax]
  
  (1 ms) yes
  | ?-
  Test 'isa(X,ardeidae). family': Success
---------------------------------------------------------------
142. Running test 'isa(X,eudocimus_albus). compound species'...
  setof(X,isa(X,eudocimus_albus),L).
  L = [eudocimus_albus]
  
  yes
  | ?-
  Test 'isa(X,eudocimus_albus). compound species': Success
---------------------------------------------------------------
143. Running test 'isa(X,bittern). common species (multi)'...
  setof(X,isa(X,bittern),L).
  L = [botaurus,botaurus_lentiginosus,ixobrychus,ixobrychus_exilis]
  
  yes
  | ?-
  Test 'isa(X,bittern). common species (multi)': Success
---------------------------------------------------------------
144. Running test 'countSpecies(botaurus_lentiginosus,1). species'...
  List = [_]
  
  yes
  | ?-
  Test 'countSpecies(botaurus_lentiginosus,1). species': Success
---------------------------------------------------------------
145. Running test 'countSpecies(botaurus,1). single-species genus'...
  List = [_]
  
  yes
  | ?-
  Test 'countSpecies(botaurus,1). single-species genus': Success
---------------------------------------------------------------
146. Running test 'countSpecies(egretta,4). 4-species genus'...
  List = [_]
  
  yes
  | ?-
  Test 'countSpecies(egretta,4). 4-species genus': Success
---------------------------------------------------------------
147. Running test 'countSpecies(ardeidae,12). 12-species family'...
  List = [_]
  
  yes
  | ?-
  Test 'countSpecies(ardeidae,12). 12-species family': Success
---------------------------------------------------------------
148. Running test 'countSpecies(pelecaniformes,18). 18-species order'...
  List = [_]
  
  yes
  | ?-
  Test 'countSpecies(pelecaniformes,18). 18-species order': Success
---------------------------------------------------------------
149. Running test 'countSpecies(x,0). 0-species unknown name'...
  List = [_]
  
  yes
  | ?-
  Test 'countSpecies(x,0). 0-species unknown name': Success
---------------------------------------------------------------
150. Running test 'countSpecies(botaurus_lentiginosus,X). species'...
  setof(X,countSpecies(botaurus_lentiginosus,X),L).
  L = [1]
  
  yes
  | ?-
  Test 'countSpecies(botaurus_lentiginosus,X). species': Success
---------------------------------------------------------------
151. Running test 'countSpecies(botaurus,X). single-species genus'...
  setof(X,countSpecies(botaurus,X),L).
  L = [1]
  
  yes
  | ?-
  Test 'countSpecies(botaurus,X). single-species genus': Success
---------------------------------------------------------------
152. Running test 'countSpecies(egretta,X). 4-species genus'...
  setof(X,countSpecies(egretta,X),L).
  L = [4]
  
  yes
  | ?-
  Test 'countSpecies(egretta,X). 4-species genus': Success
---------------------------------------------------------------
153. Running test 'countSpecies(ardeidae,X). 12-species family'...
  setof(X,countSpecies(ardeidae,X),L).
  L = [12]
  
  (1 ms) yes
  | ?-
  Test 'countSpecies(ardeidae,X). 12-species family': Success
---------------------------------------------------------------
154. Running test 'countSpecies(pelecaniformes,X). 18-species order'...
  setof(X,countSpecies(pelecaniformes,X),L).
  L = [18]
  
  yes
  | ?-
  Test 'countSpecies(pelecaniformes,X). 18-species order': Success
---------------------------------------------------------------
155. Running test 'countSpecies(x,X). 0-species unknown name'...
  setof(X,countSpecies(x,X),L).
  L = [0]
  
  yes
  | ?-
  Test 'countSpecies(x,X). 0-species unknown name': Success
---------------------------------------------------------------
156. Running test 'rangesTo(botaurus_lentiginosus,alberta). simple species'...
  List = [_]
  
  yes
  | ?-
  Test 'rangesTo(botaurus_lentiginosus,alberta). simple species': Success
---------------------------------------------------------------
157. Running test 'rangesTo(botaurus_lentiginosus,canada). species, inferred location'...
  List = [_]
  
  yes
  | ?-
  Test 'rangesTo(botaurus_lentiginosus,canada). species, inferred location': Success
---------------------------------------------------------------
158. Running test 'rangesTo(pelecanus,alberta). simple genus'...
  List = [_]
  
  yes
  | ?-
  Test 'rangesTo(pelecanus,alberta). simple genus': Success
---------------------------------------------------------------
159. Running test 'rangesTo(pelecanus,canada). genus, inferred location'...
  List = [_]
  
  yes
  | ?-
  Test 'rangesTo(pelecanus,canada). genus, inferred location': Success
---------------------------------------------------------------
160. Running test 'rangesTo(pelecanidae,canada). order, inferred location'...
  List = [_]
  
  yes
  | ?-
  Test 'rangesTo(pelecanidae,canada). order, inferred location': Success
---------------------------------------------------------------
161. Running test 'rangesTo(ardea_alba,alberta). speces, wrong location'...
  List = []
  
  yes
  | ?-
  Test 'rangesTo(ardea_alba,alberta). speces, wrong location': Success
---------------------------------------------------------------
162. Running test 'rangesTo(platalea_ajaja,canada). speces, wrong location'...
  List = []
  
  yes
  | ?-
  Test 'rangesTo(platalea_ajaja,canada). speces, wrong location': Success
---------------------------------------------------------------
163. Running test 'rangesTo(botaurus_lentiginosus,X). species, inferred location'...
  setof(X,rangesTo(botaurus_lentiginosus,X),L).
  L = [alberta,canada]
  
  yes
  | ?-
  Test 'rangesTo(botaurus_lentiginosus,X). species, inferred location': Success
---------------------------------------------------------------
164. Running test 'rangesTo(pelecanus,X). simple genus'...
  setof(X,rangesTo(pelecanus,X),L).
  L = [alberta,canada]
  
  yes
  | ?-
  Test 'rangesTo(pelecanus,X). simple genus': Success
---------------------------------------------------------------
165. Running test 'rangesTo(pelecanus,X). genus, inferred location'...
  setof(X,rangesTo(pelecanus,X),L).
  L = [alberta,canada]
  
  yes
  | ?-
  Test 'rangesTo(pelecanus,X). genus, inferred location': Success
---------------------------------------------------------------
166. Running test 'rangesTo(pelecanidae,X). order, inferred location'...
  setof(X,rangesTo(pelecanidae,X),L).
  L = [alberta,canada]
  
  yes
  | ?-
  Test 'rangesTo(pelecanidae,X). order, inferred location': Success
---------------------------------------------------------------
167. Running test 'rangesTo(ardea_alba,alberta). speces, wrong location'...
  setof(X,rangesTo(ardea_alba,alberta),L).
  no
  | ?-
  Test 'rangesTo(ardea_alba,alberta). speces, wrong location': Success
---------------------------------------------------------------
168. Running test 'rangesTo(platalea_ajaja,canada). speces, wrong location'...
  setof(X,rangesTo(platalea_ajaja,canada),L).
  no
  | ?-
  Test 'rangesTo(platalea_ajaja,canada). speces, wrong location': Success
---------------------------------------------------------------
169. Running test 'rangesTo(X,alberta). /alberta'...
  setof(X,rangesTo(X,alberta),L).
  L = [ardea_herodias,botaurus_lentiginosus,nycticorax_nycticorax,pelecanus_erythrorhynchos]
  
  yes
  | ?-
  Test 'rangesTo(X,alberta). /alberta': Success
---------------------------------------------------------------
170. Running test 'rangesTo(X,canada). /canada'...
  setof(X,rangesTo(X,canada),L).
  L = [ardea_alba,ardea_herodias,botaurus_lentiginosus,bubulcus_ibis,butorides_virescens,nycticorax_nycticorax,pelecanus_erythrorhynchos]
  
  (1 ms) yes
  | ?-
  Test 'rangesTo(X,canada). /canada': Success
---------------------------------------------------------------
171. Running test 'rangesTo(X,Y). * / *'...
  setof([X,Y],rangesTo(X,Y),L).
  L = [[ardea_alba,canada],[ardea_herodias,alberta],[ardea_herodias,canada],[botaurus_lentiginosus,alberta],[botaurus_lentiginosus,canada],[bubulcus_ibis,canada],[butorides_virescens,canada],[nycticorax_nycticorax,alberta],[nycticorax_nycticorax,canada],[pelecanus_erythrorhynchos,alberta],[pelecanus_erythrorhynchos,canada]]
  
  yes
  | ?-
  Test 'rangesTo(X,Y). * / *': Success
---------------------------------------------------------------
172. Running test 'habitat(pelecanus_erythrorhynchos,lakePond). true'...
  List = [_]
  
  yes
  | ?-
  Test 'habitat(pelecanus_erythrorhynchos,lakePond). true': Success
---------------------------------------------------------------
173. Running test 'habitat(botaurus_lentiginosus,marsh). true'...
  List = [_]
  
  yes
  | ?-
  Test 'habitat(botaurus_lentiginosus,marsh). true': Success
---------------------------------------------------------------
174. Running test 'habitat(botaurus_lentiginosus,ocean). false'...
  List = []
  
  yes
  | ?-
  Test 'habitat(botaurus_lentiginosus,ocean). false': Success
---------------------------------------------------------------
175. Running test 'habitat(x,ocean). false'...
  List = []
  
  yes
  | ?-
  Test 'habitat(x,ocean). false': Success
---------------------------------------------------------------
176. Running test 'habitat(egretta_tricolor,X). single'...
  setof(X,habitat(egretta_tricolor,X),L).
  L = [marsh]
  
  yes
  | ?-
  Test 'habitat(egretta_tricolor,X). single': Success
---------------------------------------------------------------
177. Running test 'habitat(X,ocean). single'...
  setof(X,habitat(X,ocean),L).
  L = [pelecanus_occidentalis]
  
  yes
  | ?-
  Test 'habitat(X,ocean). single': Success
---------------------------------------------------------------
178. Running test 'habitat(X,marsh). multiple'...
  setof(X,habitat(X,marsh),L).
  L = [ardea_alba,ardea_herodias,botaurus_lentiginosus,bubulcus_ibis,butorides_virescens,egretta_caerulea,egretta_rufescens,egretta_thula,egretta_tricolor,eudocimus_albus,ixobrychus_exilis,nyctanassa_violacea,nycticorax_nycticorax,platalea_ajaja,plegadis_chihi,plegadis_falcinellus]
  
  yes
  | ?-
  Test 'habitat(X,marsh). multiple': Success
---------------------------------------------------------------
179. Running test 'habitat(pelecanus,ocean). genus'...
  List = [_]
  
  yes
  | ?-
  Test 'habitat(pelecanus,ocean). genus': Success
---------------------------------------------------------------
180. Running test 'habitat(pelecaniformes,ocean). order'...
  List = [_]
  
  yes
  | ?-
  Test 'habitat(pelecaniformes,ocean). order': Success
---------------------------------------------------------------
181. Running test 'habitat(pelecaniformes,X). multiple'...
  setof(X,habitat(pelecaniformes,X),L).
  L = [lakePond,marsh,ocean]
  
  yes
  | ?-
  Test 'habitat(pelecaniformes,X). multiple': Success
---------------------------------------------------------------
182. Running test 'food(pelecanus_erythrorhynchos,fish). true'...
  List = [_]
  
  yes
  | ?-
  Test 'food(pelecanus_erythrorhynchos,fish). true': Success
---------------------------------------------------------------
183. Running test 'food(bubulcus_ibis,insects). true'...
  List = [_]
  
  yes
  | ?-
  Test 'food(bubulcus_ibis,insects). true': Success
---------------------------------------------------------------
184. Running test 'food(botaurus_lentiginosus,insects). false'...
  List = []
  
  yes
  | ?-
  Test 'food(botaurus_lentiginosus,insects). false': Success
---------------------------------------------------------------
185. Running test 'food(x,fish). false'...
  List = []
  
  yes
  | ?-
  Test 'food(x,fish). false': Success
---------------------------------------------------------------
186. Running test 'food(egretta_tricolor,X). single'...
  setof(X,food(egretta_tricolor,X),L).
  L = [fish]
  
  yes
  | ?-
  Test 'food(egretta_tricolor,X). single': Success
---------------------------------------------------------------
187. Running test 'food(X,insects). single'...
  setof(X,food(X,insects),L).
  L = [bubulcus_ibis,eudocimus_albus,nyctanassa_violacea,plegadis_chihi,plegadis_falcinellus]
  
  yes
  | ?-
  Test 'food(X,insects). single': Success
---------------------------------------------------------------
188. Running test 'food(pelecanus,fish). genus'...
  List = [_,_]
  
  yes
  | ?-
  Test 'food(pelecanus,fish). genus': Success
---------------------------------------------------------------
189. Running test 'food(pelecaniformes,insects). order'...
  List = [_,_,_,_,_]
  
  yes
  | ?-
  Test 'food(pelecaniformes,insects). order': Success
---------------------------------------------------------------
190. Running test 'food(pelecaniformes,X). multiple'...
  setof(X,food(pelecaniformes,X),L).
  L = [fish,insects]
  
  yes
  | ?-
  Test 'food(pelecaniformes,X). multiple': Success
---------------------------------------------------------------
191. Running test 'nesting(pelecanus_erythrorhynchos,ground). true'...
  List = [_]
  
  yes
  | ?-
  Test 'nesting(pelecanus_erythrorhynchos,ground). true': Success
---------------------------------------------------------------
192. Running test 'nesting(egretta_tricolor,tree). true'...
  List = [_]
  
  yes
  | ?-
  Test 'nesting(egretta_tricolor,tree). true': Success
---------------------------------------------------------------
193. Running test 'nesting(botaurus_lentiginosus,tree). false'...
  List = []
  
  yes
  | ?-
  Test 'nesting(botaurus_lentiginosus,tree). false': Success
---------------------------------------------------------------
194. Running test 'nesting(x,tree). false'...
  List = []
  
  yes
  | ?-
  Test 'nesting(x,tree). false': Success
---------------------------------------------------------------
195. Running test 'nesting(egretta_tricolor,X). single'...
  setof(X,nesting(egretta_tricolor,X),L).
  L = [tree]
  
  (1 ms) yes
  | ?-
  Test 'nesting(egretta_tricolor,X). single': Success
---------------------------------------------------------------
196. Running test 'nesting(X,ground). multi'...
  setof(X,nesting(X,ground),L).
  L = [botaurus_lentiginosus,ixobrychus_exilis,pelecanus_erythrorhynchos,plegadis_chihi,plegadis_falcinellus]
  
  yes
  | ?-
  Test 'nesting(X,ground). multi': Success
---------------------------------------------------------------
197. Running test 'nesting(X,tree). multi'...
  setof(X,nesting(X,tree),L).
  L = [ardea_alba,ardea_herodias,bubulcus_ibis,butorides_virescens,egretta_caerulea,egretta_rufescens,egretta_thula,egretta_tricolor,eudocimus_albus,nyctanassa_violacea,nycticorax_nycticorax,pelecanus_occidentalis,platalea_ajaja]
  
  yes
  | ?-
  Test 'nesting(X,tree). multi': Success
---------------------------------------------------------------
198. Running test 'nesting(pelecanus,ground). genus'...
  List = [_]
  
  yes
  | ?-
  Test 'nesting(pelecanus,ground). genus': Success
---------------------------------------------------------------
199. Running test 'nesting(pelecanus,tree). genus'...
  List = [_]
  
  yes
  | ?-
  Test 'nesting(pelecanus,tree). genus': Success
---------------------------------------------------------------
200. Running test 'nesting(pelecaniformes,tree). order'...
  List = [_,_,_,_,_,_,_,_,_,_,_,_,_]
  
  yes
  | ?-
  Test 'nesting(pelecaniformes,tree). order': Success
---------------------------------------------------------------
201. Running test 'nesting(pelecaniformes,X). multiple'...
  setof(X,nesting(pelecaniformes,X),L).
  L = [ground,tree]
  
  yes
  | ?-
  Test 'nesting(pelecaniformes,X). multiple': Success
---------------------------------------------------------------
202. Running test 'behavior(pelecanus_erythrorhynchos,surfaceDive). true'...
  List = [_]
  
  yes
  | ?-
  Test 'behavior(pelecanus_erythrorhynchos,surfaceDive). true': Success
---------------------------------------------------------------
203. Running test 'behavior(botaurus_lentiginosus,stalking). true'...
  List = [_]
  
  yes
  | ?-
  Test 'behavior(botaurus_lentiginosus,stalking). true': Success
---------------------------------------------------------------
204. Running test 'behavior(botaurus_lentiginosus,aerialDive). false'...
  List = []
  
  yes
  | ?-
  Test 'behavior(botaurus_lentiginosus,aerialDive). false': Success
---------------------------------------------------------------
205. Running test 'behavior(x,stalking). false'...
  List = []
  
  yes
  | ?-
  Test 'behavior(x,stalking). false': Success
---------------------------------------------------------------
206. Running test 'behavior(egretta_tricolor,X). single'...
  setof(X,behavior(egretta_tricolor,X),L).
  L = [stalking]
  
  yes
  | ?-
  Test 'behavior(egretta_tricolor,X). single': Success
---------------------------------------------------------------
207. Running test 'behavior(X,aerialDive). single'...
  setof(X,behavior(X,aerialDive),L).
  L = [pelecanus_occidentalis]
  
  yes
  | ?-
  Test 'behavior(X,aerialDive). single': Success
---------------------------------------------------------------
208. Running test 'behavior(X,stalking). multiple'...
  setof(X,behavior(X,stalking),L).
  L = [ardea_alba,ardea_herodias,botaurus_lentiginosus,butorides_virescens,egretta_caerulea,egretta_rufescens,egretta_thula,egretta_tricolor,ixobrychus_exilis,nyctanassa_violacea,nycticorax_nycticorax]
  
  yes
  | ?-
  Test 'behavior(X,stalking). multiple': Success
---------------------------------------------------------------
209. Running test 'behavior(pelecanus,aerialDive). genus'...
  List = [_]
  
  yes
  | ?-
  Test 'behavior(pelecanus,aerialDive). genus': Success
---------------------------------------------------------------
210. Running test 'behavior(pelecanus,surfaceDive). genus'...
  List = [_]
  
  yes
  | ?-
  Test 'behavior(pelecanus,surfaceDive). genus': Success
---------------------------------------------------------------
211. Running test 'behavior(pelecaniformes,groundForager). order'...
  List = [_]
  
  yes
  | ?-
  Test 'behavior(pelecaniformes,groundForager). order': Success
---------------------------------------------------------------
212. Running test 'behavior(pelecaniformes,X). multiple'...
  setof(X,behavior(pelecaniformes,X),L).
  L = [aerialDive,groundForager,probing,stalking,surfaceDive]
  
  yes
  | ?-
  Test 'behavior(pelecaniformes,X). multiple': Success
---------------------------------------------------------------
213. Running test 'conservation(pelecanus_erythrorhynchos,lc). true'...
  List = [_]
  
  yes
  | ?-
  Test 'conservation(pelecanus_erythrorhynchos,lc). true': Success
---------------------------------------------------------------
214. Running test 'conservation(egretta_rufescens,nt). true'...
  List = [_]
  
  yes
  | ?-
  Test 'conservation(egretta_rufescens,nt). true': Success
---------------------------------------------------------------
215. Running test 'conservation(botaurus_lentiginosus,nt). false'...
  List = []
  
  yes
  | ?-
  Test 'conservation(botaurus_lentiginosus,nt). false': Success
---------------------------------------------------------------
216. Running test 'conservation(x,lc). false'...
  List = []
  
  yes
  | ?-
  Test 'conservation(x,lc). false': Success
---------------------------------------------------------------
217. Running test 'conservation(egretta_tricolor,X). single'...
  setof(X,conservation(egretta_tricolor,X),L).
  L = [lc]
  
  yes
  | ?-
  Test 'conservation(egretta_tricolor,X). single': Success
---------------------------------------------------------------
218. Running test 'conservation(X,nt). single'...
  setof(X,conservation(X,nt),L).
  L = [egretta_rufescens]
  
  yes
  | ?-
  Test 'conservation(X,nt). single': Success
---------------------------------------------------------------
219. Running test 'conservation(X,lc). multiple'...
  setof(X,conservation(X,lc),L).
  L = [ardea_alba,ardea_herodias,botaurus_lentiginosus,bubulcus_ibis,butorides_virescens,egretta_caerulea,egretta_thula,egretta_tricolor,eudocimus_albus,ixobrychus_exilis,nyctanassa_violacea,nycticorax_nycticorax,pelecanus_erythrorhynchos,pelecanus_occidentalis,platalea_ajaja,plegadis_chihi,plegadis_falcinellus]
  
  yes
  | ?-
  Test 'conservation(X,lc). multiple': Success
---------------------------------------------------------------
220. Running test 'conservation(egretta,nt). genus'...
  List = [_]
  
  yes
  | ?-
  Test 'conservation(egretta,nt). genus': Success
---------------------------------------------------------------
221. Running test 'conservation(egretta,lc). genus'...
  List = [_,_,_]
  
  yes
  | ?-
  Test 'conservation(egretta,lc). genus': Success
---------------------------------------------------------------
222. Running test 'conservation(pelecaniformes,nt). order'...
  List = [_]
  
  yes
  | ?-
  Test 'conservation(pelecaniformes,nt). order': Success
---------------------------------------------------------------
223. Running test 'conservation(pelecaniformes,X). multiple'...
  setof(X,conservation(pelecaniformes,X),L).
  L = [lc,nt]
  
  yes
  | ?-
  Test 'conservation(pelecaniformes,X). multiple': Success

<pre>

CPSC 449 Prolog Assignment: Pelecaniformes version 3 (Prolog testing harness version 7).
========================================================================================
     Test                                                                   Result 
     ------------                                                           ------------
  1. order(pelecaniformes). true                                            Success
  2. order(pelecanidae). false                                              Success
  3. order(X).                                                              Success
  4. family(pelecanidae). true                                              Success
  5. family(ardeidae). true                                                 Success
  6. family(threskiornithidae). true                                        Success
  7. family(pelecaniformes). is an order                                    Success
  8. family(X).                                                             Success
  9. genus(botaurus). true                                                  Success
 10. genus(ardea). true                                                     Success
 11. genus(nycticorax). is both a genus and a species                       Success
 12. genus(erythrorhynchos). is a species                                   Success
 13. genus(X).                                                              Success
 14. species(occidentalis). true                                            Success
 15. species(thula). true                                                   Success
 16. species(nycticorax). is both a genus and a species                     Success
 17. species(plegadis). is a genus                                          Success
 18. species(X).                                                            Success
 19. hasParent(plegadis_falcinellus,plegadis). cspecies/genus               Success
 20. hasParent(falcinellus,plegadis). species/genus                         Success
 21. hasParent(nycticorax,ardeidae). genus/family                           Success
 22. hasParent(threskiornithidae,pelecaniformes). family/order              Success
 23. hasParent(falcinellus,ardeidae). species/family                        Success
 24. hasParent(nycticorax,pelecaniformes). genus/order                      Success
 25. hasParent(X,egretta).                                                  Success
 26. hasParent(egretta,ardeidae). genus/family                              Success
 27. hasParent(caerulea,X).                                                 Success
 28. hasParent(X,Y).                                                        Success
 29. hasParent2(plegadis_falcinellus,plegadis). cspecies/genus              Success
 30. hasParent2(falcinellus,plegadis). species/genus                        Success
 31. hasParent2(nycticorax,ardeidae). genus/family                          Success
 32. hasParent2(threskiornithidae,pelecaniformes). family/order             Success
 33. hasParent2(plegadis_falcinellus,ardeidae). cspecies/family             Success
 34. hasParent2(nycticorax,pelecaniformes). genus/order                     Success
 35. hasParent2(X,egretta).                                                 Success
 36. hasParent2(egretta,ardeidae). genus/family                             Success
 37. hasParent2(egretta_caerulea,X).                                        Success
 38. hasParent2(X,Y).                                                       Success
 39. hasCommonName(pelecanus,pelican). order                                Success
 40. hasCommonName(ardea,heron). genus                                      Success
 41. hasCommonName(nycticorax,nightHeron). genus                            Success
 42. hasCommonName(nyctanassa,nightHeron). genus (also above)               Success
 43. hasCommonName(pelecanus_erythrorhynchos,americanWhitePelican). cspeces Success
 44. hasCommonName(erythrorhynchos,americanWhitePelican). raw speces        Success
 45. hasCommonName(pelecanus_erythrorhynchos,brownPelican). cspeces/wrongName Success
 46. hasCommonName(butorides_virescens,greenHeron). cspecies                Success
 47. hasCommonName(nyctanassa_violacea,X). cspecies/                        Success
 48. hasCommonName(X,roseateSpoonbill). /commonName                         Success
 49. hasCommonName(botaurus,lentiginosus,americanBittern). true             Success
 50. hasCommonName(egretta,rufescens,reddishEgret). true                    Success
 51. hasCommonName(egretta,alba,reddishEgret). genus/species mismatch       Success
 52. hasCommonName(egretta,rufescens,snowyEgret). wrong common name         Success
 53. hasCommonName(nycticorax,nycticorax,blackCrownedNightHeron). true      Success
 54. hasCommonName(botaurus,lentiginosus,X).                                Success
 55. hasCommonName(egretta,rufescens,X).                                    Success
 56. hasCommonName(nycticorax,nycticorax,X).                                Success
 57. hasCommonName(X,Y,americanBittern).                                    Success
 58. hasCommonName(X,Y,reddishEgret).                                       Success
 59. hasCommonName(X,Y,blackCrownedNightHeron).                             Success
 60. hasSciName(greatBlueHeron,ardea_herodias). cspeces                     Success
 61. hasSciName(snowyEgret,egretta_thula). cspeces                          Success
 62. hasSciName(snowyEgret,thula). raw speces                               Success
 63. hasSciName(cattleEgret,bubulcus_ibis). cspeces                         Success
 64. hasSciName(cattleEgret,ibis). raw speces                               Success
 65. hasSciName(ibis,eudocimus). genus                                      Success
 66. hasSciName(ibis,plegadis). genus (same as above)                       Success
 67. hasSciName(greatBlueHeron,X). cspecies/                                Success
 68. hasSciName(snowyEgret,X). cspecies/                                    Success
 69. hasSciName(cattleEgret,X). cspecies/                                   Success
 70. hasSciName(X,ardea_herodias). /cspecies                                Success
 71. hasSciName(X,egretta_thula). /cspecies                                 Success
 72. hasSciName(X,bubulcus_ibis). /cspecies                                 Success
 73. hasCompoundName(pelecanus,occidentalis,pelecanus_occidentalis). true   Success
 74. hasCompoundName(egretta,tricolor,egretta_tricolor). true               Success
 75. hasCompoundName(plegadis,chihi,plegadis_chihi). true                   Success
 76. hasCompoundName(plegadis,chihi,egretta_tricolor). wrong name           Success
 77. hasCompoundName(pelecanus,occidentalis,X).                             Success
 78. hasCompoundName(egretta,tricolor,X).                                   Success
 79. hasCompoundName(plegadis,chihi,X).                                     Success
 80. hasCompoundName(X,Y,pelecanus_occidentalis).                           Success
 81. hasCompoundName(X,Y,egretta_tricolor).                                 Success
 82. hasCompoundName(X,Y,plegadis_chihi).                                   Success
 83. synonym(plegadis,plegadis). equal                                      Success
 84. synonym(glossyIbis,plegadis_falcinellus). common/cspecies              Success
 85. synonym(glossyIbis,alcinellus). common/rawSpecies                      Success
 86. synonym(plegadis_falcinellus,glossyIbis). cspecies/common              Success
 87. synonym(falcinellus,glossyIbis). rawSpecies/common                     Success
 88. synonym(glossyIbis,plegadis_falcinellus). common/compound              Success
 89. synonym(plegadis_falcinellus,glossyIbis). compound/common              Success
 90. synonym(bittern,ixobrychus). common/genus                              Success
 91. synonym(ixobrychus,botaurus). genus/genus with same common name        Success
 92. synonym(bittern,botaurus). common/genus (same as above)                Success
 93. synonym(heron,egret). both are names for egretta                       Success
 94. synonym(greenHeron,X). common/                                         Success
 95. synonym(X,greenHeron). /common                                         Success
 96. synonym(butorides_virescens,X). cspecies/                              Success
 97. synonym(X,butorides_virescens). /cspecies                              Success
 98. synonym(X,heron). /common that maps to 3 genera                        Success
 99. synonym(heron,X). /common that maps to 3 genera                        Success
100. isaStrict(exilis,exilis). equal species                                Success
101. isaStrict(ardeidae,ardeidae). equal families                           Success
102. isaStrict(x,x). equal but unknown                                      Success
103. isaStrict(ixobrychus_exilis,ixobrychus). cspecies to genus             Success
104. isaStrict(ixobrychus_exilis,ardeidae). cspecies to family              Success
105. isaStrict(ixobrychus_exilis,pelecaniformes). cspecies to top           Success
106. isaStrict(ixobrychus_exilis,botaurus). cspecies to wrong genus         Success
107. isaStrict(ixobrychus_exilis,pelecanidae). cspecies to wrong family     Success
108. isaStrict(exilis,ixobrychus). raw species to genus                     Success
109. isaStrict(ixobrychus_exilis,X).                                        Success
110. isa(exilis,exilis). equal raw species                                  Success
111. isa(ardeidae,ardeidae). equal families                                 Success
112. isa(x,x). equal but unknown name                                       Success
113. isa(ixobrychus_exilis,ixobrychus). cspecies to genus                   Success
114. isa(ixobrychus_exilis,ardeidae). cspecies to family                    Success
115. isa(ixobrychus_exilis,pelecaniformes). cspecies to top                 Success
116. isa(ixobrychus_exilis,botaurus). cspecies to wrong genus               Success
117. isa(ixobrychus_exilis,pelecanidae). cspecies to wrong family           Success
118. isa(exilis,ixobrychus). raw species to genus                           Success
119. isa(ixobrychus_exilis,X).                                              Success
120. isa(X,pelecanidae).                                                    Success
121. isa(plegadis,ibis). equal genera/common                                Success
122. isa(plegadis_chihi,ibis). equal cspecies/common                        Success
123. isa(cattleEgret,cattleEgret). equal common/common                      Success
124. isa(chihi,ibis). equal rawSpecies/common                               Success
125. isa(platalea_ajaja,pelecaniformes). bottom to top                      Success
126. isa(cattleEgret,bubulcus_ibis). equal commonName to compound species   Success
127. isa(whiteIbis,eudocimus). common species name to genus                 Success
128. isa(leastBittern,ardeidae). common species name to family              Success
129. isa(leastBittern,bittern). common species name to common family        Success
130. isa(whiteFacedIbis,chihi). common species name to species alone        Success
131. isa(plegadis_falcinellus,threskiornithidae). compound species name to family Success
132. isa(nyctanassa,nightHeron). genus to genus common name                 Success
133. isa(nyctanassa,egret). genus to wrong genus common name                Success
134. isa(nyctanassa_violacea,nightHeron). cspecies to genus common name     Success
135. isa(nyctanassa_violacea,egret). cspecies to wrong genus common name    Success
136. isa(x,X). unknown/                                                     Success
137. isa(ardea_herodias,X). species                                         Success
138. isa(greatBlueHeron,X). common species                                  Success
139. isa(ixobrychus_exilis,X). compound species                             Success
140. isa(butorides,X). genus                                                Success
141. isa(X,ardeidae). family                                                Success
142. isa(X,eudocimus_albus). compound species                               Success
143. isa(X,bittern). common species (multi)                                 Success
144. countSpecies(botaurus_lentiginosus,1). species                         Success
145. countSpecies(botaurus,1). single-species genus                         Success
146. countSpecies(egretta,4). 4-species genus                               Success
147. countSpecies(ardeidae,12). 12-species family                           Success
148. countSpecies(pelecaniformes,18). 18-species order                      Success
149. countSpecies(x,0). 0-species unknown name                              Success
150. countSpecies(botaurus_lentiginosus,X). species                         Success
151. countSpecies(botaurus,X). single-species genus                         Success
152. countSpecies(egretta,X). 4-species genus                               Success
153. countSpecies(ardeidae,X). 12-species family                            Success
154. countSpecies(pelecaniformes,X). 18-species order                       Success
155. countSpecies(x,X). 0-species unknown name                              Success
156. rangesTo(botaurus_lentiginosus,alberta). simple species                Success
157. rangesTo(botaurus_lentiginosus,canada). species, inferred location     Success
158. rangesTo(pelecanus,alberta). simple genus                              Success
159. rangesTo(pelecanus,canada). genus, inferred location                   Success
160. rangesTo(pelecanidae,canada). order, inferred location                 Success
161. rangesTo(ardea_alba,alberta). speces, wrong location                   Success
162. rangesTo(platalea_ajaja,canada). speces, wrong location                Success
163. rangesTo(botaurus_lentiginosus,X). species, inferred location          Success
164. rangesTo(pelecanus,X). simple genus                                    Success
165. rangesTo(pelecanus,X). genus, inferred location                        Success
166. rangesTo(pelecanidae,X). order, inferred location                      Success
167. rangesTo(ardea_alba,alberta). speces, wrong location                   Success
168. rangesTo(platalea_ajaja,canada). speces, wrong location                Success
169. rangesTo(X,alberta). /alberta                                          Success
170. rangesTo(X,canada). /canada                                            Success
171. rangesTo(X,Y). * / *                                                   Success
172. habitat(pelecanus_erythrorhynchos,lakePond). true                      Success
173. habitat(botaurus_lentiginosus,marsh). true                             Success
174. habitat(botaurus_lentiginosus,ocean). false                            Success
175. habitat(x,ocean). false                                                Success
176. habitat(egretta_tricolor,X). single                                    Success
177. habitat(X,ocean). single                                               Success
178. habitat(X,marsh). multiple                                             Success
179. habitat(pelecanus,ocean). genus                                        Success
180. habitat(pelecaniformes,ocean). order                                   Success
181. habitat(pelecaniformes,X). multiple                                    Success
182. food(pelecanus_erythrorhynchos,fish). true                             Success
183. food(bubulcus_ibis,insects). true                                      Success
184. food(botaurus_lentiginosus,insects). false                             Success
185. food(x,fish). false                                                    Success
186. food(egretta_tricolor,X). single                                       Success
187. food(X,insects). single                                                Success
188. food(pelecanus,fish). genus                                            Success
189. food(pelecaniformes,insects). order                                    Success
190. food(pelecaniformes,X). multiple                                       Success
191. nesting(pelecanus_erythrorhynchos,ground). true                        Success
192. nesting(egretta_tricolor,tree). true                                   Success
193. nesting(botaurus_lentiginosus,tree). false                             Success
194. nesting(x,tree). false                                                 Success
195. nesting(egretta_tricolor,X). single                                    Success
196. nesting(X,ground). multi                                               Success
197. nesting(X,tree). multi                                                 Success
198. nesting(pelecanus,ground). genus                                       Success
199. nesting(pelecanus,tree). genus                                         Success
200. nesting(pelecaniformes,tree). order                                    Success
201. nesting(pelecaniformes,X). multiple                                    Success
202. behavior(pelecanus_erythrorhynchos,surfaceDive). true                  Success
203. behavior(botaurus_lentiginosus,stalking). true                         Success
204. behavior(botaurus_lentiginosus,aerialDive). false                      Success
205. behavior(x,stalking). false                                            Success
206. behavior(egretta_tricolor,X). single                                   Success
207. behavior(X,aerialDive). single                                         Success
208. behavior(X,stalking). multiple                                         Success
209. behavior(pelecanus,aerialDive). genus                                  Success
210. behavior(pelecanus,surfaceDive). genus                                 Success
211. behavior(pelecaniformes,groundForager). order                          Success
212. behavior(pelecaniformes,X). multiple                                   Success
213. conservation(pelecanus_erythrorhynchos,lc). true                       Success
214. conservation(egretta_rufescens,nt). true                               Success
215. conservation(botaurus_lentiginosus,nt). false                          Success
216. conservation(x,lc). false                                              Success
217. conservation(egretta_tricolor,X). single                               Success
218. conservation(X,nt). single                                             Success
219. conservation(X,lc). multiple                                           Success
220. conservation(egretta,nt). genus                                        Success
221. conservation(egretta,lc). genus                                        Success
222. conservation(pelecaniformes,nt). order                                 Success
223. conservation(pelecaniformes,X). multiple                               Success

Summary:
223 Success                                 
---
223     Total Tests (version 3)
  0/0   Strict Tests Passed
223/223 Non-Strict Tests Passed

Nominal mark: 4.0 (4.00)
</pre>
Tszs-MBP:Prolog tszyeunglam$ java -jar ptestpelecaniformes.jar -prolog /opt/local/bin/gprolog pelecaniformes.pl
Prolog testing harness version 7
CPSC 449 Prolog Assignment: Pelecaniformes version 3 (Prolog testing harness version 7).
---------------------------------------------------------------
  1. Running test 'order(pelecaniformes). true'...
  Executing: /opt/local/bin/gprolog --c pelecaniformes.pl
  
  List = [_]
  
  yes
  | ?-
  Test 'order(pelecaniformes). true': Success
---------------------------------------------------------------
  2. Running test 'order(pelecanidae). false'...
  List = []
  
  yes
  | ?-
  Test 'order(pelecanidae). false': Success
---------------------------------------------------------------
  3. Running test 'order(X).'...
  setof(X,order(X),L).
  L = [pelecaniformes]
  
  yes
  | ?-
  Test 'order(X).': Success
---------------------------------------------------------------
  4. Running test 'family(pelecanidae). true'...
  List = [_]
  
  yes
  | ?-
  Test 'family(pelecanidae). true': Success
---------------------------------------------------------------
  5. Running test 'family(ardeidae). true'...
  List = [_]
  
  yes
  | ?-
  Test 'family(ardeidae). true': Success
---------------------------------------------------------------
  6. Running test 'family(threskiornithidae). true'...
  List = [_]
  
  yes
  | ?-
  Test 'family(threskiornithidae). true': Success
---------------------------------------------------------------
  7. Running test 'family(pelecaniformes). is an order'...
  List = []
  
  (1 ms) yes
  | ?-
  Test 'family(pelecaniformes). is an order': Success
---------------------------------------------------------------
  8. Running test 'family(X).'...
  setof(X,family(X),L).
  L = [ardeidae,pelecanidae,threskiornithidae]
  
  yes
  | ?-
  Test 'family(X).': Success
---------------------------------------------------------------
  9. Running test 'genus(botaurus). true'...
  List = [_]
  
  yes
  | ?-
  Test 'genus(botaurus). true': Success
---------------------------------------------------------------
 10. Running test 'genus(ardea). true'...
  List = [_]
  
  yes
  | ?-
  Test 'genus(ardea). true': Success
---------------------------------------------------------------
 11. Running test 'genus(nycticorax). is both a genus and a species'...
  List = [_]
  
  yes
  | ?-
  Test 'genus(nycticorax). is both a genus and a species': Success
---------------------------------------------------------------
 12. Running test 'genus(erythrorhynchos). is a species'...
  List = []
  
  yes
  | ?-
  Test 'genus(erythrorhynchos). is a species': Success
---------------------------------------------------------------
 13. Running test 'genus(X).'...
  setof(X,genus(X),L).
  L = [ardea,botaurus,bubulcus,butorides,egretta,eudocimus,ixobrychus,nyctanassa,nycticorax,pelecanus,platalea,plegadis]
  
  yes
  | ?-
  Test 'genus(X).': Success
---------------------------------------------------------------
 14. Running test 'species(occidentalis). true'...
  List = [_]
  
  yes
  | ?-
  Test 'species(occidentalis). true': Success
---------------------------------------------------------------
 15. Running test 'species(thula). true'...
  List = [_]
  
  yes
  | ?-
  Test 'species(thula). true': Success
---------------------------------------------------------------
 16. Running test 'species(nycticorax). is both a genus and a species'...
  List = [_]
  
  yes
  | ?-
  Test 'species(nycticorax). is both a genus and a species': Success
---------------------------------------------------------------
 17. Running test 'species(plegadis). is a genus'...
  List = []
  
  yes
  | ?-
  Test 'species(plegadis). is a genus': Success
---------------------------------------------------------------
 18. Running test 'species(X).'...
  setof(X,species(X),L).
  L = [ajaja,alba,albus,caerulea,chihi,erythrorhynchos,exilis,falcinellus,herodias,ibis,lentiginosus,nycticorax,occidentalis,rufescens,thula,tricolor,violacea,virescens]
  
  yes
  | ?-
  Test 'species(X).': Success
---------------------------------------------------------------
 19. Running test 'hasParent(plegadis_falcinellus,plegadis). cspecies/genus'...
  List = []
  
  yes
  | ?-
  Test 'hasParent(plegadis_falcinellus,plegadis). cspecies/genus': Success
---------------------------------------------------------------
 20. Running test 'hasParent(falcinellus,plegadis). species/genus'...
  List = [_]
  
  yes
  | ?-
  Test 'hasParent(falcinellus,plegadis). species/genus': Success
---------------------------------------------------------------
 21. Running test 'hasParent(nycticorax,ardeidae). genus/family'...
  List = [_]
  
  yes
  | ?-
  Test 'hasParent(nycticorax,ardeidae). genus/family': Success
---------------------------------------------------------------
 22. Running test 'hasParent(threskiornithidae,pelecaniformes). family/order'...
  List = [_]
  
  yes
  | ?-
  Test 'hasParent(threskiornithidae,pelecaniformes). family/order': Success
---------------------------------------------------------------
 23. Running test 'hasParent(falcinellus,ardeidae). species/family'...
  List = []
  
  yes
  | ?-
  Test 'hasParent(falcinellus,ardeidae). species/family': Success
---------------------------------------------------------------
 24. Running test 'hasParent(nycticorax,pelecaniformes). genus/order'...
  List = []
  
  yes
  | ?-
  Test 'hasParent(nycticorax,pelecaniformes). genus/order': Success
---------------------------------------------------------------
 25. Running test 'hasParent(X,egretta).'...
  setof(X,hasParent(X,egretta),L).
  L = [caerulea,rufescens,thula,tricolor]
  
  (1 ms) yes
  | ?-
  Test 'hasParent(X,egretta).': Success
---------------------------------------------------------------
 26. Running test 'hasParent(egretta,ardeidae). genus/family'...
  List = [_]
  
  yes
  | ?-
  Test 'hasParent(egretta,ardeidae). genus/family': Success
---------------------------------------------------------------
 27. Running test 'hasParent(caerulea,X).'...
  setof(X,hasParent(caerulea,X),L).
  L = [egretta]
  
  yes
  | ?-
  Test 'hasParent(caerulea,X).': Success
---------------------------------------------------------------
 28. Running test 'hasParent(X,Y).'...
  setof([X,Y],hasParent(X,Y),L).
  L = [[ajaja,platalea],[alba,ardea],[albus,eudocimus],[ardea,ardeidae],[ardeidae,pelecaniformes],[botaurus,ardeidae],[bubulcus,ardeidae],[butorides,ardeidae],[caerulea,egretta],[chihi,plegadis],[egretta,ardeidae],[erythrorhynchos,pelecanus],[eudocimus,threskiornithidae],[exilis,ixobrychus],[falcinellus,plegadis],[herodias,ardea],[ibis,bubulcus],[ixobrychus,ardeidae],[lentiginosus,botaurus],[nyctanassa,ardeidae],[nycticorax,ardeidae],[nycticorax,nycticorax],[occidentalis,pelecanus],[pelecanidae,pelecaniformes],[pelecanus,pelecanidae],[platalea,threskiornithidae],[plegadis,threskiornithidae],[rufescens,egretta],[threskiornithidae,pelecaniformes],[thula,egretta],[tricolor,egretta],[violacea,nyctanassa],[virescens,butorides]]
  
  yes
  | ?-
  Test 'hasParent(X,Y).': Success
---------------------------------------------------------------
 29. Running test 'hasParent2(plegadis_falcinellus,plegadis). cspecies/genus'...
  List = [_]
  
  yes
  | ?-
  Test 'hasParent2(plegadis_falcinellus,plegadis). cspecies/genus': Success
---------------------------------------------------------------
 30. Running test 'hasParent2(falcinellus,plegadis). species/genus'...
  List = []
  
  yes
  | ?-
  Test 'hasParent2(falcinellus,plegadis). species/genus': Success
---------------------------------------------------------------
 31. Running test 'hasParent2(nycticorax,ardeidae). genus/family'...
  List = [_]
  
  yes
  | ?-
  Test 'hasParent2(nycticorax,ardeidae). genus/family': Success
---------------------------------------------------------------
 32. Running test 'hasParent2(threskiornithidae,pelecaniformes). family/order'...
  List = [_]
  
  yes
  | ?-
  Test 'hasParent2(threskiornithidae,pelecaniformes). family/order': Success
---------------------------------------------------------------
 33. Running test 'hasParent2(plegadis_falcinellus,ardeidae). cspecies/family'...
  List = []
  
  yes
  | ?-
  Test 'hasParent2(plegadis_falcinellus,ardeidae). cspecies/family': Success
---------------------------------------------------------------
 34. Running test 'hasParent2(nycticorax,pelecaniformes). genus/order'...
  List = []
  
  yes
  | ?-
  Test 'hasParent2(nycticorax,pelecaniformes). genus/order': Success
---------------------------------------------------------------
 35. Running test 'hasParent2(X,egretta).'...
  setof(X,hasParent2(X,egretta),L).
  L = [egretta_caerulea,egretta_rufescens,egretta_thula,egretta_tricolor]
  
  yes
  | ?-
  Test 'hasParent2(X,egretta).': Success
---------------------------------------------------------------
 36. Running test 'hasParent2(egretta,ardeidae). genus/family'...
  List = [_]
  
  yes
  | ?-
  Test 'hasParent2(egretta,ardeidae). genus/family': Success
---------------------------------------------------------------
 37. Running test 'hasParent2(egretta_caerulea,X).'...
  setof(X,hasParent2(egretta_caerulea,X),L).
  L = [egretta]
  
  yes
  | ?-
  Test 'hasParent2(egretta_caerulea,X).': Success
---------------------------------------------------------------
 38. Running test 'hasParent2(X,Y).'...
  setof([X,Y],hasParent2(X,Y),L).
  L = [[ardea,ardeidae],[ardea_alba,ardea],[ardea_herodias,ardea],[ardeidae,pelecaniformes],[botaurus,ardeidae],[botaurus_lentiginosus,botaurus],[bubulcus,ardeidae],[bubulcus_ibis,bubulcus],[butorides,ardeidae],[butorides_virescens,butorides],[egretta,ardeidae],[egretta_caerulea,egretta],[egretta_rufescens,egretta],[egretta_thula,egretta],[egretta_tricolor,egretta],[eudocimus,threskiornithidae],[eudocimus_albus,eudocimus],[ixobrychus,ardeidae],[ixobrychus_exilis,ixobrychus],[nyctanassa,ardeidae],[nyctanassa_violacea,nyctanassa],[nycticorax,ardeidae],[nycticorax_nycticorax,nycticorax],[pelecanidae,pelecaniformes],[pelecanus,pelecanidae],[pelecanus_erythrorhynchos,pelecanus],[pelecanus_occidentalis,pelecanus],[platalea,threskiornithidae],[platalea_ajaja,platalea],[plegadis,threskiornithidae],[plegadis_chihi,plegadis],[plegadis_falcinellus,plegadis],[threskiornithidae,pelecaniformes]]
  
  yes
  | ?-
  Test 'hasParent2(X,Y).': Success
---------------------------------------------------------------
 39. Running test 'hasCommonName(pelecanus,pelican). order'...
  List = [_]
  
  yes
  | ?-
  Test 'hasCommonName(pelecanus,pelican). order': Success
---------------------------------------------------------------
 40. Running test 'hasCommonName(ardea,heron). genus'...
  List = [_]
  
  yes
  | ?-
  Test 'hasCommonName(ardea,heron). genus': Success
---------------------------------------------------------------
 41. Running test 'hasCommonName(nycticorax,nightHeron). genus'...
  List = [_]
  
  yes
  | ?-
  Test 'hasCommonName(nycticorax,nightHeron). genus': Success
---------------------------------------------------------------
 42. Running test 'hasCommonName(nyctanassa,nightHeron). genus (also above)'...
  List = [_]
  
  yes
  | ?-
  Test 'hasCommonName(nyctanassa,nightHeron). genus (also above)': Success
---------------------------------------------------------------
 43. Running test 'hasCommonName(pelecanus_erythrorhynchos,americanWhitePelican). cspeces'...
  List = [_]
  
  yes
  | ?-
  Test 'hasCommonName(pelecanus_erythrorhynchos,americanWhitePelican). cspeces': Success
---------------------------------------------------------------
 44. Running test 'hasCommonName(erythrorhynchos,americanWhitePelican). raw speces'...
  List = []
  
  yes
  | ?-
  Test 'hasCommonName(erythrorhynchos,americanWhitePelican). raw speces': Success
---------------------------------------------------------------
 45. Running test 'hasCommonName(pelecanus_erythrorhynchos,brownPelican). cspeces/wrongName'...
  List = []
  
  yes
  | ?-
  Test 'hasCommonName(pelecanus_erythrorhynchos,brownPelican). cspeces/wrongName': Success
---------------------------------------------------------------
 46. Running test 'hasCommonName(butorides_virescens,greenHeron). cspecies'...
  List = [_]
  
  yes
  | ?-
  Test 'hasCommonName(butorides_virescens,greenHeron). cspecies': Success
---------------------------------------------------------------
 47. Running test 'hasCommonName(nyctanassa_violacea,X). cspecies/'...
  setof(X,hasCommonName(nyctanassa_violacea,X),L).
  L = [yellowCrownedNightHeron]
  
  yes
  | ?-
  Test 'hasCommonName(nyctanassa_violacea,X). cspecies/': Success
---------------------------------------------------------------
 48. Running test 'hasCommonName(X,roseateSpoonbill). /commonName'...
  setof(X,hasCommonName(X,roseateSpoonbill),L).
  L = [platalea_ajaja]
  
  yes
  | ?-
  Test 'hasCommonName(X,roseateSpoonbill). /commonName': Success
---------------------------------------------------------------
 49. Running test 'hasCommonName(botaurus,lentiginosus,americanBittern). true'...
  List = [_]
  
  yes
  | ?-
  Test 'hasCommonName(botaurus,lentiginosus,americanBittern). true': Success
---------------------------------------------------------------
 50. Running test 'hasCommonName(egretta,rufescens,reddishEgret). true'...
  List = [_]
  
  yes
  | ?-
  Test 'hasCommonName(egretta,rufescens,reddishEgret). true': Success
---------------------------------------------------------------
 51. Running test 'hasCommonName(egretta,alba,reddishEgret). genus/species mismatch'...
  List = []
  
  yes
  | ?-
  Test 'hasCommonName(egretta,alba,reddishEgret). genus/species mismatch': Success
---------------------------------------------------------------
 52. Running test 'hasCommonName(egretta,rufescens,snowyEgret). wrong common name'...
  List = []
  
  yes
  | ?-
  Test 'hasCommonName(egretta,rufescens,snowyEgret). wrong common name': Success
---------------------------------------------------------------
 53. Running test 'hasCommonName(nycticorax,nycticorax,blackCrownedNightHeron). true'...
  List = [_]
  
  yes
  | ?-
  Test 'hasCommonName(nycticorax,nycticorax,blackCrownedNightHeron). true': Success
---------------------------------------------------------------
 54. Running test 'hasCommonName(botaurus,lentiginosus,X).'...
  setof(X,hasCommonName(botaurus,lentiginosus,X),L).
  L = [americanBittern]
  
  yes
  | ?-
  Test 'hasCommonName(botaurus,lentiginosus,X).': Success
---------------------------------------------------------------
 55. Running test 'hasCommonName(egretta,rufescens,X).'...
  setof(X,hasCommonName(egretta,rufescens,X),L).
  L = [reddishEgret]
  
  yes
  | ?-
  Test 'hasCommonName(egretta,rufescens,X).': Success
---------------------------------------------------------------
 56. Running test 'hasCommonName(nycticorax,nycticorax,X).'...
  setof(X,hasCommonName(nycticorax,nycticorax,X),L).
  L = [blackCrownedNightHeron]
  
  yes
  | ?-
  Test 'hasCommonName(nycticorax,nycticorax,X).': Success
---------------------------------------------------------------
 57. Running test 'hasCommonName(X,Y,americanBittern).'...
  setof([X,Y],hasCommonName(X,Y,americanBittern),L).
  L = [[botaurus,lentiginosus]]
  
  (1 ms) yes
  | ?-
  Test 'hasCommonName(X,Y,americanBittern).': Success
---------------------------------------------------------------
 58. Running test 'hasCommonName(X,Y,reddishEgret).'...
  setof([X,Y],hasCommonName(X,Y,reddishEgret),L).
  L = [[egretta,rufescens]]
  
  yes
  | ?-
  Test 'hasCommonName(X,Y,reddishEgret).': Success
---------------------------------------------------------------
 59. Running test 'hasCommonName(X,Y,blackCrownedNightHeron).'...
  setof([X,Y],hasCommonName(X,Y,blackCrownedNightHeron),L).
  L = [[nycticorax,nycticorax]]
  
  yes
  | ?-
  Test 'hasCommonName(X,Y,blackCrownedNightHeron).': Success
---------------------------------------------------------------
 60. Running test 'hasSciName(greatBlueHeron,ardea_herodias). cspeces'...
  List = [_]
  
  yes
  | ?-
  Test 'hasSciName(greatBlueHeron,ardea_herodias). cspeces': Success
---------------------------------------------------------------
 61. Running test 'hasSciName(snowyEgret,egretta_thula). cspeces'...
  List = [_]
  
  yes
  | ?-
  Test 'hasSciName(snowyEgret,egretta_thula). cspeces': Success
---------------------------------------------------------------
 62. Running test 'hasSciName(snowyEgret,thula). raw speces'...
  List = []
  
  yes
  | ?-
  Test 'hasSciName(snowyEgret,thula). raw speces': Success
---------------------------------------------------------------
 63. Running test 'hasSciName(cattleEgret,bubulcus_ibis). cspeces'...
  List = [_]
  
  yes
  | ?-
  Test 'hasSciName(cattleEgret,bubulcus_ibis). cspeces': Success
---------------------------------------------------------------
 64. Running test 'hasSciName(cattleEgret,ibis). raw speces'...
  List = []
  
  yes
  | ?-
  Test 'hasSciName(cattleEgret,ibis). raw speces': Success
---------------------------------------------------------------
 65. Running test 'hasSciName(ibis,eudocimus). genus'...
  List = [_]
  
  (1 ms) yes
  | ?-
  Test 'hasSciName(ibis,eudocimus). genus': Success
---------------------------------------------------------------
 66. Running test 'hasSciName(ibis,plegadis). genus (same as above)'...
  List = [_]
  
  yes
  | ?-
  Test 'hasSciName(ibis,plegadis). genus (same as above)': Success
---------------------------------------------------------------
 67. Running test 'hasSciName(greatBlueHeron,X). cspecies/'...
  setof(X,hasSciName(greatBlueHeron,X),L).
  L = [ardea_herodias]
  
  yes
  | ?-
  Test 'hasSciName(greatBlueHeron,X). cspecies/': Success
---------------------------------------------------------------
 68. Running test 'hasSciName(snowyEgret,X). cspecies/'...
  setof(X,hasSciName(snowyEgret,X),L).
  L = [egretta_thula]
  
  yes
  | ?-
  Test 'hasSciName(snowyEgret,X). cspecies/': Success
---------------------------------------------------------------
 69. Running test 'hasSciName(cattleEgret,X). cspecies/'...
  setof(X,hasSciName(cattleEgret,X),L).
  L = [bubulcus_ibis]
  
  yes
  | ?-
  Test 'hasSciName(cattleEgret,X). cspecies/': Success
---------------------------------------------------------------
 70. Running test 'hasSciName(X,ardea_herodias). /cspecies'...
  setof(X,hasSciName(X,ardea_herodias),L).
  L = [greatBlueHeron]
  
  yes
  | ?-
  Test 'hasSciName(X,ardea_herodias). /cspecies': Success
---------------------------------------------------------------
 71. Running test 'hasSciName(X,egretta_thula). /cspecies'...
  setof(X,hasSciName(X,egretta_thula),L).
  L = [snowyEgret]
  
  yes
  | ?-
  Test 'hasSciName(X,egretta_thula). /cspecies': Success
---------------------------------------------------------------
 72. Running test 'hasSciName(X,bubulcus_ibis). /cspecies'...
  setof(X,hasSciName(X,bubulcus_ibis),L).
  L = [cattleEgret]
  
  yes
  | ?-
  Test 'hasSciName(X,bubulcus_ibis). /cspecies': Success
---------------------------------------------------------------
 73. Running test 'hasCompoundName(pelecanus,occidentalis,pelecanus_occidentalis). true'...
  List = [_]
  
  yes
  | ?-
  Test 'hasCompoundName(pelecanus,occidentalis,pelecanus_occidentalis). true': Success
---------------------------------------------------------------
 74. Running test 'hasCompoundName(egretta,tricolor,egretta_tricolor). true'...
  List = [_]
  
  yes
  | ?-
  Test 'hasCompoundName(egretta,tricolor,egretta_tricolor). true': Success
---------------------------------------------------------------
 75. Running test 'hasCompoundName(plegadis,chihi,plegadis_chihi). true'...
  List = [_]
  
  yes
  | ?-
  Test 'hasCompoundName(plegadis,chihi,plegadis_chihi). true': Success
---------------------------------------------------------------
 76. Running test 'hasCompoundName(plegadis,chihi,egretta_tricolor). wrong name'...
  List = []
  
  yes
  | ?-
  Test 'hasCompoundName(plegadis,chihi,egretta_tricolor). wrong name': Success
---------------------------------------------------------------
 77. Running test 'hasCompoundName(pelecanus,occidentalis,X).'...
  setof(X,hasCompoundName(pelecanus,occidentalis,X),L).
  L = [pelecanus_occidentalis]
  
  yes
  | ?-
  Test 'hasCompoundName(pelecanus,occidentalis,X).': Success
---------------------------------------------------------------
 78. Running test 'hasCompoundName(egretta,tricolor,X).'...
  setof(X,hasCompoundName(egretta,tricolor,X),L).
  L = [egretta_tricolor]
  
  yes
  | ?-
  Test 'hasCompoundName(egretta,tricolor,X).': Success
---------------------------------------------------------------
 79. Running test 'hasCompoundName(plegadis,chihi,X).'...
  setof(X,hasCompoundName(plegadis,chihi,X),L).
  L = [plegadis_chihi]
  
  yes
  | ?-
  Test 'hasCompoundName(plegadis,chihi,X).': Success
---------------------------------------------------------------
 80. Running test 'hasCompoundName(X,Y,pelecanus_occidentalis).'...
  setof([X,Y],hasCompoundName(X,Y,pelecanus_occidentalis),L).
  L = [[pelecanus,occidentalis]]
  
  (1 ms) yes
  | ?-
  Test 'hasCompoundName(X,Y,pelecanus_occidentalis).': Success
---------------------------------------------------------------
 81. Running test 'hasCompoundName(X,Y,egretta_tricolor).'...
  setof([X,Y],hasCompoundName(X,Y,egretta_tricolor),L).
  L = [[egretta,tricolor]]
  
  yes
  | ?-
  Test 'hasCompoundName(X,Y,egretta_tricolor).': Success
---------------------------------------------------------------
 82. Running test 'hasCompoundName(X,Y,plegadis_chihi).'...
  setof([X,Y],hasCompoundName(X,Y,plegadis_chihi),L).
  L = [[plegadis,chihi]]
  
  yes
  | ?-
  Test 'hasCompoundName(X,Y,plegadis_chihi).': Success
---------------------------------------------------------------
 83. Running test 'synonym(plegadis,plegadis). equal'...
  List = []
  
  yes
  | ?-
  Test 'synonym(plegadis,plegadis). equal': Success
---------------------------------------------------------------
 84. Running test 'synonym(glossyIbis,plegadis_falcinellus). common/cspecies'...
  List = [_]
  
  yes
  | ?-
  Test 'synonym(glossyIbis,plegadis_falcinellus). common/cspecies': Success
---------------------------------------------------------------
 85. Running test 'synonym(glossyIbis,alcinellus). common/rawSpecies'...
  List = []
  
  yes
  | ?-
  Test 'synonym(glossyIbis,alcinellus). common/rawSpecies': Success
---------------------------------------------------------------
 86. Running test 'synonym(plegadis_falcinellus,glossyIbis). cspecies/common'...
  List = [_]
  
  yes
  | ?-
  Test 'synonym(plegadis_falcinellus,glossyIbis). cspecies/common': Success
---------------------------------------------------------------
 87. Running test 'synonym(falcinellus,glossyIbis). rawSpecies/common'...
  List = []
  
  (1 ms) yes
  | ?-
  Test 'synonym(falcinellus,glossyIbis). rawSpecies/common': Success
---------------------------------------------------------------
 88. Running test 'synonym(glossyIbis,plegadis_falcinellus). common/compound'...
  List = [_]
  
  yes
  | ?-
  Test 'synonym(glossyIbis,plegadis_falcinellus). common/compound': Success
---------------------------------------------------------------
 89. Running test 'synonym(plegadis_falcinellus,glossyIbis). compound/common'...
  List = [_]
  
  yes
  | ?-
  Test 'synonym(plegadis_falcinellus,glossyIbis). compound/common': Success
---------------------------------------------------------------
 90. Running test 'synonym(bittern,ixobrychus). common/genus'...
  List = [_]
  
  yes
  | ?-
  Test 'synonym(bittern,ixobrychus). common/genus': Success
---------------------------------------------------------------
 91. Running test 'synonym(ixobrychus,botaurus). genus/genus with same common name'...
  List = []
  
  yes
  | ?-
  Test 'synonym(ixobrychus,botaurus). genus/genus with same common name': Success
---------------------------------------------------------------
 92. Running test 'synonym(bittern,botaurus). common/genus (same as above)'...
  List = [_]
  
  yes
  | ?-
  Test 'synonym(bittern,botaurus). common/genus (same as above)': Success
---------------------------------------------------------------
 93. Running test 'synonym(heron,egret). both are names for egretta'...
  List = [_]
  
  yes
  | ?-
  Test 'synonym(heron,egret). both are names for egretta': Success
---------------------------------------------------------------
 94. Running test 'synonym(greenHeron,X). common/'...
  setof(X,synonym(greenHeron,X),L).
  L = [butorides_virescens]
  
  (1 ms) yes
  | ?-
  Test 'synonym(greenHeron,X). common/': Success
---------------------------------------------------------------
 95. Running test 'synonym(X,greenHeron). /common'...
  setof(X,synonym(X,greenHeron),L).
  L = [butorides_virescens]
  
  yes
  | ?-
  Test 'synonym(X,greenHeron). /common': Success
---------------------------------------------------------------
 96. Running test 'synonym(butorides_virescens,X). cspecies/'...
  setof(X,synonym(butorides_virescens,X),L).
  L = [greenHeron]
  
  yes
  | ?-
  Test 'synonym(butorides_virescens,X). cspecies/': Success
---------------------------------------------------------------
 97. Running test 'synonym(X,butorides_virescens). /cspecies'...
  setof(X,synonym(X,butorides_virescens),L).
  L = [greenHeron]
  
  yes
  | ?-
  Test 'synonym(X,butorides_virescens). /cspecies': Success
---------------------------------------------------------------
 98. Running test 'synonym(X,heron). /common that maps to 3 genera'...
  setof(X,synonym(X,heron),L).
  L = [ardea,butorides,egret,egretta]
  
  yes
  | ?-
  Test 'synonym(X,heron). /common that maps to 3 genera': Success
---------------------------------------------------------------
 99. Running test 'synonym(heron,X). /common that maps to 3 genera'...
  setof(X,synonym(heron,X),L).
  L = [ardea,butorides,egret,egretta]
  
  yes
  | ?-
  Test 'synonym(heron,X). /common that maps to 3 genera': Success
---------------------------------------------------------------
100. Running test 'isaStrict(exilis,exilis). equal species'...
  List = []
  
  (1 ms) yes
  | ?-
  Test 'isaStrict(exilis,exilis). equal species': Success
---------------------------------------------------------------
101. Running test 'isaStrict(ardeidae,ardeidae). equal families'...
  List = [_]
  
  yes
  | ?-
  Test 'isaStrict(ardeidae,ardeidae). equal families': Success
---------------------------------------------------------------
102. Running test 'isaStrict(x,x). equal but unknown'...
  List = []
  
  yes
  | ?-
  Test 'isaStrict(x,x). equal but unknown': Success
---------------------------------------------------------------
103. Running test 'isaStrict(ixobrychus_exilis,ixobrychus). cspecies to genus'...
  List = [_]
  
  yes
  | ?-
  Test 'isaStrict(ixobrychus_exilis,ixobrychus). cspecies to genus': Success
---------------------------------------------------------------
104. Running test 'isaStrict(ixobrychus_exilis,ardeidae). cspecies to family'...
  List = [_]
  
  yes
  | ?-
  Test 'isaStrict(ixobrychus_exilis,ardeidae). cspecies to family': Success
---------------------------------------------------------------
105. Running test 'isaStrict(ixobrychus_exilis,pelecaniformes). cspecies to top'...
  List = [_]
  
  yes
  | ?-
  Test 'isaStrict(ixobrychus_exilis,pelecaniformes). cspecies to top': Success
---------------------------------------------------------------
106. Running test 'isaStrict(ixobrychus_exilis,botaurus). cspecies to wrong genus'...
  List = []
  
  yes
  | ?-
  Test 'isaStrict(ixobrychus_exilis,botaurus). cspecies to wrong genus': Success
---------------------------------------------------------------
107. Running test 'isaStrict(ixobrychus_exilis,pelecanidae). cspecies to wrong family'...
  List = []
  
  yes
  | ?-
  Test 'isaStrict(ixobrychus_exilis,pelecanidae). cspecies to wrong family': Success
---------------------------------------------------------------
108. Running test 'isaStrict(exilis,ixobrychus). raw species to genus'...
  List = []
  
  (1 ms) yes
  | ?-
  Test 'isaStrict(exilis,ixobrychus). raw species to genus': Success
---------------------------------------------------------------
109. Running test 'isaStrict(ixobrychus_exilis,X).'...
  setof(X,isaStrict(ixobrychus_exilis,X),L).
  L = [ardeidae,ixobrychus,ixobrychus_exilis,pelecaniformes]
  
  yes
  | ?-
  Test 'isaStrict(ixobrychus_exilis,X).': Success
---------------------------------------------------------------
110. Running test 'isa(exilis,exilis). equal raw species'...
  List = []
  
  yes
  | ?-
  Test 'isa(exilis,exilis). equal raw species': Success
---------------------------------------------------------------
111. Running test 'isa(ardeidae,ardeidae). equal families'...
  List = [_]
  
  yes
  | ?-
  Test 'isa(ardeidae,ardeidae). equal families': Success
---------------------------------------------------------------
112. Running test 'isa(x,x). equal but unknown name'...
  List = []
  
  yes
  | ?-
  Test 'isa(x,x). equal but unknown name': Success
---------------------------------------------------------------
113. Running test 'isa(ixobrychus_exilis,ixobrychus). cspecies to genus'...
  List = [_]
  
  yes
  | ?-
  Test 'isa(ixobrychus_exilis,ixobrychus). cspecies to genus': Success
---------------------------------------------------------------
114. Running test 'isa(ixobrychus_exilis,ardeidae). cspecies to family'...
  List = [_]
  
  yes
  | ?-
  Test 'isa(ixobrychus_exilis,ardeidae). cspecies to family': Success
---------------------------------------------------------------
115. Running test 'isa(ixobrychus_exilis,pelecaniformes). cspecies to top'...
  List = [_]
  
  yes
  | ?-
  Test 'isa(ixobrychus_exilis,pelecaniformes). cspecies to top': Success
---------------------------------------------------------------
116. Running test 'isa(ixobrychus_exilis,botaurus). cspecies to wrong genus'...
  List = []
  
  (1 ms) yes
  | ?-
  Test 'isa(ixobrychus_exilis,botaurus). cspecies to wrong genus': Success
---------------------------------------------------------------
117. Running test 'isa(ixobrychus_exilis,pelecanidae). cspecies to wrong family'...
  List = []
  
  yes
  | ?-
  Test 'isa(ixobrychus_exilis,pelecanidae). cspecies to wrong family': Success
---------------------------------------------------------------
118. Running test 'isa(exilis,ixobrychus). raw species to genus'...
  List = []
  
  yes
  | ?-
  Test 'isa(exilis,ixobrychus). raw species to genus': Success
---------------------------------------------------------------
119. Running test 'isa(ixobrychus_exilis,X).'...
  setof(X,isa(ixobrychus_exilis,X),L).
  L = [ardeidae,ixobrychus,ixobrychus_exilis,pelecaniformes]
  
  yes
  | ?-
  Test 'isa(ixobrychus_exilis,X).': Success
---------------------------------------------------------------
120. Running test 'isa(X,pelecanidae).'...
  setof(X,isa(X,pelecanidae),L).
  L = [pelecanidae,pelecanus,pelecanus_erythrorhynchos,pelecanus_occidentalis]
  
  yes
  | ?-
  Test 'isa(X,pelecanidae).': Success
---------------------------------------------------------------
121. Running test 'isa(plegadis,ibis). equal genera/common'...
  List = [_]
  
  yes
  | ?-
  Test 'isa(plegadis,ibis). equal genera/common': Success
---------------------------------------------------------------
122. Running test 'isa(plegadis_chihi,ibis). equal cspecies/common'...
  List = [_]
  
  yes
  | ?-
  Test 'isa(plegadis_chihi,ibis). equal cspecies/common': Success
---------------------------------------------------------------
123. Running test 'isa(cattleEgret,cattleEgret). equal common/common'...
  List = [_]
  
  (1 ms) yes
  | ?-
  Test 'isa(cattleEgret,cattleEgret). equal common/common': Success
---------------------------------------------------------------
124. Running test 'isa(chihi,ibis). equal rawSpecies/common'...
  List = []
  
  yes
  | ?-
  Test 'isa(chihi,ibis). equal rawSpecies/common': Success
---------------------------------------------------------------
125. Running test 'isa(platalea_ajaja,pelecaniformes). bottom to top'...
  List = [_]
  
  yes
  | ?-
  Test 'isa(platalea_ajaja,pelecaniformes). bottom to top': Success
---------------------------------------------------------------
126. Running test 'isa(cattleEgret,bubulcus_ibis). equal commonName to compound species'...
  List = [_]
  
  yes
  | ?-
  Test 'isa(cattleEgret,bubulcus_ibis). equal commonName to compound species': Success
---------------------------------------------------------------
127. Running test 'isa(whiteIbis,eudocimus). common species name to genus'...
  List = [_]
  
  yes
  | ?-
  Test 'isa(whiteIbis,eudocimus). common species name to genus': Success
---------------------------------------------------------------
128. Running test 'isa(leastBittern,ardeidae). common species name to family'...
  List = [_]
  
  yes
  | ?-
  Test 'isa(leastBittern,ardeidae). common species name to family': Success
---------------------------------------------------------------
129. Running test 'isa(leastBittern,bittern). common species name to common family'...
  List = [_]
  
  yes
  | ?-
  Test 'isa(leastBittern,bittern). common species name to common family': Success
---------------------------------------------------------------
130. Running test 'isa(whiteFacedIbis,chihi). common species name to species alone'...
  List = []
  
  (1 ms) yes
  | ?-
  Test 'isa(whiteFacedIbis,chihi). common species name to species alone': Success
---------------------------------------------------------------
131. Running test 'isa(plegadis_falcinellus,threskiornithidae). compound species name to family'...
  List = [_]
  
  yes
  | ?-
  Test 'isa(plegadis_falcinellus,threskiornithidae). compound species name to family': Success
---------------------------------------------------------------
132. Running test 'isa(nyctanassa,nightHeron). genus to genus common name'...
  List = [_]
  
  yes
  | ?-
  Test 'isa(nyctanassa,nightHeron). genus to genus common name': Success
---------------------------------------------------------------
133. Running test 'isa(nyctanassa,egret). genus to wrong genus common name'...
  List = []
  
  yes
  | ?-
  Test 'isa(nyctanassa,egret). genus to wrong genus common name': Success
---------------------------------------------------------------
134. Running test 'isa(nyctanassa_violacea,nightHeron). cspecies to genus common name'...
  List = [_]
  
  yes
  | ?-
  Test 'isa(nyctanassa_violacea,nightHeron). cspecies to genus common name': Success
---------------------------------------------------------------
135. Running test 'isa(nyctanassa_violacea,egret). cspecies to wrong genus common name'...
  List = []
  
  yes
  | ?-
  Test 'isa(nyctanassa_violacea,egret). cspecies to wrong genus common name': Success
---------------------------------------------------------------
136. Running test 'isa(x,X). unknown/'...
  setof(X,isa(x,X),L).
  no
  | ?-
  Test 'isa(x,X). unknown/': Success
---------------------------------------------------------------
137. Running test 'isa(ardea_herodias,X). species'...
  setof(X,isa(ardea_herodias,X),L).
  L = [ardea,ardea_herodias,ardeidae,pelecaniformes]
  
  (1 ms) yes
  | ?-
  Test 'isa(ardea_herodias,X). species': Success
---------------------------------------------------------------
138. Running test 'isa(greatBlueHeron,X). common species'...
  setof(X,isa(greatBlueHeron,X),L).
  L = [ardea,ardea_herodias,ardeidae,pelecaniformes]
  
  yes
  | ?-
  Test 'isa(greatBlueHeron,X). common species': Success
---------------------------------------------------------------
139. Running test 'isa(ixobrychus_exilis,X). compound species'...
  setof(X,isa(ixobrychus_exilis,X),L).
  L = [ardeidae,ixobrychus,ixobrychus_exilis,pelecaniformes]
  
  yes
  | ?-
  Test 'isa(ixobrychus_exilis,X). compound species': Success
---------------------------------------------------------------
140. Running test 'isa(butorides,X). genus'...
  setof(X,isa(butorides,X),L).
  L = [ardeidae,butorides,pelecaniformes]
  
  yes
  | ?-
  Test 'isa(butorides,X). genus': Success
---------------------------------------------------------------
141. Running test 'isa(X,ardeidae). family'...
  setof(X,isa(X,ardeidae),L).
  L = [ardea,ardea_alba,ardea_herodias,ardeidae,botaurus,botaurus_lentiginosus,bubulcus,bubulcus_ibis,butorides,butorides_virescens,egretta,egretta_caerulea,egretta_rufescens,egretta_thula,egretta_tricolor,ixobrychus,ixobrychus_exilis,nyctanassa,nyctanassa_violacea,nycticorax,nycticorax_nycticorax]
  
  yes
  | ?-
  Test 'isa(X,ardeidae). family': Success
---------------------------------------------------------------
142. Running test 'isa(X,eudocimus_albus). compound species'...
  setof(X,isa(X,eudocimus_albus),L).
  L = [eudocimus_albus]
  
  yes
  | ?-
  Test 'isa(X,eudocimus_albus). compound species': Success
---------------------------------------------------------------
143. Running test 'isa(X,bittern). common species (multi)'...
  setof(X,isa(X,bittern),L).
  L = [botaurus,botaurus_lentiginosus,ixobrychus,ixobrychus_exilis]
  
  (1 ms) yes
  | ?-
  Test 'isa(X,bittern). common species (multi)': Success
---------------------------------------------------------------
144. Running test 'countSpecies(botaurus_lentiginosus,1). species'...
  List = [_]
  
  yes
  | ?-
  Test 'countSpecies(botaurus_lentiginosus,1). species': Success
---------------------------------------------------------------
145. Running test 'countSpecies(botaurus,1). single-species genus'...
  List = [_]
  
  yes
  | ?-
  Test 'countSpecies(botaurus,1). single-species genus': Success
---------------------------------------------------------------
146. Running test 'countSpecies(egretta,4). 4-species genus'...
  List = [_]
  
  yes
  | ?-
  Test 'countSpecies(egretta,4). 4-species genus': Success
---------------------------------------------------------------
147. Running test 'countSpecies(ardeidae,12). 12-species family'...
  List = [_]
  
  yes
  | ?-
  Test 'countSpecies(ardeidae,12). 12-species family': Success
---------------------------------------------------------------
148. Running test 'countSpecies(pelecaniformes,18). 18-species order'...
  List = [_]
  
  yes
  | ?-
  Test 'countSpecies(pelecaniformes,18). 18-species order': Success
---------------------------------------------------------------
149. Running test 'countSpecies(x,0). 0-species unknown name'...
  List = [_]
  
  yes
  | ?-
  Test 'countSpecies(x,0). 0-species unknown name': Success
---------------------------------------------------------------
150. Running test 'countSpecies(botaurus_lentiginosus,X). species'...
  setof(X,countSpecies(botaurus_lentiginosus,X),L).
  L = [1]
  
  (1 ms) yes
  | ?-
  Test 'countSpecies(botaurus_lentiginosus,X). species': Success
---------------------------------------------------------------
151. Running test 'countSpecies(botaurus,X). single-species genus'...
  setof(X,countSpecies(botaurus,X),L).
  L = [1]
  
  yes
  | ?-
  Test 'countSpecies(botaurus,X). single-species genus': Success
---------------------------------------------------------------
152. Running test 'countSpecies(egretta,X). 4-species genus'...
  setof(X,countSpecies(egretta,X),L).
  L = [4]
  
  yes
  | ?-
  Test 'countSpecies(egretta,X). 4-species genus': Success
---------------------------------------------------------------
153. Running test 'countSpecies(ardeidae,X). 12-species family'...
  setof(X,countSpecies(ardeidae,X),L).
  L = [12]
  
  yes
  | ?-
  Test 'countSpecies(ardeidae,X). 12-species family': Success
---------------------------------------------------------------
154. Running test 'countSpecies(pelecaniformes,X). 18-species order'...
  setof(X,countSpecies(pelecaniformes,X),L).
  L = [18]
  
  yes
  | ?-
  Test 'countSpecies(pelecaniformes,X). 18-species order': Success
---------------------------------------------------------------
155. Running test 'countSpecies(x,X). 0-species unknown name'...
  setof(X,countSpecies(x,X),L).
  L = [0]
  
  yes
  | ?-
  Test 'countSpecies(x,X). 0-species unknown name': Success
---------------------------------------------------------------
156. Running test 'rangesTo(botaurus_lentiginosus,alberta). simple species'...
  List = [_]
  
  yes
  | ?-
  Test 'rangesTo(botaurus_lentiginosus,alberta). simple species': Success
---------------------------------------------------------------
157. Running test 'rangesTo(botaurus_lentiginosus,canada). species, inferred location'...
  List = [_]
  
  yes
  | ?-
  Test 'rangesTo(botaurus_lentiginosus,canada). species, inferred location': Success
---------------------------------------------------------------
158. Running test 'rangesTo(pelecanus,alberta). simple genus'...
  List = [_]
  
  (1 ms) yes
  | ?-
  Test 'rangesTo(pelecanus,alberta). simple genus': Success
---------------------------------------------------------------
159. Running test 'rangesTo(pelecanus,canada). genus, inferred location'...
  List = [_]
  
  yes
  | ?-
  Test 'rangesTo(pelecanus,canada). genus, inferred location': Success
---------------------------------------------------------------
160. Running test 'rangesTo(pelecanidae,canada). order, inferred location'...
  List = [_]
  
  yes
  | ?-
  Test 'rangesTo(pelecanidae,canada). order, inferred location': Success
---------------------------------------------------------------
161. Running test 'rangesTo(ardea_alba,alberta). speces, wrong location'...
  List = []
  
  yes
  | ?-
  Test 'rangesTo(ardea_alba,alberta). speces, wrong location': Success
---------------------------------------------------------------
162. Running test 'rangesTo(platalea_ajaja,canada). speces, wrong location'...
  List = []
  
  yes
  | ?-
  Test 'rangesTo(platalea_ajaja,canada). speces, wrong location': Success
---------------------------------------------------------------
163. Running test 'rangesTo(botaurus_lentiginosus,X). species, inferred location'...
  setof(X,rangesTo(botaurus_lentiginosus,X),L).
  L = [alberta,canada]
  
  yes
  | ?-
  Test 'rangesTo(botaurus_lentiginosus,X). species, inferred location': Success
---------------------------------------------------------------
164. Running test 'rangesTo(pelecanus,X). simple genus'...
  setof(X,rangesTo(pelecanus,X),L).
  L = [alberta,canada]
  
  yes
  | ?-
  Test 'rangesTo(pelecanus,X). simple genus': Success
---------------------------------------------------------------
165. Running test 'rangesTo(pelecanus,X). genus, inferred location'...
  setof(X,rangesTo(pelecanus,X),L).
  L = [alberta,canada]
  
  yes
  | ?-
  Test 'rangesTo(pelecanus,X). genus, inferred location': Success
---------------------------------------------------------------
166. Running test 'rangesTo(pelecanidae,X). order, inferred location'...
  setof(X,rangesTo(pelecanidae,X),L).
  L = [alberta,canada]
  
  yes
  | ?-
  Test 'rangesTo(pelecanidae,X). order, inferred location': Success
---------------------------------------------------------------
167. Running test 'rangesTo(ardea_alba,alberta). speces, wrong location'...
  setof(X,rangesTo(ardea_alba,alberta),L).
  (1 ms) no
  | ?-
  Test 'rangesTo(ardea_alba,alberta). speces, wrong location': Success
---------------------------------------------------------------
168. Running test 'rangesTo(platalea_ajaja,canada). speces, wrong location'...
  setof(X,rangesTo(platalea_ajaja,canada),L).
  no
  | ?-
  Test 'rangesTo(platalea_ajaja,canada). speces, wrong location': Success
---------------------------------------------------------------
169. Running test 'rangesTo(X,alberta). /alberta'...
  setof(X,rangesTo(X,alberta),L).
  L = [ardea_herodias,botaurus_lentiginosus,nycticorax_nycticorax,pelecanus_erythrorhynchos]
  
  yes
  | ?-
  Test 'rangesTo(X,alberta). /alberta': Success
---------------------------------------------------------------
170. Running test 'rangesTo(X,canada). /canada'...
  setof(X,rangesTo(X,canada),L).
  L = [ardea_alba,ardea_herodias,botaurus_lentiginosus,bubulcus_ibis,butorides_virescens,nycticorax_nycticorax,pelecanus_erythrorhynchos]
  
  yes
  | ?-
  Test 'rangesTo(X,canada). /canada': Success
---------------------------------------------------------------
171. Running test 'rangesTo(X,Y). * / *'...
  setof([X,Y],rangesTo(X,Y),L).
  L = [[ardea_alba,canada],[ardea_herodias,alberta],[ardea_herodias,canada],[botaurus_lentiginosus,alberta],[botaurus_lentiginosus,canada],[bubulcus_ibis,canada],[butorides_virescens,canada],[nycticorax_nycticorax,alberta],[nycticorax_nycticorax,canada],[pelecanus_erythrorhynchos,alberta],[pelecanus_erythrorhynchos,canada]]
  
  yes
  | ?-
  Test 'rangesTo(X,Y). * / *': Success
---------------------------------------------------------------
172. Running test 'habitat(pelecanus_erythrorhynchos,lakePond). true'...
  List = [_]
  
  yes
  | ?-
  Test 'habitat(pelecanus_erythrorhynchos,lakePond). true': Success
---------------------------------------------------------------
173. Running test 'habitat(botaurus_lentiginosus,marsh). true'...
  List = [_]
  
  yes
  | ?-
  Test 'habitat(botaurus_lentiginosus,marsh). true': Success
---------------------------------------------------------------
174. Running test 'habitat(botaurus_lentiginosus,ocean). false'...
  List = []
  
  yes
  | ?-
  Test 'habitat(botaurus_lentiginosus,ocean). false': Success
---------------------------------------------------------------
175. Running test 'habitat(x,ocean). false'...
  List = []
  
  yes
  | ?-
  Test 'habitat(x,ocean). false': Success
---------------------------------------------------------------
176. Running test 'habitat(egretta_tricolor,X). single'...
  setof(X,habitat(egretta_tricolor,X),L).
  L = [marsh]
  
  yes
  | ?-
  Test 'habitat(egretta_tricolor,X). single': Success
---------------------------------------------------------------
177. Running test 'habitat(X,ocean). single'...
  setof(X,habitat(X,ocean),L).
  L = [pelecanus_occidentalis]
  
  yes
  | ?-
  Test 'habitat(X,ocean). single': Success
---------------------------------------------------------------
178. Running test 'habitat(X,marsh). multiple'...
  setof(X,habitat(X,marsh),L).
  L = [ardea_alba,ardea_herodias,botaurus_lentiginosus,bubulcus_ibis,butorides_virescens,egretta_caerulea,egretta_rufescens,egretta_thula,egretta_tricolor,eudocimus_albus,ixobrychus_exilis,nyctanassa_violacea,nycticorax_nycticorax,platalea_ajaja,plegadis_chihi,plegadis_falcinellus]
  
  yes
  | ?-
  Test 'habitat(X,marsh). multiple': Success
---------------------------------------------------------------
179. Running test 'habitat(pelecanus,ocean). genus'...
  List = [_]
  
  yes
  | ?-
  Test 'habitat(pelecanus,ocean). genus': Success
---------------------------------------------------------------
180. Running test 'habitat(pelecaniformes,ocean). order'...
  List = [_]
  
  yes
  | ?-
  Test 'habitat(pelecaniformes,ocean). order': Success
---------------------------------------------------------------
181. Running test 'habitat(pelecaniformes,X). multiple'...
  setof(X,habitat(pelecaniformes,X),L).
  L = [lakePond,marsh,ocean]
  
  yes
  | ?-
  Test 'habitat(pelecaniformes,X). multiple': Success
---------------------------------------------------------------
182. Running test 'food(pelecanus_erythrorhynchos,fish). true'...
  List = [_]
  
  yes
  | ?-
  Test 'food(pelecanus_erythrorhynchos,fish). true': Success
---------------------------------------------------------------
183. Running test 'food(bubulcus_ibis,insects). true'...
  List = [_]
  
  yes
  | ?-
  Test 'food(bubulcus_ibis,insects). true': Success
---------------------------------------------------------------
184. Running test 'food(botaurus_lentiginosus,insects). false'...
  List = []
  
  yes
  | ?-
  Test 'food(botaurus_lentiginosus,insects). false': Success
---------------------------------------------------------------
185. Running test 'food(x,fish). false'...
  List = []
  
  yes
  | ?-
  Test 'food(x,fish). false': Success
---------------------------------------------------------------
186. Running test 'food(egretta_tricolor,X). single'...
  setof(X,food(egretta_tricolor,X),L).
  L = [fish]
  
  yes
  | ?-
  Test 'food(egretta_tricolor,X). single': Success
---------------------------------------------------------------
187. Running test 'food(X,insects). single'...
  setof(X,food(X,insects),L).
  L = [bubulcus_ibis,eudocimus_albus,nyctanassa_violacea,plegadis_chihi,plegadis_falcinellus]
  
  yes
  | ?-
  Test 'food(X,insects). single': Success
---------------------------------------------------------------
188. Running test 'food(pelecanus,fish). genus'...
  List = [_,_]
  
  yes
  | ?-
  Test 'food(pelecanus,fish). genus': Success
---------------------------------------------------------------
189. Running test 'food(pelecaniformes,insects). order'...
  List = [_,_,_,_,_]
  
  yes
  | ?-
  Test 'food(pelecaniformes,insects). order': Success
---------------------------------------------------------------
190. Running test 'food(pelecaniformes,X). multiple'...
  setof(X,food(pelecaniformes,X),L).
  L = [fish,insects]
  
  yes
  | ?-
  Test 'food(pelecaniformes,X). multiple': Success
---------------------------------------------------------------
191. Running test 'nesting(pelecanus_erythrorhynchos,ground). true'...
  List = [_]
  
  yes
  | ?-
  Test 'nesting(pelecanus_erythrorhynchos,ground). true': Success
---------------------------------------------------------------
192. Running test 'nesting(egretta_tricolor,tree). true'...
  List = [_]
  
  yes
  | ?-
  Test 'nesting(egretta_tricolor,tree). true': Success
---------------------------------------------------------------
193. Running test 'nesting(botaurus_lentiginosus,tree). false'...
  List = []
  
  (1 ms) yes
  | ?-
  Test 'nesting(botaurus_lentiginosus,tree). false': Success
---------------------------------------------------------------
194. Running test 'nesting(x,tree). false'...
  List = []
  
  yes
  | ?-
  Test 'nesting(x,tree). false': Success
---------------------------------------------------------------
195. Running test 'nesting(egretta_tricolor,X). single'...
  setof(X,nesting(egretta_tricolor,X),L).
  L = [tree]
  
  yes
  | ?-
  Test 'nesting(egretta_tricolor,X). single': Success
---------------------------------------------------------------
196. Running test 'nesting(X,ground). multi'...
  setof(X,nesting(X,ground),L).
  L = [botaurus_lentiginosus,ixobrychus_exilis,pelecanus_erythrorhynchos,plegadis_chihi,plegadis_falcinellus]
  
  yes
  | ?-
  Test 'nesting(X,ground). multi': Success
---------------------------------------------------------------
197. Running test 'nesting(X,tree). multi'...
  setof(X,nesting(X,tree),L).
  L = [ardea_alba,ardea_herodias,bubulcus_ibis,butorides_virescens,egretta_caerulea,egretta_rufescens,egretta_thula,egretta_tricolor,eudocimus_albus,nyctanassa_violacea,nycticorax_nycticorax,pelecanus_occidentalis,platalea_ajaja]
  
  yes
  | ?-
  Test 'nesting(X,tree). multi': Success
---------------------------------------------------------------
198. Running test 'nesting(pelecanus,ground). genus'...
  List = [_]
  
  yes
  | ?-
  Test 'nesting(pelecanus,ground). genus': Success
---------------------------------------------------------------
199. Running test 'nesting(pelecanus,tree). genus'...
  List = [_]
  
  yes
  | ?-
  Test 'nesting(pelecanus,tree). genus': Success
---------------------------------------------------------------
200. Running test 'nesting(pelecaniformes,tree). order'...
  List = [_,_,_,_,_,_,_,_,_,_,_,_,_]
  
  yes
  | ?-
  Test 'nesting(pelecaniformes,tree). order': Success
---------------------------------------------------------------
201. Running test 'nesting(pelecaniformes,X). multiple'...
  setof(X,nesting(pelecaniformes,X),L).
  L = [ground,tree]
  
  (1 ms) yes
  | ?-
  Test 'nesting(pelecaniformes,X). multiple': Success
---------------------------------------------------------------
202. Running test 'behavior(pelecanus_erythrorhynchos,surfaceDive). true'...
  List = [_]
  
  yes
  | ?-
  Test 'behavior(pelecanus_erythrorhynchos,surfaceDive). true': Success
---------------------------------------------------------------
203. Running test 'behavior(botaurus_lentiginosus,stalking). true'...
  List = [_]
  
  yes
  | ?-
  Test 'behavior(botaurus_lentiginosus,stalking). true': Success
---------------------------------------------------------------
204. Running test 'behavior(botaurus_lentiginosus,aerialDive). false'...
  List = []
  
  yes
  | ?-
  Test 'behavior(botaurus_lentiginosus,aerialDive). false': Success
---------------------------------------------------------------
205. Running test 'behavior(x,stalking). false'...
  List = []
  
  yes
  | ?-
  Test 'behavior(x,stalking). false': Success
---------------------------------------------------------------
206. Running test 'behavior(egretta_tricolor,X). single'...
  setof(X,behavior(egretta_tricolor,X),L).
  L = [stalking]
  
  yes
  | ?-
  Test 'behavior(egretta_tricolor,X). single': Success
---------------------------------------------------------------
207. Running test 'behavior(X,aerialDive). single'...
  setof(X,behavior(X,aerialDive),L).
  L = [pelecanus_occidentalis]
  
  yes
  | ?-
  Test 'behavior(X,aerialDive). single': Success
---------------------------------------------------------------
208. Running test 'behavior(X,stalking). multiple'...
  setof(X,behavior(X,stalking),L).
  L = [ardea_alba,ardea_herodias,botaurus_lentiginosus,butorides_virescens,egretta_caerulea,egretta_rufescens,egretta_thula,egretta_tricolor,ixobrychus_exilis,nyctanassa_violacea,nycticorax_nycticorax]
  
  (1 ms) yes
  | ?-
  Test 'behavior(X,stalking). multiple': Success
---------------------------------------------------------------
209. Running test 'behavior(pelecanus,aerialDive). genus'...
  List = [_]
  
  yes
  | ?-
  Test 'behavior(pelecanus,aerialDive). genus': Success
---------------------------------------------------------------
210. Running test 'behavior(pelecanus,surfaceDive). genus'...
  List = [_]
  
  yes
  | ?-
  Test 'behavior(pelecanus,surfaceDive). genus': Success
---------------------------------------------------------------
211. Running test 'behavior(pelecaniformes,groundForager). order'...
  List = [_]
  
  yes
  | ?-
  Test 'behavior(pelecaniformes,groundForager). order': Success
---------------------------------------------------------------
212. Running test 'behavior(pelecaniformes,X). multiple'...
  setof(X,behavior(pelecaniformes,X),L).
  L = [aerialDive,groundForager,probing,stalking,surfaceDive]
  
  yes
  | ?-
  Test 'behavior(pelecaniformes,X). multiple': Success
---------------------------------------------------------------
213. Running test 'conservation(pelecanus_erythrorhynchos,lc). true'...
  List = [_]
  
  yes
  | ?-
  Test 'conservation(pelecanus_erythrorhynchos,lc). true': Success
---------------------------------------------------------------
214. Running test 'conservation(egretta_rufescens,nt). true'...
  List = [_]
  
  yes
  | ?-
  Test 'conservation(egretta_rufescens,nt). true': Success
---------------------------------------------------------------
215. Running test 'conservation(botaurus_lentiginosus,nt). false'...
  List = []
  
  yes
  | ?-
  Test 'conservation(botaurus_lentiginosus,nt). false': Success
---------------------------------------------------------------
216. Running test 'conservation(x,lc). false'...
  List = []
  
  yes
  | ?-
  Test 'conservation(x,lc). false': Success
---------------------------------------------------------------
217. Running test 'conservation(egretta_tricolor,X). single'...
  setof(X,conservation(egretta_tricolor,X),L).
  L = [lc]
  
  yes
  | ?-
  Test 'conservation(egretta_tricolor,X). single': Success
---------------------------------------------------------------
218. Running test 'conservation(X,nt). single'...
  setof(X,conservation(X,nt),L).
  L = [egretta_rufescens]
  
  yes
  | ?-
  Test 'conservation(X,nt). single': Success
---------------------------------------------------------------
219. Running test 'conservation(X,lc). multiple'...
  setof(X,conservation(X,lc),L).
  L = [ardea_alba,ardea_herodias,botaurus_lentiginosus,bubulcus_ibis,butorides_virescens,egretta_caerulea,egretta_thula,egretta_tricolor,eudocimus_albus,ixobrychus_exilis,nyctanassa_violacea,nycticorax_nycticorax,pelecanus_erythrorhynchos,pelecanus_occidentalis,platalea_ajaja,plegadis_chihi,plegadis_falcinellus]
  
  yes
  | ?-
  Test 'conservation(X,lc). multiple': Success
---------------------------------------------------------------
220. Running test 'conservation(egretta,nt). genus'...
  List = [_]
  
  yes
  | ?-
  Test 'conservation(egretta,nt). genus': Success
---------------------------------------------------------------
221. Running test 'conservation(egretta,lc). genus'...
  List = [_,_,_]
  
  yes
  | ?-
  Test 'conservation(egretta,lc). genus': Success
---------------------------------------------------------------
222. Running test 'conservation(pelecaniformes,nt). order'...
  List = [_]
  
  yes
  | ?-
  Test 'conservation(pelecaniformes,nt). order': Success
---------------------------------------------------------------
223. Running test 'conservation(pelecaniformes,X). multiple'...
  setof(X,conservation(pelecaniformes,X),L).
  L = [lc,nt]
  
  yes
  | ?-
  Test 'conservation(pelecaniformes,X). multiple': Success

<pre>

CPSC 449 Prolog Assignment: Pelecaniformes version 3 (Prolog testing harness version 7).
========================================================================================
     Test                                                                   Result 
     ------------                                                           ------------
  1. order(pelecaniformes). true                                            Success
  2. order(pelecanidae). false                                              Success
  3. order(X).                                                              Success
  4. family(pelecanidae). true                                              Success
  5. family(ardeidae). true                                                 Success
  6. family(threskiornithidae). true                                        Success
  7. family(pelecaniformes). is an order                                    Success
  8. family(X).                                                             Success
  9. genus(botaurus). true                                                  Success
 10. genus(ardea). true                                                     Success
 11. genus(nycticorax). is both a genus and a species                       Success
 12. genus(erythrorhynchos). is a species                                   Success
 13. genus(X).                                                              Success
 14. species(occidentalis). true                                            Success
 15. species(thula). true                                                   Success
 16. species(nycticorax). is both a genus and a species                     Success
 17. species(plegadis). is a genus                                          Success
 18. species(X).                                                            Success
 19. hasParent(plegadis_falcinellus,plegadis). cspecies/genus               Success
 20. hasParent(falcinellus,plegadis). species/genus                         Success
 21. hasParent(nycticorax,ardeidae). genus/family                           Success
 22. hasParent(threskiornithidae,pelecaniformes). family/order              Success
 23. hasParent(falcinellus,ardeidae). species/family                        Success
 24. hasParent(nycticorax,pelecaniformes). genus/order                      Success
 25. hasParent(X,egretta).                                                  Success
 26. hasParent(egretta,ardeidae). genus/family                              Success
 27. hasParent(caerulea,X).                                                 Success
 28. hasParent(X,Y).                                                        Success
 29. hasParent2(plegadis_falcinellus,plegadis). cspecies/genus              Success
 30. hasParent2(falcinellus,plegadis). species/genus                        Success
 31. hasParent2(nycticorax,ardeidae). genus/family                          Success
 32. hasParent2(threskiornithidae,pelecaniformes). family/order             Success
 33. hasParent2(plegadis_falcinellus,ardeidae). cspecies/family             Success
 34. hasParent2(nycticorax,pelecaniformes). genus/order                     Success
 35. hasParent2(X,egretta).                                                 Success
 36. hasParent2(egretta,ardeidae). genus/family                             Success
 37. hasParent2(egretta_caerulea,X).                                        Success
 38. hasParent2(X,Y).                                                       Success
 39. hasCommonName(pelecanus,pelican). order                                Success
 40. hasCommonName(ardea,heron). genus                                      Success
 41. hasCommonName(nycticorax,nightHeron). genus                            Success
 42. hasCommonName(nyctanassa,nightHeron). genus (also above)               Success
 43. hasCommonName(pelecanus_erythrorhynchos,americanWhitePelican). cspeces Success
 44. hasCommonName(erythrorhynchos,americanWhitePelican). raw speces        Success
 45. hasCommonName(pelecanus_erythrorhynchos,brownPelican). cspeces/wrongName Success
 46. hasCommonName(butorides_virescens,greenHeron). cspecies                Success
 47. hasCommonName(nyctanassa_violacea,X). cspecies/                        Success
 48. hasCommonName(X,roseateSpoonbill). /commonName                         Success
 49. hasCommonName(botaurus,lentiginosus,americanBittern). true             Success
 50. hasCommonName(egretta,rufescens,reddishEgret). true                    Success
 51. hasCommonName(egretta,alba,reddishEgret). genus/species mismatch       Success
 52. hasCommonName(egretta,rufescens,snowyEgret). wrong common name         Success
 53. hasCommonName(nycticorax,nycticorax,blackCrownedNightHeron). true      Success
 54. hasCommonName(botaurus,lentiginosus,X).                                Success
 55. hasCommonName(egretta,rufescens,X).                                    Success
 56. hasCommonName(nycticorax,nycticorax,X).                                Success
 57. hasCommonName(X,Y,americanBittern).                                    Success
 58. hasCommonName(X,Y,reddishEgret).                                       Success
 59. hasCommonName(X,Y,blackCrownedNightHeron).                             Success
 60. hasSciName(greatBlueHeron,ardea_herodias). cspeces                     Success
 61. hasSciName(snowyEgret,egretta_thula). cspeces                          Success
 62. hasSciName(snowyEgret,thula). raw speces                               Success
 63. hasSciName(cattleEgret,bubulcus_ibis). cspeces                         Success
 64. hasSciName(cattleEgret,ibis). raw speces                               Success
 65. hasSciName(ibis,eudocimus). genus                                      Success
 66. hasSciName(ibis,plegadis). genus (same as above)                       Success
 67. hasSciName(greatBlueHeron,X). cspecies/                                Success
 68. hasSciName(snowyEgret,X). cspecies/                                    Success
 69. hasSciName(cattleEgret,X). cspecies/                                   Success
 70. hasSciName(X,ardea_herodias). /cspecies                                Success
 71. hasSciName(X,egretta_thula). /cspecies                                 Success
 72. hasSciName(X,bubulcus_ibis). /cspecies                                 Success
 73. hasCompoundName(pelecanus,occidentalis,pelecanus_occidentalis). true   Success
 74. hasCompoundName(egretta,tricolor,egretta_tricolor). true               Success
 75. hasCompoundName(plegadis,chihi,plegadis_chihi). true                   Success
 76. hasCompoundName(plegadis,chihi,egretta_tricolor). wrong name           Success
 77. hasCompoundName(pelecanus,occidentalis,X).                             Success
 78. hasCompoundName(egretta,tricolor,X).                                   Success
 79. hasCompoundName(plegadis,chihi,X).                                     Success
 80. hasCompoundName(X,Y,pelecanus_occidentalis).                           Success
 81. hasCompoundName(X,Y,egretta_tricolor).                                 Success
 82. hasCompoundName(X,Y,plegadis_chihi).                                   Success
 83. synonym(plegadis,plegadis). equal                                      Success
 84. synonym(glossyIbis,plegadis_falcinellus). common/cspecies              Success
 85. synonym(glossyIbis,alcinellus). common/rawSpecies                      Success
 86. synonym(plegadis_falcinellus,glossyIbis). cspecies/common              Success
 87. synonym(falcinellus,glossyIbis). rawSpecies/common                     Success
 88. synonym(glossyIbis,plegadis_falcinellus). common/compound              Success
 89. synonym(plegadis_falcinellus,glossyIbis). compound/common              Success
 90. synonym(bittern,ixobrychus). common/genus                              Success
 91. synonym(ixobrychus,botaurus). genus/genus with same common name        Success
 92. synonym(bittern,botaurus). common/genus (same as above)                Success
 93. synonym(heron,egret). both are names for egretta                       Success
 94. synonym(greenHeron,X). common/                                         Success
 95. synonym(X,greenHeron). /common                                         Success
 96. synonym(butorides_virescens,X). cspecies/                              Success
 97. synonym(X,butorides_virescens). /cspecies                              Success
 98. synonym(X,heron). /common that maps to 3 genera                        Success
 99. synonym(heron,X). /common that maps to 3 genera                        Success
100. isaStrict(exilis,exilis). equal species                                Success
101. isaStrict(ardeidae,ardeidae). equal families                           Success
102. isaStrict(x,x). equal but unknown                                      Success
103. isaStrict(ixobrychus_exilis,ixobrychus). cspecies to genus             Success
104. isaStrict(ixobrychus_exilis,ardeidae). cspecies to family              Success
105. isaStrict(ixobrychus_exilis,pelecaniformes). cspecies to top           Success
106. isaStrict(ixobrychus_exilis,botaurus). cspecies to wrong genus         Success
107. isaStrict(ixobrychus_exilis,pelecanidae). cspecies to wrong family     Success
108. isaStrict(exilis,ixobrychus). raw species to genus                     Success
109. isaStrict(ixobrychus_exilis,X).                                        Success
110. isa(exilis,exilis). equal raw species                                  Success
111. isa(ardeidae,ardeidae). equal families                                 Success
112. isa(x,x). equal but unknown name                                       Success
113. isa(ixobrychus_exilis,ixobrychus). cspecies to genus                   Success
114. isa(ixobrychus_exilis,ardeidae). cspecies to family                    Success
115. isa(ixobrychus_exilis,pelecaniformes). cspecies to top                 Success
116. isa(ixobrychus_exilis,botaurus). cspecies to wrong genus               Success
117. isa(ixobrychus_exilis,pelecanidae). cspecies to wrong family           Success
118. isa(exilis,ixobrychus). raw species to genus                           Success
119. isa(ixobrychus_exilis,X).                                              Success
120. isa(X,pelecanidae).                                                    Success
121. isa(plegadis,ibis). equal genera/common                                Success
122. isa(plegadis_chihi,ibis). equal cspecies/common                        Success
123. isa(cattleEgret,cattleEgret). equal common/common                      Success
124. isa(chihi,ibis). equal rawSpecies/common                               Success
125. isa(platalea_ajaja,pelecaniformes). bottom to top                      Success
126. isa(cattleEgret,bubulcus_ibis). equal commonName to compound species   Success
127. isa(whiteIbis,eudocimus). common species name to genus                 Success
128. isa(leastBittern,ardeidae). common species name to family              Success
129. isa(leastBittern,bittern). common species name to common family        Success
130. isa(whiteFacedIbis,chihi). common species name to species alone        Success
131. isa(plegadis_falcinellus,threskiornithidae). compound species name to family Success
132. isa(nyctanassa,nightHeron). genus to genus common name                 Success
133. isa(nyctanassa,egret). genus to wrong genus common name                Success
134. isa(nyctanassa_violacea,nightHeron). cspecies to genus common name     Success
135. isa(nyctanassa_violacea,egret). cspecies to wrong genus common name    Success
136. isa(x,X). unknown/                                                     Success
137. isa(ardea_herodias,X). species                                         Success
138. isa(greatBlueHeron,X). common species                                  Success
139. isa(ixobrychus_exilis,X). compound species                             Success
140. isa(butorides,X). genus                                                Success
141. isa(X,ardeidae). family                                                Success
142. isa(X,eudocimus_albus). compound species                               Success
143. isa(X,bittern). common species (multi)                                 Success
144. countSpecies(botaurus_lentiginosus,1). species                         Success
145. countSpecies(botaurus,1). single-species genus                         Success
146. countSpecies(egretta,4). 4-species genus                               Success
147. countSpecies(ardeidae,12). 12-species family                           Success
148. countSpecies(pelecaniformes,18). 18-species order                      Success
149. countSpecies(x,0). 0-species unknown name                              Success
150. countSpecies(botaurus_lentiginosus,X). species                         Success
151. countSpecies(botaurus,X). single-species genus                         Success
152. countSpecies(egretta,X). 4-species genus                               Success
153. countSpecies(ardeidae,X). 12-species family                            Success
154. countSpecies(pelecaniformes,X). 18-species order                       Success
155. countSpecies(x,X). 0-species unknown name                              Success
156. rangesTo(botaurus_lentiginosus,alberta). simple species                Success
157. rangesTo(botaurus_lentiginosus,canada). species, inferred location     Success
158. rangesTo(pelecanus,alberta). simple genus                              Success
159. rangesTo(pelecanus,canada). genus, inferred location                   Success
160. rangesTo(pelecanidae,canada). order, inferred location                 Success
161. rangesTo(ardea_alba,alberta). speces, wrong location                   Success
162. rangesTo(platalea_ajaja,canada). speces, wrong location                Success
163. rangesTo(botaurus_lentiginosus,X). species, inferred location          Success
164. rangesTo(pelecanus,X). simple genus                                    Success
165. rangesTo(pelecanus,X). genus, inferred location                        Success
166. rangesTo(pelecanidae,X). order, inferred location                      Success
167. rangesTo(ardea_alba,alberta). speces, wrong location                   Success
168. rangesTo(platalea_ajaja,canada). speces, wrong location                Success
169. rangesTo(X,alberta). /alberta                                          Success
170. rangesTo(X,canada). /canada                                            Success
171. rangesTo(X,Y). * / *                                                   Success
172. habitat(pelecanus_erythrorhynchos,lakePond). true                      Success
173. habitat(botaurus_lentiginosus,marsh). true                             Success
174. habitat(botaurus_lentiginosus,ocean). false                            Success
175. habitat(x,ocean). false                                                Success
176. habitat(egretta_tricolor,X). single                                    Success
177. habitat(X,ocean). single                                               Success
178. habitat(X,marsh). multiple                                             Success
179. habitat(pelecanus,ocean). genus                                        Success
180. habitat(pelecaniformes,ocean). order                                   Success
181. habitat(pelecaniformes,X). multiple                                    Success
182. food(pelecanus_erythrorhynchos,fish). true                             Success
183. food(bubulcus_ibis,insects). true                                      Success
184. food(botaurus_lentiginosus,insects). false                             Success
185. food(x,fish). false                                                    Success
186. food(egretta_tricolor,X). single                                       Success
187. food(X,insects). single                                                Success
188. food(pelecanus,fish). genus                                            Success
189. food(pelecaniformes,insects). order                                    Success
190. food(pelecaniformes,X). multiple                                       Success
191. nesting(pelecanus_erythrorhynchos,ground). true                        Success
192. nesting(egretta_tricolor,tree). true                                   Success
193. nesting(botaurus_lentiginosus,tree). false                             Success
194. nesting(x,tree). false                                                 Success
195. nesting(egretta_tricolor,X). single                                    Success
196. nesting(X,ground). multi                                               Success
197. nesting(X,tree). multi                                                 Success
198. nesting(pelecanus,ground). genus                                       Success
199. nesting(pelecanus,tree). genus                                         Success
200. nesting(pelecaniformes,tree). order                                    Success
201. nesting(pelecaniformes,X). multiple                                    Success
202. behavior(pelecanus_erythrorhynchos,surfaceDive). true                  Success
203. behavior(botaurus_lentiginosus,stalking). true                         Success
204. behavior(botaurus_lentiginosus,aerialDive). false                      Success
205. behavior(x,stalking). false                                            Success
206. behavior(egretta_tricolor,X). single                                   Success
207. behavior(X,aerialDive). single                                         Success
208. behavior(X,stalking). multiple                                         Success
209. behavior(pelecanus,aerialDive). genus                                  Success
210. behavior(pelecanus,surfaceDive). genus                                 Success
211. behavior(pelecaniformes,groundForager). order                          Success
212. behavior(pelecaniformes,X). multiple                                   Success
213. conservation(pelecanus_erythrorhynchos,lc). true                       Success
214. conservation(egretta_rufescens,nt). true                               Success
215. conservation(botaurus_lentiginosus,nt). false                          Success
216. conservation(x,lc). false                                              Success
217. conservation(egretta_tricolor,X). single                               Success
218. conservation(X,nt). single                                             Success
219. conservation(X,lc). multiple                                           Success
220. conservation(egretta,nt). genus                                        Success
221. conservation(egretta,lc). genus                                        Success
222. conservation(pelecaniformes,nt). order                                 Success
223. conservation(pelecaniformes,X). multiple                               Success

Summary:
223 Success                                 
---
223     Total Tests (version 3)
  0/0   Strict Tests Passed
223/223 Non-Strict Tests Passed

Nominal mark: 4.0 (4.00)
</pre>
Tszs-MBP:Prolog tszyeunglam$ java -jar ptestpelecaniformes.jar -prolog /opt/local/bin/gprolog pelecaniformes.pl
Prolog testing harness version 7
CPSC 449 Prolog Assignment: Pelecaniformes version 3 (Prolog testing harness version 7).
---------------------------------------------------------------
  1. Running test 'order(pelecaniformes). true'...
  Executing: /opt/local/bin/gprolog --c pelecaniformes.pl
  
  List = [_]
  
  (1 ms) yes
  | ?-
  Test 'order(pelecaniformes). true': Success
---------------------------------------------------------------
  2. Running test 'order(pelecanidae). false'...
  List = []
  
  yes
  | ?-
  Test 'order(pelecanidae). false': Success
---------------------------------------------------------------
  3. Running test 'order(X).'...
  setof(X,order(X),L).
  L = [pelecaniformes]
  
  yes
  | ?-
  Test 'order(X).': Success
---------------------------------------------------------------
  4. Running test 'family(pelecanidae). true'...
  List = [_]
  
  yes
  | ?-
  Test 'family(pelecanidae). true': Success
---------------------------------------------------------------
  5. Running test 'family(ardeidae). true'...
  List = [_]
  
  yes
  | ?-
  Test 'family(ardeidae). true': Success
---------------------------------------------------------------
  6. Running test 'family(threskiornithidae). true'...
  List = [_]
  
  yes
  | ?-
  Test 'family(threskiornithidae). true': Success
---------------------------------------------------------------
  7. Running test 'family(pelecaniformes). is an order'...
  List = []
  
  yes
  | ?-
  Test 'family(pelecaniformes). is an order': Success
---------------------------------------------------------------
  8. Running test 'family(X).'...
  setof(X,family(X),L).
  L = [ardeidae,pelecanidae,threskiornithidae]
  
  yes
  | ?-
  Test 'family(X).': Success
---------------------------------------------------------------
  9. Running test 'genus(botaurus). true'...
  List = [_]
  
  yes
  | ?-
  Test 'genus(botaurus). true': Success
---------------------------------------------------------------
 10. Running test 'genus(ardea). true'...
  List = [_]
  
  yes
  | ?-
  Test 'genus(ardea). true': Success
---------------------------------------------------------------
 11. Running test 'genus(nycticorax). is both a genus and a species'...
  List = [_]
  
  yes
  | ?-
  Test 'genus(nycticorax). is both a genus and a species': Success
---------------------------------------------------------------
 12. Running test 'genus(erythrorhynchos). is a species'...
  List = []
  
  yes
  | ?-
  Test 'genus(erythrorhynchos). is a species': Success
---------------------------------------------------------------
 13. Running test 'genus(X).'...
  setof(X,genus(X),L).
  L = [ardea,botaurus,bubulcus,butorides,egretta,eudocimus,ixobrychus,nyctanassa,nycticorax,pelecanus,platalea,plegadis]
  
  yes
  | ?-
  Test 'genus(X).': Success
---------------------------------------------------------------
 14. Running test 'species(occidentalis). true'...
  List = [_]
  
  yes
  | ?-
  Test 'species(occidentalis). true': Success
---------------------------------------------------------------
 15. Running test 'species(thula). true'...
  List = [_]
  
  yes
  | ?-
  Test 'species(thula). true': Success
---------------------------------------------------------------
 16. Running test 'species(nycticorax). is both a genus and a species'...
  List = [_]
  
  yes
  | ?-
  Test 'species(nycticorax). is both a genus and a species': Success
---------------------------------------------------------------
 17. Running test 'species(plegadis). is a genus'...
  List = []
  
  yes
  | ?-
  Test 'species(plegadis). is a genus': Success
---------------------------------------------------------------
 18. Running test 'species(X).'...
  setof(X,species(X),L).
  L = [ajaja,alba,albus,caerulea,chihi,erythrorhynchos,exilis,falcinellus,herodias,ibis,lentiginosus,nycticorax,occidentalis,rufescens,thula,tricolor,violacea,virescens]
  
  yes
  | ?-
  Test 'species(X).': Success
---------------------------------------------------------------
 19. Running test 'hasParent(plegadis_falcinellus,plegadis). cspecies/genus'...
  List = []
  
  yes
  | ?-
  Test 'hasParent(plegadis_falcinellus,plegadis). cspecies/genus': Success
---------------------------------------------------------------
 20. Running test 'hasParent(falcinellus,plegadis). species/genus'...
  List = [_]
  
  (1 ms) yes
  | ?-
  Test 'hasParent(falcinellus,plegadis). species/genus': Success
---------------------------------------------------------------
 21. Running test 'hasParent(nycticorax,ardeidae). genus/family'...
  List = [_]
  
  yes
  | ?-
  Test 'hasParent(nycticorax,ardeidae). genus/family': Success
---------------------------------------------------------------
 22. Running test 'hasParent(threskiornithidae,pelecaniformes). family/order'...
  List = [_]
  
  yes
  | ?-
  Test 'hasParent(threskiornithidae,pelecaniformes). family/order': Success
---------------------------------------------------------------
 23. Running test 'hasParent(falcinellus,ardeidae). species/family'...
  List = []
  
  yes
  | ?-
  Test 'hasParent(falcinellus,ardeidae). species/family': Success
---------------------------------------------------------------
 24. Running test 'hasParent(nycticorax,pelecaniformes). genus/order'...
  List = []
  
  yes
  | ?-
  Test 'hasParent(nycticorax,pelecaniformes). genus/order': Success
---------------------------------------------------------------
 25. Running test 'hasParent(X,egretta).'...
  setof(X,hasParent(X,egretta),L).
  L = [caerulea,rufescens,thula,tricolor]
  
  yes
  | ?-
  Test 'hasParent(X,egretta).': Success
---------------------------------------------------------------
 26. Running test 'hasParent(egretta,ardeidae). genus/family'...
  List = [_]
  
  yes
  | ?-
  Test 'hasParent(egretta,ardeidae). genus/family': Success
---------------------------------------------------------------
 27. Running test 'hasParent(caerulea,X).'...
  setof(X,hasParent(caerulea,X),L).
  L = [egretta]
  
  yes
  | ?-
  Test 'hasParent(caerulea,X).': Success
---------------------------------------------------------------
 28. Running test 'hasParent(X,Y).'...
  setof([X,Y],hasParent(X,Y),L).
  L = [[ajaja,platalea],[alba,ardea],[albus,eudocimus],[ardea,ardeidae],[ardeidae,pelecaniformes],[botaurus,ardeidae],[bubulcus,ardeidae],[butorides,ardeidae],[caerulea,egretta],[chihi,plegadis],[egretta,ardeidae],[erythrorhynchos,pelecanus],[eudocimus,threskiornithidae],[exilis,ixobrychus],[falcinellus,plegadis],[herodias,ardea],[ibis,bubulcus],[ixobrychus,ardeidae],[lentiginosus,botaurus],[nyctanassa,ardeidae],[nycticorax,ardeidae],[nycticorax,nycticorax],[occidentalis,pelecanus],[pelecanidae,pelecaniformes],[pelecanus,pelecanidae],[platalea,threskiornithidae],[plegadis,threskiornithidae],[rufescens,egretta],[threskiornithidae,pelecaniformes],[thula,egretta],[tricolor,egretta],[violacea,nyctanassa],[virescens,butorides]]
  
  (1 ms) yes
  | ?-
  Test 'hasParent(X,Y).': Success
---------------------------------------------------------------
 29. Running test 'hasParent2(plegadis_falcinellus,plegadis). cspecies/genus'...
  List = [_]
  
  yes
  | ?-
  Test 'hasParent2(plegadis_falcinellus,plegadis). cspecies/genus': Success
---------------------------------------------------------------
 30. Running test 'hasParent2(falcinellus,plegadis). species/genus'...
  List = []
  
  yes
  | ?-
  Test 'hasParent2(falcinellus,plegadis). species/genus': Success
---------------------------------------------------------------
 31. Running test 'hasParent2(nycticorax,ardeidae). genus/family'...
  List = [_]
  
  yes
  | ?-
  Test 'hasParent2(nycticorax,ardeidae). genus/family': Success
---------------------------------------------------------------
 32. Running test 'hasParent2(threskiornithidae,pelecaniformes). family/order'...
  List = [_]
  
  yes
  | ?-
  Test 'hasParent2(threskiornithidae,pelecaniformes). family/order': Success
---------------------------------------------------------------
 33. Running test 'hasParent2(plegadis_falcinellus,ardeidae). cspecies/family'...
  List = []
  
  yes
  | ?-
  Test 'hasParent2(plegadis_falcinellus,ardeidae). cspecies/family': Success
---------------------------------------------------------------
 34. Running test 'hasParent2(nycticorax,pelecaniformes). genus/order'...
  List = []
  
  yes
  | ?-
  Test 'hasParent2(nycticorax,pelecaniformes). genus/order': Success
---------------------------------------------------------------
 35. Running test 'hasParent2(X,egretta).'...
  setof(X,hasParent2(X,egretta),L).
  L = [egretta_caerulea,egretta_rufescens,egretta_thula,egretta_tricolor]
  
  yes
  | ?-
  Test 'hasParent2(X,egretta).': Success
---------------------------------------------------------------
 36. Running test 'hasParent2(egretta,ardeidae). genus/family'...
  List = [_]
  
  yes
  | ?-
  Test 'hasParent2(egretta,ardeidae). genus/family': Success
---------------------------------------------------------------
 37. Running test 'hasParent2(egretta_caerulea,X).'...
  setof(X,hasParent2(egretta_caerulea,X),L).
  L = [egretta]
  
  yes
  | ?-
  Test 'hasParent2(egretta_caerulea,X).': Success
---------------------------------------------------------------
 38. Running test 'hasParent2(X,Y).'...
  setof([X,Y],hasParent2(X,Y),L).
  L = [[ardea,ardeidae],[ardea_alba,ardea],[ardea_herodias,ardea],[ardeidae,pelecaniformes],[botaurus,ardeidae],[botaurus_lentiginosus,botaurus],[bubulcus,ardeidae],[bubulcus_ibis,bubulcus],[butorides,ardeidae],[butorides_virescens,butorides],[egretta,ardeidae],[egretta_caerulea,egretta],[egretta_rufescens,egretta],[egretta_thula,egretta],[egretta_tricolor,egretta],[eudocimus,threskiornithidae],[eudocimus_albus,eudocimus],[ixobrychus,ardeidae],[ixobrychus_exilis,ixobrychus],[nyctanassa,ardeidae],[nyctanassa_violacea,nyctanassa],[nycticorax,ardeidae],[nycticorax_nycticorax,nycticorax],[pelecanidae,pelecaniformes],[pelecanus,pelecanidae],[pelecanus_erythrorhynchos,pelecanus],[pelecanus_occidentalis,pelecanus],[platalea,threskiornithidae],[platalea_ajaja,platalea],[plegadis,threskiornithidae],[plegadis_chihi,plegadis],[plegadis_falcinellus,plegadis],[threskiornithidae,pelecaniformes]]
  
  yes
  | ?-
  Test 'hasParent2(X,Y).': Success
---------------------------------------------------------------
 39. Running test 'hasCommonName(pelecanus,pelican). order'...
  List = [_]
  
  yes
  | ?-
  Test 'hasCommonName(pelecanus,pelican). order': Success
---------------------------------------------------------------
 40. Running test 'hasCommonName(ardea,heron). genus'...
  List = [_]
  
  yes
  | ?-
  Test 'hasCommonName(ardea,heron). genus': Success
---------------------------------------------------------------
 41. Running test 'hasCommonName(nycticorax,nightHeron). genus'...
  List = [_]
  
  yes
  | ?-
  Test 'hasCommonName(nycticorax,nightHeron). genus': Success
---------------------------------------------------------------
 42. Running test 'hasCommonName(nyctanassa,nightHeron). genus (also above)'...
  List = [_]
  
  yes
  | ?-
  Test 'hasCommonName(nyctanassa,nightHeron). genus (also above)': Success
---------------------------------------------------------------
 43. Running test 'hasCommonName(pelecanus_erythrorhynchos,americanWhitePelican). cspeces'...
  List = [_]
  
  yes
  | ?-
  Test 'hasCommonName(pelecanus_erythrorhynchos,americanWhitePelican). cspeces': Success
---------------------------------------------------------------
 44. Running test 'hasCommonName(erythrorhynchos,americanWhitePelican). raw speces'...
  List = []
  
  (1 ms) yes
  | ?-
  Test 'hasCommonName(erythrorhynchos,americanWhitePelican). raw speces': Success
---------------------------------------------------------------
 45. Running test 'hasCommonName(pelecanus_erythrorhynchos,brownPelican). cspeces/wrongName'...
  List = []
  
  yes
  | ?-
  Test 'hasCommonName(pelecanus_erythrorhynchos,brownPelican). cspeces/wrongName': Success
---------------------------------------------------------------
 46. Running test 'hasCommonName(butorides_virescens,greenHeron). cspecies'...
  List = [_]
  
  yes
  | ?-
  Test 'hasCommonName(butorides_virescens,greenHeron). cspecies': Success
---------------------------------------------------------------
 47. Running test 'hasCommonName(nyctanassa_violacea,X). cspecies/'...
  setof(X,hasCommonName(nyctanassa_violacea,X),L).
  L = [yellowCrownedNightHeron]
  
  yes
  | ?-
  Test 'hasCommonName(nyctanassa_violacea,X). cspecies/': Success
---------------------------------------------------------------
 48. Running test 'hasCommonName(X,roseateSpoonbill). /commonName'...
  setof(X,hasCommonName(X,roseateSpoonbill),L).
  L = [platalea_ajaja]
  
  yes
  | ?-
  Test 'hasCommonName(X,roseateSpoonbill). /commonName': Success
---------------------------------------------------------------
 49. Running test 'hasCommonName(botaurus,lentiginosus,americanBittern). true'...
  List = [_]
  
  yes
  | ?-
  Test 'hasCommonName(botaurus,lentiginosus,americanBittern). true': Success
---------------------------------------------------------------
 50. Running test 'hasCommonName(egretta,rufescens,reddishEgret). true'...
  List = [_]
  
  yes
  | ?-
  Test 'hasCommonName(egretta,rufescens,reddishEgret). true': Success
---------------------------------------------------------------
 51. Running test 'hasCommonName(egretta,alba,reddishEgret). genus/species mismatch'...
  List = []
  
  yes
  | ?-
  Test 'hasCommonName(egretta,alba,reddishEgret). genus/species mismatch': Success
---------------------------------------------------------------
 52. Running test 'hasCommonName(egretta,rufescens,snowyEgret). wrong common name'...
  List = []
  
  yes
  | ?-
  Test 'hasCommonName(egretta,rufescens,snowyEgret). wrong common name': Success
---------------------------------------------------------------
 53. Running test 'hasCommonName(nycticorax,nycticorax,blackCrownedNightHeron). true'...
  List = [_]
  
  (1 ms) yes
  | ?-
  Test 'hasCommonName(nycticorax,nycticorax,blackCrownedNightHeron). true': Success
---------------------------------------------------------------
 54. Running test 'hasCommonName(botaurus,lentiginosus,X).'...
  setof(X,hasCommonName(botaurus,lentiginosus,X),L).
  L = [americanBittern]
  
  yes
  | ?-
  Test 'hasCommonName(botaurus,lentiginosus,X).': Success
---------------------------------------------------------------
 55. Running test 'hasCommonName(egretta,rufescens,X).'...
  setof(X,hasCommonName(egretta,rufescens,X),L).
  L = [reddishEgret]
  
  yes
  | ?-
  Test 'hasCommonName(egretta,rufescens,X).': Success
---------------------------------------------------------------
 56. Running test 'hasCommonName(nycticorax,nycticorax,X).'...
  setof(X,hasCommonName(nycticorax,nycticorax,X),L).
  L = [blackCrownedNightHeron]
  
  yes
  | ?-
  Test 'hasCommonName(nycticorax,nycticorax,X).': Success
---------------------------------------------------------------
 57. Running test 'hasCommonName(X,Y,americanBittern).'...
  setof([X,Y],hasCommonName(X,Y,americanBittern),L).
  L = [[botaurus,lentiginosus]]
  
  yes
  | ?-
  Test 'hasCommonName(X,Y,americanBittern).': Success
---------------------------------------------------------------
 58. Running test 'hasCommonName(X,Y,reddishEgret).'...
  setof([X,Y],hasCommonName(X,Y,reddishEgret),L).
  L = [[egretta,rufescens]]
  
  yes
  | ?-
  Test 'hasCommonName(X,Y,reddishEgret).': Success
---------------------------------------------------------------
 59. Running test 'hasCommonName(X,Y,blackCrownedNightHeron).'...
  setof([X,Y],hasCommonName(X,Y,blackCrownedNightHeron),L).
  L = [[nycticorax,nycticorax]]
  
  yes
  | ?-
  Test 'hasCommonName(X,Y,blackCrownedNightHeron).': Success
---------------------------------------------------------------
 60. Running test 'hasSciName(greatBlueHeron,ardea_herodias). cspeces'...
  List = [_]
  
  yes
  | ?-
  Test 'hasSciName(greatBlueHeron,ardea_herodias). cspeces': Success
---------------------------------------------------------------
 61. Running test 'hasSciName(snowyEgret,egretta_thula). cspeces'...
  List = [_]
  
  (1 ms) yes
  | ?-
  Test 'hasSciName(snowyEgret,egretta_thula). cspeces': Success
---------------------------------------------------------------
 62. Running test 'hasSciName(snowyEgret,thula). raw speces'...
  List = []
  
  yes
  | ?-
  Test 'hasSciName(snowyEgret,thula). raw speces': Success
---------------------------------------------------------------
 63. Running test 'hasSciName(cattleEgret,bubulcus_ibis). cspeces'...
  List = [_]
  
  yes
  | ?-
  Test 'hasSciName(cattleEgret,bubulcus_ibis). cspeces': Success
---------------------------------------------------------------
 64. Running test 'hasSciName(cattleEgret,ibis). raw speces'...
  List = []
  
  yes
  | ?-
  Test 'hasSciName(cattleEgret,ibis). raw speces': Success
---------------------------------------------------------------
 65. Running test 'hasSciName(ibis,eudocimus). genus'...
  List = [_]
  
  yes
  | ?-
  Test 'hasSciName(ibis,eudocimus). genus': Success
---------------------------------------------------------------
 66. Running test 'hasSciName(ibis,plegadis). genus (same as above)'...
  List = [_]
  
  yes
  | ?-
  Test 'hasSciName(ibis,plegadis). genus (same as above)': Success
---------------------------------------------------------------
 67. Running test 'hasSciName(greatBlueHeron,X). cspecies/'...
  setof(X,hasSciName(greatBlueHeron,X),L).
  L = [ardea_herodias]
  
  yes
  | ?-
  Test 'hasSciName(greatBlueHeron,X). cspecies/': Success
---------------------------------------------------------------
 68. Running test 'hasSciName(snowyEgret,X). cspecies/'...
  setof(X,hasSciName(snowyEgret,X),L).
  L = [egretta_thula]
  
  yes
  | ?-
  Test 'hasSciName(snowyEgret,X). cspecies/': Success
---------------------------------------------------------------
 69. Running test 'hasSciName(cattleEgret,X). cspecies/'...
  setof(X,hasSciName(cattleEgret,X),L).
  L = [bubulcus_ibis]
  
  yes
  | ?-
  Test 'hasSciName(cattleEgret,X). cspecies/': Success
---------------------------------------------------------------
 70. Running test 'hasSciName(X,ardea_herodias). /cspecies'...
  setof(X,hasSciName(X,ardea_herodias),L).
  L = [greatBlueHeron]
  
  (1 ms) yes
  | ?-
  Test 'hasSciName(X,ardea_herodias). /cspecies': Success
---------------------------------------------------------------
 71. Running test 'hasSciName(X,egretta_thula). /cspecies'...
  setof(X,hasSciName(X,egretta_thula),L).
  L = [snowyEgret]
  
  yes
  | ?-
  Test 'hasSciName(X,egretta_thula). /cspecies': Success
---------------------------------------------------------------
 72. Running test 'hasSciName(X,bubulcus_ibis). /cspecies'...
  setof(X,hasSciName(X,bubulcus_ibis),L).
  L = [cattleEgret]
  
  yes
  | ?-
  Test 'hasSciName(X,bubulcus_ibis). /cspecies': Success
---------------------------------------------------------------
 73. Running test 'hasCompoundName(pelecanus,occidentalis,pelecanus_occidentalis). true'...
  List = [_]
  
  yes
  | ?-
  Test 'hasCompoundName(pelecanus,occidentalis,pelecanus_occidentalis). true': Success
---------------------------------------------------------------
 74. Running test 'hasCompoundName(egretta,tricolor,egretta_tricolor). true'...
  List = [_]
  
  yes
  | ?-
  Test 'hasCompoundName(egretta,tricolor,egretta_tricolor). true': Success
---------------------------------------------------------------
 75. Running test 'hasCompoundName(plegadis,chihi,plegadis_chihi). true'...
  List = [_]
  
  yes
  | ?-
  Test 'hasCompoundName(plegadis,chihi,plegadis_chihi). true': Success
---------------------------------------------------------------
 76. Running test 'hasCompoundName(plegadis,chihi,egretta_tricolor). wrong name'...
  List = []
  
  yes
  | ?-
  Test 'hasCompoundName(plegadis,chihi,egretta_tricolor). wrong name': Success
---------------------------------------------------------------
 77. Running test 'hasCompoundName(pelecanus,occidentalis,X).'...
  setof(X,hasCompoundName(pelecanus,occidentalis,X),L).
  L = [pelecanus_occidentalis]
  
  yes
  | ?-
  Test 'hasCompoundName(pelecanus,occidentalis,X).': Success
---------------------------------------------------------------
 78. Running test 'hasCompoundName(egretta,tricolor,X).'...
  setof(X,hasCompoundName(egretta,tricolor,X),L).
  L = [egretta_tricolor]
  
  yes
  | ?-
  Test 'hasCompoundName(egretta,tricolor,X).': Success
---------------------------------------------------------------
 79. Running test 'hasCompoundName(plegadis,chihi,X).'...
  setof(X,hasCompoundName(plegadis,chihi,X),L).
  L = [plegadis_chihi]
  
  yes
  | ?-
  Test 'hasCompoundName(plegadis,chihi,X).': Success
---------------------------------------------------------------
 80. Running test 'hasCompoundName(X,Y,pelecanus_occidentalis).'...
  setof([X,Y],hasCompoundName(X,Y,pelecanus_occidentalis),L).
  L = [[pelecanus,occidentalis]]
  
  yes
  | ?-
  Test 'hasCompoundName(X,Y,pelecanus_occidentalis).': Success
---------------------------------------------------------------
 81. Running test 'hasCompoundName(X,Y,egretta_tricolor).'...
  setof([X,Y],hasCompoundName(X,Y,egretta_tricolor),L).
  L = [[egretta,tricolor]]
  
  yes
  | ?-
  Test 'hasCompoundName(X,Y,egretta_tricolor).': Success
---------------------------------------------------------------
 82. Running test 'hasCompoundName(X,Y,plegadis_chihi).'...
  setof([X,Y],hasCompoundName(X,Y,plegadis_chihi),L).
  L = [[plegadis,chihi]]
  
  yes
  | ?-
  Test 'hasCompoundName(X,Y,plegadis_chihi).': Success
---------------------------------------------------------------
 83. Running test 'synonym(plegadis,plegadis). equal'...
  List = []
  
  yes
  | ?-
  Test 'synonym(plegadis,plegadis). equal': Success
---------------------------------------------------------------
 84. Running test 'synonym(glossyIbis,plegadis_falcinellus). common/cspecies'...
  List = [_]
  
  (1 ms) yes
  | ?-
  Test 'synonym(glossyIbis,plegadis_falcinellus). common/cspecies': Success
---------------------------------------------------------------
 85. Running test 'synonym(glossyIbis,alcinellus). common/rawSpecies'...
  List = []
  
  yes
  | ?-
  Test 'synonym(glossyIbis,alcinellus). common/rawSpecies': Success
---------------------------------------------------------------
 86. Running test 'synonym(plegadis_falcinellus,glossyIbis). cspecies/common'...
  List = [_]
  
  yes
  | ?-
  Test 'synonym(plegadis_falcinellus,glossyIbis). cspecies/common': Success
---------------------------------------------------------------
 87. Running test 'synonym(falcinellus,glossyIbis). rawSpecies/common'...
  List = []
  
  yes
  | ?-
  Test 'synonym(falcinellus,glossyIbis). rawSpecies/common': Success
---------------------------------------------------------------
 88. Running test 'synonym(glossyIbis,plegadis_falcinellus). common/compound'...
  List = [_]
  
  yes
  | ?-
  Test 'synonym(glossyIbis,plegadis_falcinellus). common/compound': Success
---------------------------------------------------------------
 89. Running test 'synonym(plegadis_falcinellus,glossyIbis). compound/common'...
  List = [_]
  
  yes
  | ?-
  Test 'synonym(plegadis_falcinellus,glossyIbis). compound/common': Success
---------------------------------------------------------------
 90. Running test 'synonym(bittern,ixobrychus). common/genus'...
  List = [_]
  
  yes
  | ?-
  Test 'synonym(bittern,ixobrychus). common/genus': Success
---------------------------------------------------------------
 91. Running test 'synonym(ixobrychus,botaurus). genus/genus with same common name'...
  List = []
  
  yes
  | ?-
  Test 'synonym(ixobrychus,botaurus). genus/genus with same common name': Success
---------------------------------------------------------------
 92. Running test 'synonym(bittern,botaurus). common/genus (same as above)'...
  List = [_]
  
  (1 ms) yes
  | ?-
  Test 'synonym(bittern,botaurus). common/genus (same as above)': Success
---------------------------------------------------------------
 93. Running test 'synonym(heron,egret). both are names for egretta'...
  List = [_]
  
  yes
  | ?-
  Test 'synonym(heron,egret). both are names for egretta': Success
---------------------------------------------------------------
 94. Running test 'synonym(greenHeron,X). common/'...
  setof(X,synonym(greenHeron,X),L).
  L = [butorides_virescens]
  
  yes
  | ?-
  Test 'synonym(greenHeron,X). common/': Success
---------------------------------------------------------------
 95. Running test 'synonym(X,greenHeron). /common'...
  setof(X,synonym(X,greenHeron),L).
  L = [butorides_virescens]
  
  yes
  | ?-
  Test 'synonym(X,greenHeron). /common': Success
---------------------------------------------------------------
 96. Running test 'synonym(butorides_virescens,X). cspecies/'...
  setof(X,synonym(butorides_virescens,X),L).
  L = [greenHeron]
  
  yes
  | ?-
  Test 'synonym(butorides_virescens,X). cspecies/': Success
---------------------------------------------------------------
 97. Running test 'synonym(X,butorides_virescens). /cspecies'...
  setof(X,synonym(X,butorides_virescens),L).
  L = [greenHeron]
  
  yes
  | ?-
  Test 'synonym(X,butorides_virescens). /cspecies': Success
---------------------------------------------------------------
 98. Running test 'synonym(X,heron). /common that maps to 3 genera'...
  setof(X,synonym(X,heron),L).
  L = [ardea,butorides,egret,egretta]
  
  yes
  | ?-
  Test 'synonym(X,heron). /common that maps to 3 genera': Success
---------------------------------------------------------------
 99. Running test 'synonym(heron,X). /common that maps to 3 genera'...
  setof(X,synonym(heron,X),L).
  L = [ardea,butorides,egret,egretta]
  
  (1 ms) yes
  | ?-
  Test 'synonym(heron,X). /common that maps to 3 genera': Success
---------------------------------------------------------------
100. Running test 'isaStrict(exilis,exilis). equal species'...
  List = []
  
  yes
  | ?-
  Test 'isaStrict(exilis,exilis). equal species': Success
---------------------------------------------------------------
101. Running test 'isaStrict(ardeidae,ardeidae). equal families'...
  List = [_]
  
  yes
  | ?-
  Test 'isaStrict(ardeidae,ardeidae). equal families': Success
---------------------------------------------------------------
102. Running test 'isaStrict(x,x). equal but unknown'...
  List = []
  
  yes
  | ?-
  Test 'isaStrict(x,x). equal but unknown': Success
---------------------------------------------------------------
103. Running test 'isaStrict(ixobrychus_exilis,ixobrychus). cspecies to genus'...
  List = [_]
  
  yes
  | ?-
  Test 'isaStrict(ixobrychus_exilis,ixobrychus). cspecies to genus': Success
---------------------------------------------------------------
104. Running test 'isaStrict(ixobrychus_exilis,ardeidae). cspecies to family'...
  List = [_]
  
  yes
  | ?-
  Test 'isaStrict(ixobrychus_exilis,ardeidae). cspecies to family': Success
---------------------------------------------------------------
105. Running test 'isaStrict(ixobrychus_exilis,pelecaniformes). cspecies to top'...
  List = [_]
  
  yes
  | ?-
  Test 'isaStrict(ixobrychus_exilis,pelecaniformes). cspecies to top': Success
---------------------------------------------------------------
106. Running test 'isaStrict(ixobrychus_exilis,botaurus). cspecies to wrong genus'...
  List = []
  
  yes
  | ?-
  Test 'isaStrict(ixobrychus_exilis,botaurus). cspecies to wrong genus': Success
---------------------------------------------------------------
107. Running test 'isaStrict(ixobrychus_exilis,pelecanidae). cspecies to wrong family'...
  List = []
  
  yes
  | ?-
  Test 'isaStrict(ixobrychus_exilis,pelecanidae). cspecies to wrong family': Success
---------------------------------------------------------------
108. Running test 'isaStrict(exilis,ixobrychus). raw species to genus'...
  List = []
  
  yes
  | ?-
  Test 'isaStrict(exilis,ixobrychus). raw species to genus': Success
---------------------------------------------------------------
109. Running test 'isaStrict(ixobrychus_exilis,X).'...
  setof(X,isaStrict(ixobrychus_exilis,X),L).
  L = [ardeidae,ixobrychus,ixobrychus_exilis,pelecaniformes]
  
  yes
  | ?-
  Test 'isaStrict(ixobrychus_exilis,X).': Success
---------------------------------------------------------------
110. Running test 'isa(exilis,exilis). equal raw species'...
  List = []
  
  yes
  | ?-
  Test 'isa(exilis,exilis). equal raw species': Success
---------------------------------------------------------------
111. Running test 'isa(ardeidae,ardeidae). equal families'...
  List = [_]
  
  yes
  | ?-
  Test 'isa(ardeidae,ardeidae). equal families': Success
---------------------------------------------------------------
112. Running test 'isa(x,x). equal but unknown name'...
  List = []
  
  yes
  | ?-
  Test 'isa(x,x). equal but unknown name': Success
---------------------------------------------------------------
113. Running test 'isa(ixobrychus_exilis,ixobrychus). cspecies to genus'...
  List = [_]
  
  yes
  | ?-
  Test 'isa(ixobrychus_exilis,ixobrychus). cspecies to genus': Success
---------------------------------------------------------------
114. Running test 'isa(ixobrychus_exilis,ardeidae). cspecies to family'...
  List = [_]
  
  yes
  | ?-
  Test 'isa(ixobrychus_exilis,ardeidae). cspecies to family': Success
---------------------------------------------------------------
115. Running test 'isa(ixobrychus_exilis,pelecaniformes). cspecies to top'...
  List = [_]
  
  yes
  | ?-
  Test 'isa(ixobrychus_exilis,pelecaniformes). cspecies to top': Success
---------------------------------------------------------------
116. Running test 'isa(ixobrychus_exilis,botaurus). cspecies to wrong genus'...
  List = []
  
  yes
  | ?-
  Test 'isa(ixobrychus_exilis,botaurus). cspecies to wrong genus': Success
---------------------------------------------------------------
117. Running test 'isa(ixobrychus_exilis,pelecanidae). cspecies to wrong family'...
  List = []
  
  yes
  | ?-
  Test 'isa(ixobrychus_exilis,pelecanidae). cspecies to wrong family': Success
---------------------------------------------------------------
118. Running test 'isa(exilis,ixobrychus). raw species to genus'...
  List = []
  
  yes
  | ?-
  Test 'isa(exilis,ixobrychus). raw species to genus': Success
---------------------------------------------------------------
119. Running test 'isa(ixobrychus_exilis,X).'...
  setof(X,isa(ixobrychus_exilis,X),L).
  L = [ardeidae,ixobrychus,ixobrychus_exilis,pelecaniformes]
  
  yes
  | ?-
  Test 'isa(ixobrychus_exilis,X).': Success
---------------------------------------------------------------
120. Running test 'isa(X,pelecanidae).'...
  setof(X,isa(X,pelecanidae),L).
  L = [pelecanidae,pelecanus,pelecanus_erythrorhynchos,pelecanus_occidentalis]
  
  yes
  | ?-
  Test 'isa(X,pelecanidae).': Success
---------------------------------------------------------------
121. Running test 'isa(plegadis,ibis). equal genera/common'...
  List = [_]
  
  yes
  | ?-
  Test 'isa(plegadis,ibis). equal genera/common': Success
---------------------------------------------------------------
122. Running test 'isa(plegadis_chihi,ibis). equal cspecies/common'...
  List = [_]
  
  yes
  | ?-
  Test 'isa(plegadis_chihi,ibis). equal cspecies/common': Success
---------------------------------------------------------------
123. Running test 'isa(cattleEgret,cattleEgret). equal common/common'...
  List = [_]
  
  yes
  | ?-
  Test 'isa(cattleEgret,cattleEgret). equal common/common': Success
---------------------------------------------------------------
124. Running test 'isa(chihi,ibis). equal rawSpecies/common'...
  List = []
  
  yes
  | ?-
  Test 'isa(chihi,ibis). equal rawSpecies/common': Success
---------------------------------------------------------------
125. Running test 'isa(platalea_ajaja,pelecaniformes). bottom to top'...
  List = [_]
  
  yes
  | ?-
  Test 'isa(platalea_ajaja,pelecaniformes). bottom to top': Success
---------------------------------------------------------------
126. Running test 'isa(cattleEgret,bubulcus_ibis). equal commonName to compound species'...
  List = [_]
  
  yes
  | ?-
  Test 'isa(cattleEgret,bubulcus_ibis). equal commonName to compound species': Success
---------------------------------------------------------------
127. Running test 'isa(whiteIbis,eudocimus). common species name to genus'...
  List = [_]
  
  yes
  | ?-
  Test 'isa(whiteIbis,eudocimus). common species name to genus': Success
---------------------------------------------------------------
128. Running test 'isa(leastBittern,ardeidae). common species name to family'...
  List = [_]
  
  (1 ms) yes
  | ?-
  Test 'isa(leastBittern,ardeidae). common species name to family': Success
---------------------------------------------------------------
129. Running test 'isa(leastBittern,bittern). common species name to common family'...
  List = [_]
  
  yes
  | ?-
  Test 'isa(leastBittern,bittern). common species name to common family': Success
---------------------------------------------------------------
130. Running test 'isa(whiteFacedIbis,chihi). common species name to species alone'...
  List = []
  
  yes
  | ?-
  Test 'isa(whiteFacedIbis,chihi). common species name to species alone': Success
---------------------------------------------------------------
131. Running test 'isa(plegadis_falcinellus,threskiornithidae). compound species name to family'...
  List = [_]
  
  yes
  | ?-
  Test 'isa(plegadis_falcinellus,threskiornithidae). compound species name to family': Success
---------------------------------------------------------------
132. Running test 'isa(nyctanassa,nightHeron). genus to genus common name'...
  List = [_]
  
  yes
  | ?-
  Test 'isa(nyctanassa,nightHeron). genus to genus common name': Success
---------------------------------------------------------------
133. Running test 'isa(nyctanassa,egret). genus to wrong genus common name'...
  List = []
  
  yes
  | ?-
  Test 'isa(nyctanassa,egret). genus to wrong genus common name': Success
---------------------------------------------------------------
134. Running test 'isa(nyctanassa_violacea,nightHeron). cspecies to genus common name'...
  List = [_]
  
  yes
  | ?-
  Test 'isa(nyctanassa_violacea,nightHeron). cspecies to genus common name': Success
---------------------------------------------------------------
135. Running test 'isa(nyctanassa_violacea,egret). cspecies to wrong genus common name'...
  List = []
  
  (1 ms) yes
  | ?-
  Test 'isa(nyctanassa_violacea,egret). cspecies to wrong genus common name': Success
---------------------------------------------------------------
136. Running test 'isa(x,X). unknown/'...
  setof(X,isa(x,X),L).
  no
  | ?-
  Test 'isa(x,X). unknown/': Success
---------------------------------------------------------------
137. Running test 'isa(ardea_herodias,X). species'...
  setof(X,isa(ardea_herodias,X),L).
  L = [ardea,ardea_herodias,ardeidae,pelecaniformes]
  
  yes
  | ?-
  Test 'isa(ardea_herodias,X). species': Success
---------------------------------------------------------------
138. Running test 'isa(greatBlueHeron,X). common species'...
  setof(X,isa(greatBlueHeron,X),L).
  L = [ardea,ardea_herodias,ardeidae,pelecaniformes]
  
  yes
  | ?-
  Test 'isa(greatBlueHeron,X). common species': Success
---------------------------------------------------------------
139. Running test 'isa(ixobrychus_exilis,X). compound species'...
  setof(X,isa(ixobrychus_exilis,X),L).
  L = [ardeidae,ixobrychus,ixobrychus_exilis,pelecaniformes]
  
  yes
  | ?-
  Test 'isa(ixobrychus_exilis,X). compound species': Success
---------------------------------------------------------------
140. Running test 'isa(butorides,X). genus'...
  setof(X,isa(butorides,X),L).
  L = [ardeidae,butorides,pelecaniformes]
  
  yes
  | ?-
  Test 'isa(butorides,X). genus': Success
---------------------------------------------------------------
141. Running test 'isa(X,ardeidae). family'...
  setof(X,isa(X,ardeidae),L).
  L = [ardea,ardea_alba,ardea_herodias,ardeidae,botaurus,botaurus_lentiginosus,bubulcus,bubulcus_ibis,butorides,butorides_virescens,egretta,egretta_caerulea,egretta_rufescens,egretta_thula,egretta_tricolor,ixobrychus,ixobrychus_exilis,nyctanassa,nyctanassa_violacea,nycticorax,nycticorax_nycticorax]
  
  yes
  | ?-
  Test 'isa(X,ardeidae). family': Success
---------------------------------------------------------------
142. Running test 'isa(X,eudocimus_albus). compound species'...
  setof(X,isa(X,eudocimus_albus),L).
  L = [eudocimus_albus]
  
  yes
  | ?-
  Test 'isa(X,eudocimus_albus). compound species': Success
---------------------------------------------------------------
143. Running test 'isa(X,bittern). common species (multi)'...
  setof(X,isa(X,bittern),L).
  L = [botaurus,botaurus_lentiginosus,ixobrychus,ixobrychus_exilis]
  
  yes
  | ?-
  Test 'isa(X,bittern). common species (multi)': Success
---------------------------------------------------------------
144. Running test 'countSpecies(botaurus_lentiginosus,1). species'...
  List = [_]
  
  yes
  | ?-
  Test 'countSpecies(botaurus_lentiginosus,1). species': Success
---------------------------------------------------------------
145. Running test 'countSpecies(botaurus,1). single-species genus'...
  List = [_]
  
  yes
  | ?-
  Test 'countSpecies(botaurus,1). single-species genus': Success
---------------------------------------------------------------
146. Running test 'countSpecies(egretta,4). 4-species genus'...
  List = [_]
  
  yes
  | ?-
  Test 'countSpecies(egretta,4). 4-species genus': Success
---------------------------------------------------------------
147. Running test 'countSpecies(ardeidae,12). 12-species family'...
  List = [_]
  
  yes
  | ?-
  Test 'countSpecies(ardeidae,12). 12-species family': Success
---------------------------------------------------------------
148. Running test 'countSpecies(pelecaniformes,18). 18-species order'...
  List = [_]
  
  yes
  | ?-
  Test 'countSpecies(pelecaniformes,18). 18-species order': Success
---------------------------------------------------------------
149. Running test 'countSpecies(x,0). 0-species unknown name'...
  List = [_]
  
  (1 ms) yes
  | ?-
  Test 'countSpecies(x,0). 0-species unknown name': Success
---------------------------------------------------------------
150. Running test 'countSpecies(botaurus_lentiginosus,X). species'...
  setof(X,countSpecies(botaurus_lentiginosus,X),L).
  L = [1]
  
  yes
  | ?-
  Test 'countSpecies(botaurus_lentiginosus,X). species': Success
---------------------------------------------------------------
151. Running test 'countSpecies(botaurus,X). single-species genus'...
  setof(X,countSpecies(botaurus,X),L).
  L = [1]
  
  yes
  | ?-
  Test 'countSpecies(botaurus,X). single-species genus': Success
---------------------------------------------------------------
152. Running test 'countSpecies(egretta,X). 4-species genus'...
  setof(X,countSpecies(egretta,X),L).
  L = [4]
  
  yes
  | ?-
  Test 'countSpecies(egretta,X). 4-species genus': Success
---------------------------------------------------------------
153. Running test 'countSpecies(ardeidae,X). 12-species family'...
  setof(X,countSpecies(ardeidae,X),L).
  L = [12]
  
  yes
  | ?-
  Test 'countSpecies(ardeidae,X). 12-species family': Success
---------------------------------------------------------------
154. Running test 'countSpecies(pelecaniformes,X). 18-species order'...
  setof(X,countSpecies(pelecaniformes,X),L).
  L = [18]
  
  yes
  | ?-
  Test 'countSpecies(pelecaniformes,X). 18-species order': Success
---------------------------------------------------------------
155. Running test 'countSpecies(x,X). 0-species unknown name'...
  setof(X,countSpecies(x,X),L).
  L = [0]
  
  (1 ms) yes
  | ?-
  Test 'countSpecies(x,X). 0-species unknown name': Success
---------------------------------------------------------------
156. Running test 'rangesTo(botaurus_lentiginosus,alberta). simple species'...
  List = [_]
  
  yes
  | ?-
  Test 'rangesTo(botaurus_lentiginosus,alberta). simple species': Success
---------------------------------------------------------------
157. Running test 'rangesTo(botaurus_lentiginosus,canada). species, inferred location'...
  List = [_]
  
  yes
  | ?-
  Test 'rangesTo(botaurus_lentiginosus,canada). species, inferred location': Success
---------------------------------------------------------------
158. Running test 'rangesTo(pelecanus,alberta). simple genus'...
  List = [_]
  
  yes
  | ?-
  Test 'rangesTo(pelecanus,alberta). simple genus': Success
---------------------------------------------------------------
159. Running test 'rangesTo(pelecanus,canada). genus, inferred location'...
  List = [_]
  
  yes
  | ?-
  Test 'rangesTo(pelecanus,canada). genus, inferred location': Success
---------------------------------------------------------------
160. Running test 'rangesTo(pelecanidae,canada). order, inferred location'...
  List = [_]
  
  yes
  | ?-
  Test 'rangesTo(pelecanidae,canada). order, inferred location': Success
---------------------------------------------------------------
161. Running test 'rangesTo(ardea_alba,alberta). speces, wrong location'...
  List = []
  
  yes
  | ?-
  Test 'rangesTo(ardea_alba,alberta). speces, wrong location': Success
---------------------------------------------------------------
162. Running test 'rangesTo(platalea_ajaja,canada). speces, wrong location'...
  List = []
  
  yes
  | ?-
  Test 'rangesTo(platalea_ajaja,canada). speces, wrong location': Success
---------------------------------------------------------------
163. Running test 'rangesTo(botaurus_lentiginosus,X). species, inferred location'...
  setof(X,rangesTo(botaurus_lentiginosus,X),L).
  L = [alberta,canada]
  
  yes
  | ?-
  Test 'rangesTo(botaurus_lentiginosus,X). species, inferred location': Success
---------------------------------------------------------------
164. Running test 'rangesTo(pelecanus,X). simple genus'...
  setof(X,rangesTo(pelecanus,X),L).
  L = [alberta,canada]
  
  yes
  | ?-
  Test 'rangesTo(pelecanus,X). simple genus': Success
---------------------------------------------------------------
165. Running test 'rangesTo(pelecanus,X). genus, inferred location'...
  setof(X,rangesTo(pelecanus,X),L).
  L = [alberta,canada]
  
  yes
  | ?-
  Test 'rangesTo(pelecanus,X). genus, inferred location': Success
---------------------------------------------------------------
166. Running test 'rangesTo(pelecanidae,X). order, inferred location'...
  setof(X,rangesTo(pelecanidae,X),L).
  L = [alberta,canada]
  
  yes
  | ?-
  Test 'rangesTo(pelecanidae,X). order, inferred location': Success
---------------------------------------------------------------
167. Running test 'rangesTo(ardea_alba,alberta). speces, wrong location'...
  setof(X,rangesTo(ardea_alba,alberta),L).
  no
  | ?-
  Test 'rangesTo(ardea_alba,alberta). speces, wrong location': Success
---------------------------------------------------------------
168. Running test 'rangesTo(platalea_ajaja,canada). speces, wrong location'...
  setof(X,rangesTo(platalea_ajaja,canada),L).
  no
  | ?-
  Test 'rangesTo(platalea_ajaja,canada). speces, wrong location': Success
---------------------------------------------------------------
169. Running test 'rangesTo(X,alberta). /alberta'...
  setof(X,rangesTo(X,alberta),L).
  L = [ardea_herodias,botaurus_lentiginosus,nycticorax_nycticorax,pelecanus_erythrorhynchos]
  
  yes
  | ?-
  Test 'rangesTo(X,alberta). /alberta': Success
---------------------------------------------------------------
170. Running test 'rangesTo(X,canada). /canada'...
  setof(X,rangesTo(X,canada),L).
  L = [ardea_alba,ardea_herodias,botaurus_lentiginosus,bubulcus_ibis,butorides_virescens,nycticorax_nycticorax,pelecanus_erythrorhynchos]
  
  yes
  | ?-
  Test 'rangesTo(X,canada). /canada': Success
---------------------------------------------------------------
171. Running test 'rangesTo(X,Y). * / *'...
  setof([X,Y],rangesTo(X,Y),L).
  L = [[ardea_alba,canada],[ardea_herodias,alberta],[ardea_herodias,canada],[botaurus_lentiginosus,alberta],[botaurus_lentiginosus,canada],[bubulcus_ibis,canada],[butorides_virescens,canada],[nycticorax_nycticorax,alberta],[nycticorax_nycticorax,canada],[pelecanus_erythrorhynchos,alberta],[pelecanus_erythrorhynchos,canada]]
  
  yes
  | ?-
  Test 'rangesTo(X,Y). * / *': Success
---------------------------------------------------------------
172. Running test 'habitat(pelecanus_erythrorhynchos,lakePond). true'...
  List = [_]
  
  (1 ms) yes
  | ?-
  Test 'habitat(pelecanus_erythrorhynchos,lakePond). true': Success
---------------------------------------------------------------
173. Running test 'habitat(botaurus_lentiginosus,marsh). true'...
  List = [_]
  
  yes
  | ?-
  Test 'habitat(botaurus_lentiginosus,marsh). true': Success
---------------------------------------------------------------
174. Running test 'habitat(botaurus_lentiginosus,ocean). false'...
  List = []
  
  yes
  | ?-
  Test 'habitat(botaurus_lentiginosus,ocean). false': Success
---------------------------------------------------------------
175. Running test 'habitat(x,ocean). false'...
  List = []
  
  yes
  | ?-
  Test 'habitat(x,ocean). false': Success
---------------------------------------------------------------
176. Running test 'habitat(egretta_tricolor,X). single'...
  setof(X,habitat(egretta_tricolor,X),L).
  L = [marsh]
  
  yes
  | ?-
  Test 'habitat(egretta_tricolor,X). single': Success
---------------------------------------------------------------
177. Running test 'habitat(X,ocean). single'...
  setof(X,habitat(X,ocean),L).
  L = [pelecanus_occidentalis]
  
  yes
  | ?-
  Test 'habitat(X,ocean). single': Success
---------------------------------------------------------------
178. Running test 'habitat(X,marsh). multiple'...
  setof(X,habitat(X,marsh),L).
  L = [ardea_alba,ardea_herodias,botaurus_lentiginosus,bubulcus_ibis,butorides_virescens,egretta_caerulea,egretta_rufescens,egretta_thula,egretta_tricolor,eudocimus_albus,ixobrychus_exilis,nyctanassa_violacea,nycticorax_nycticorax,platalea_ajaja,plegadis_chihi,plegadis_falcinellus]
  
  yes
  | ?-
  Test 'habitat(X,marsh). multiple': Success
---------------------------------------------------------------
179. Running test 'habitat(pelecanus,ocean). genus'...
  List = [_]
  
  yes
  | ?-
  Test 'habitat(pelecanus,ocean). genus': Success
---------------------------------------------------------------
180. Running test 'habitat(pelecaniformes,ocean). order'...
  List = [_]
  
  yes
  | ?-
  Test 'habitat(pelecaniformes,ocean). order': Success
---------------------------------------------------------------
181. Running test 'habitat(pelecaniformes,X). multiple'...
  setof(X,habitat(pelecaniformes,X),L).
  L = [lakePond,marsh,ocean]
  
  yes
  | ?-
  Test 'habitat(pelecaniformes,X). multiple': Success
---------------------------------------------------------------
182. Running test 'food(pelecanus_erythrorhynchos,fish). true'...
  List = [_]
  
  yes
  | ?-
  Test 'food(pelecanus_erythrorhynchos,fish). true': Success
---------------------------------------------------------------
183. Running test 'food(bubulcus_ibis,insects). true'...
  List = [_]
  
  yes
  | ?-
  Test 'food(bubulcus_ibis,insects). true': Success
---------------------------------------------------------------
184. Running test 'food(botaurus_lentiginosus,insects). false'...
  List = []
  
  yes
  | ?-
  Test 'food(botaurus_lentiginosus,insects). false': Success
---------------------------------------------------------------
185. Running test 'food(x,fish). false'...
  List = []
  
  yes
  | ?-
  Test 'food(x,fish). false': Success
---------------------------------------------------------------
186. Running test 'food(egretta_tricolor,X). single'...
  setof(X,food(egretta_tricolor,X),L).
  L = [fish]
  
  yes
  | ?-
  Test 'food(egretta_tricolor,X). single': Success
---------------------------------------------------------------
187. Running test 'food(X,insects). single'...
  setof(X,food(X,insects),L).
  L = [bubulcus_ibis,eudocimus_albus,nyctanassa_violacea,plegadis_chihi,plegadis_falcinellus]
  
  (1 ms) yes
  | ?-
  Test 'food(X,insects). single': Success
---------------------------------------------------------------
188. Running test 'food(pelecanus,fish). genus'...
  List = [_,_]
  
  yes
  | ?-
  Test 'food(pelecanus,fish). genus': Success
---------------------------------------------------------------
189. Running test 'food(pelecaniformes,insects). order'...
  List = [_,_,_,_,_]
  
  yes
  | ?-
  Test 'food(pelecaniformes,insects). order': Success
---------------------------------------------------------------
190. Running test 'food(pelecaniformes,X). multiple'...
  setof(X,food(pelecaniformes,X),L).
  L = [fish,insects]
  
  yes
  | ?-
  Test 'food(pelecaniformes,X). multiple': Success
---------------------------------------------------------------
191. Running test 'nesting(pelecanus_erythrorhynchos,ground). true'...
  List = [_]
  
  yes
  | ?-
  Test 'nesting(pelecanus_erythrorhynchos,ground). true': Success
---------------------------------------------------------------
192. Running test 'nesting(egretta_tricolor,tree). true'...
  List = [_]
  
  yes
  | ?-
  Test 'nesting(egretta_tricolor,tree). true': Success
---------------------------------------------------------------
193. Running test 'nesting(botaurus_lentiginosus,tree). false'...
  List = []
  
  yes
  | ?-
  Test 'nesting(botaurus_lentiginosus,tree). false': Success
---------------------------------------------------------------
194. Running test 'nesting(x,tree). false'...
  List = []
  
  yes
  | ?-
  Test 'nesting(x,tree). false': Success
---------------------------------------------------------------
195. Running test 'nesting(egretta_tricolor,X). single'...
  setof(X,nesting(egretta_tricolor,X),L).
  L = [tree]
  
  yes
  | ?-
  Test 'nesting(egretta_tricolor,X). single': Success
---------------------------------------------------------------
196. Running test 'nesting(X,ground). multi'...
  setof(X,nesting(X,ground),L).
  L = [botaurus_lentiginosus,ixobrychus_exilis,pelecanus_erythrorhynchos,plegadis_chihi,plegadis_falcinellus]
  
  yes
  | ?-
  Test 'nesting(X,ground). multi': Success
---------------------------------------------------------------
197. Running test 'nesting(X,tree). multi'...
  setof(X,nesting(X,tree),L).
  L = [ardea_alba,ardea_herodias,bubulcus_ibis,butorides_virescens,egretta_caerulea,egretta_rufescens,egretta_thula,egretta_tricolor,eudocimus_albus,nyctanassa_violacea,nycticorax_nycticorax,pelecanus_occidentalis,platalea_ajaja]
  
  yes
  | ?-
  Test 'nesting(X,tree). multi': Success
---------------------------------------------------------------
198. Running test 'nesting(pelecanus,ground). genus'...
  List = [_]
  
  yes
  | ?-
  Test 'nesting(pelecanus,ground). genus': Success
---------------------------------------------------------------
199. Running test 'nesting(pelecanus,tree). genus'...
  List = [_]
  
  yes
  | ?-
  Test 'nesting(pelecanus,tree). genus': Success
---------------------------------------------------------------
200. Running test 'nesting(pelecaniformes,tree). order'...
  List = [_,_,_,_,_,_,_,_,_,_,_,_,_]
  
  yes
  | ?-
  Test 'nesting(pelecaniformes,tree). order': Success
---------------------------------------------------------------
201. Running test 'nesting(pelecaniformes,X). multiple'...
  setof(X,nesting(pelecaniformes,X),L).
  L = [ground,tree]
  
  yes
  | ?-
  Test 'nesting(pelecaniformes,X). multiple': Success
---------------------------------------------------------------
202. Running test 'behavior(pelecanus_erythrorhynchos,surfaceDive). true'...
  List = [_]
  
  yes
  | ?-
  Test 'behavior(pelecanus_erythrorhynchos,surfaceDive). true': Success
---------------------------------------------------------------
203. Running test 'behavior(botaurus_lentiginosus,stalking). true'...
  List = [_]
  
  yes
  | ?-
  Test 'behavior(botaurus_lentiginosus,stalking). true': Success
---------------------------------------------------------------
204. Running test 'behavior(botaurus_lentiginosus,aerialDive). false'...
  List = []
  
  yes
  | ?-
  Test 'behavior(botaurus_lentiginosus,aerialDive). false': Success
---------------------------------------------------------------
205. Running test 'behavior(x,stalking). false'...
  List = []
  
  yes
  | ?-
  Test 'behavior(x,stalking). false': Success
---------------------------------------------------------------
206. Running test 'behavior(egretta_tricolor,X). single'...
  setof(X,behavior(egretta_tricolor,X),L).
  L = [stalking]
  
  yes
  | ?-
  Test 'behavior(egretta_tricolor,X). single': Success
---------------------------------------------------------------
207. Running test 'behavior(X,aerialDive). single'...
  setof(X,behavior(X,aerialDive),L).
  L = [pelecanus_occidentalis]
  
  yes
  | ?-
  Test 'behavior(X,aerialDive). single': Success
---------------------------------------------------------------
208. Running test 'behavior(X,stalking). multiple'...
  setof(X,behavior(X,stalking),L).
  L = [ardea_alba,ardea_herodias,botaurus_lentiginosus,butorides_virescens,egretta_caerulea,egretta_rufescens,egretta_thula,egretta_tricolor,ixobrychus_exilis,nyctanassa_violacea,nycticorax_nycticorax]
  
  yes
  | ?-
  Test 'behavior(X,stalking). multiple': Success
---------------------------------------------------------------
209. Running test 'behavior(pelecanus,aerialDive). genus'...
  List = [_]
  
  yes
  | ?-
  Test 'behavior(pelecanus,aerialDive). genus': Success
---------------------------------------------------------------
210. Running test 'behavior(pelecanus,surfaceDive). genus'...
  List = [_]
  
  (1 ms) yes
  | ?-
  Test 'behavior(pelecanus,surfaceDive). genus': Success
---------------------------------------------------------------
211. Running test 'behavior(pelecaniformes,groundForager). order'...
  List = [_]
  
  yes
  | ?-
  Test 'behavior(pelecaniformes,groundForager). order': Success
---------------------------------------------------------------
212. Running test 'behavior(pelecaniformes,X). multiple'...
  setof(X,behavior(pelecaniformes,X),L).
  L = [aerialDive,groundForager,probing,stalking,surfaceDive]
  
  yes
  | ?-
  Test 'behavior(pelecaniformes,X). multiple': Success
---------------------------------------------------------------
213. Running test 'conservation(pelecanus_erythrorhynchos,lc). true'...
  List = [_]
  
  yes
  | ?-
  Test 'conservation(pelecanus_erythrorhynchos,lc). true': Success
---------------------------------------------------------------
214. Running test 'conservation(egretta_rufescens,nt). true'...
  List = [_]
  
  yes
  | ?-
  Test 'conservation(egretta_rufescens,nt). true': Success
---------------------------------------------------------------
215. Running test 'conservation(botaurus_lentiginosus,nt). false'...
  List = []
  
  yes
  | ?-
  Test 'conservation(botaurus_lentiginosus,nt). false': Success
---------------------------------------------------------------
216. Running test 'conservation(x,lc). false'...
  List = []
  
  yes
  | ?-
  Test 'conservation(x,lc). false': Success
---------------------------------------------------------------
217. Running test 'conservation(egretta_tricolor,X). single'...
  setof(X,conservation(egretta_tricolor,X),L).
  L = [lc]
  
  yes
  | ?-
  Test 'conservation(egretta_tricolor,X). single': Success
---------------------------------------------------------------
218. Running test 'conservation(X,nt). single'...
  setof(X,conservation(X,nt),L).
  L = [egretta_rufescens]
  
  (1 ms) yes
  | ?-
  Test 'conservation(X,nt). single': Success
---------------------------------------------------------------
219. Running test 'conservation(X,lc). multiple'...
  setof(X,conservation(X,lc),L).
  L = [ardea_alba,ardea_herodias,botaurus_lentiginosus,bubulcus_ibis,butorides_virescens,egretta_caerulea,egretta_thula,egretta_tricolor,eudocimus_albus,ixobrychus_exilis,nyctanassa_violacea,nycticorax_nycticorax,pelecanus_erythrorhynchos,pelecanus_occidentalis,platalea_ajaja,plegadis_chihi,plegadis_falcinellus]
  
  yes
  | ?-
  Test 'conservation(X,lc). multiple': Success
---------------------------------------------------------------
220. Running test 'conservation(egretta,nt). genus'...
  List = [_]
  
  yes
  | ?-
  Test 'conservation(egretta,nt). genus': Success
---------------------------------------------------------------
221. Running test 'conservation(egretta,lc). genus'...
  List = [_,_,_]
  
  yes
  | ?-
  Test 'conservation(egretta,lc). genus': Success
---------------------------------------------------------------
222. Running test 'conservation(pelecaniformes,nt). order'...
  List = [_]
  
  yes
  | ?-
  Test 'conservation(pelecaniformes,nt). order': Success
---------------------------------------------------------------
223. Running test 'conservation(pelecaniformes,X). multiple'...
  setof(X,conservation(pelecaniformes,X),L).
  L = [lc,nt]
  
  yes
  | ?-
  Test 'conservation(pelecaniformes,X). multiple': Success

<pre>

CPSC 449 Prolog Assignment: Pelecaniformes version 3 (Prolog testing harness version 7).
========================================================================================
     Test                                                                   Result 
     ------------                                                           ------------
  1. order(pelecaniformes). true                                            Success
  2. order(pelecanidae). false                                              Success
  3. order(X).                                                              Success
  4. family(pelecanidae). true                                              Success
  5. family(ardeidae). true                                                 Success
  6. family(threskiornithidae). true                                        Success
  7. family(pelecaniformes). is an order                                    Success
  8. family(X).                                                             Success
  9. genus(botaurus). true                                                  Success
 10. genus(ardea). true                                                     Success
 11. genus(nycticorax). is both a genus and a species                       Success
 12. genus(erythrorhynchos). is a species                                   Success
 13. genus(X).                                                              Success
 14. species(occidentalis). true                                            Success
 15. species(thula). true                                                   Success
 16. species(nycticorax). is both a genus and a species                     Success
 17. species(plegadis). is a genus                                          Success
 18. species(X).                                                            Success
 19. hasParent(plegadis_falcinellus,plegadis). cspecies/genus               Success
 20. hasParent(falcinellus,plegadis). species/genus                         Success
 21. hasParent(nycticorax,ardeidae). genus/family                           Success
 22. hasParent(threskiornithidae,pelecaniformes). family/order              Success
 23. hasParent(falcinellus,ardeidae). species/family                        Success
 24. hasParent(nycticorax,pelecaniformes). genus/order                      Success
 25. hasParent(X,egretta).                                                  Success
 26. hasParent(egretta,ardeidae). genus/family                              Success
 27. hasParent(caerulea,X).                                                 Success
 28. hasParent(X,Y).                                                        Success
 29. hasParent2(plegadis_falcinellus,plegadis). cspecies/genus              Success
 30. hasParent2(falcinellus,plegadis). species/genus                        Success
 31. hasParent2(nycticorax,ardeidae). genus/family                          Success
 32. hasParent2(threskiornithidae,pelecaniformes). family/order             Success
 33. hasParent2(plegadis_falcinellus,ardeidae). cspecies/family             Success
 34. hasParent2(nycticorax,pelecaniformes). genus/order                     Success
 35. hasParent2(X,egretta).                                                 Success
 36. hasParent2(egretta,ardeidae). genus/family                             Success
 37. hasParent2(egretta_caerulea,X).                                        Success
 38. hasParent2(X,Y).                                                       Success
 39. hasCommonName(pelecanus,pelican). order                                Success
 40. hasCommonName(ardea,heron). genus                                      Success
 41. hasCommonName(nycticorax,nightHeron). genus                            Success
 42. hasCommonName(nyctanassa,nightHeron). genus (also above)               Success
 43. hasCommonName(pelecanus_erythrorhynchos,americanWhitePelican). cspeces Success
 44. hasCommonName(erythrorhynchos,americanWhitePelican). raw speces        Success
 45. hasCommonName(pelecanus_erythrorhynchos,brownPelican). cspeces/wrongName Success
 46. hasCommonName(butorides_virescens,greenHeron). cspecies                Success
 47. hasCommonName(nyctanassa_violacea,X). cspecies/                        Success
 48. hasCommonName(X,roseateSpoonbill). /commonName                         Success
 49. hasCommonName(botaurus,lentiginosus,americanBittern). true             Success
 50. hasCommonName(egretta,rufescens,reddishEgret). true                    Success
 51. hasCommonName(egretta,alba,reddishEgret). genus/species mismatch       Success
 52. hasCommonName(egretta,rufescens,snowyEgret). wrong common name         Success
 53. hasCommonName(nycticorax,nycticorax,blackCrownedNightHeron). true      Success
 54. hasCommonName(botaurus,lentiginosus,X).                                Success
 55. hasCommonName(egretta,rufescens,X).                                    Success
 56. hasCommonName(nycticorax,nycticorax,X).                                Success
 57. hasCommonName(X,Y,americanBittern).                                    Success
 58. hasCommonName(X,Y,reddishEgret).                                       Success
 59. hasCommonName(X,Y,blackCrownedNightHeron).                             Success
 60. hasSciName(greatBlueHeron,ardea_herodias). cspeces                     Success
 61. hasSciName(snowyEgret,egretta_thula). cspeces                          Success
 62. hasSciName(snowyEgret,thula). raw speces                               Success
 63. hasSciName(cattleEgret,bubulcus_ibis). cspeces                         Success
 64. hasSciName(cattleEgret,ibis). raw speces                               Success
 65. hasSciName(ibis,eudocimus). genus                                      Success
 66. hasSciName(ibis,plegadis). genus (same as above)                       Success
 67. hasSciName(greatBlueHeron,X). cspecies/                                Success
 68. hasSciName(snowyEgret,X). cspecies/                                    Success
 69. hasSciName(cattleEgret,X). cspecies/                                   Success
 70. hasSciName(X,ardea_herodias). /cspecies                                Success
 71. hasSciName(X,egretta_thula). /cspecies                                 Success
 72. hasSciName(X,bubulcus_ibis). /cspecies                                 Success
 73. hasCompoundName(pelecanus,occidentalis,pelecanus_occidentalis). true   Success
 74. hasCompoundName(egretta,tricolor,egretta_tricolor). true               Success
 75. hasCompoundName(plegadis,chihi,plegadis_chihi). true                   Success
 76. hasCompoundName(plegadis,chihi,egretta_tricolor). wrong name           Success
 77. hasCompoundName(pelecanus,occidentalis,X).                             Success
 78. hasCompoundName(egretta,tricolor,X).                                   Success
 79. hasCompoundName(plegadis,chihi,X).                                     Success
 80. hasCompoundName(X,Y,pelecanus_occidentalis).                           Success
 81. hasCompoundName(X,Y,egretta_tricolor).                                 Success
 82. hasCompoundName(X,Y,plegadis_chihi).                                   Success
 83. synonym(plegadis,plegadis). equal                                      Success
 84. synonym(glossyIbis,plegadis_falcinellus). common/cspecies              Success
 85. synonym(glossyIbis,alcinellus). common/rawSpecies                      Success
 86. synonym(plegadis_falcinellus,glossyIbis). cspecies/common              Success
 87. synonym(falcinellus,glossyIbis). rawSpecies/common                     Success
 88. synonym(glossyIbis,plegadis_falcinellus). common/compound              Success
 89. synonym(plegadis_falcinellus,glossyIbis). compound/common              Success
 90. synonym(bittern,ixobrychus). common/genus                              Success
 91. synonym(ixobrychus,botaurus). genus/genus with same common name        Success
 92. synonym(bittern,botaurus). common/genus (same as above)                Success
 93. synonym(heron,egret). both are names for egretta                       Success
 94. synonym(greenHeron,X). common/                                         Success
 95. synonym(X,greenHeron). /common                                         Success
 96. synonym(butorides_virescens,X). cspecies/                              Success
 97. synonym(X,butorides_virescens). /cspecies                              Success
 98. synonym(X,heron). /common that maps to 3 genera                        Success
 99. synonym(heron,X). /common that maps to 3 genera                        Success
100. isaStrict(exilis,exilis). equal species                                Success
101. isaStrict(ardeidae,ardeidae). equal families                           Success
102. isaStrict(x,x). equal but unknown                                      Success
103. isaStrict(ixobrychus_exilis,ixobrychus). cspecies to genus             Success
104. isaStrict(ixobrychus_exilis,ardeidae). cspecies to family              Success
105. isaStrict(ixobrychus_exilis,pelecaniformes). cspecies to top           Success
106. isaStrict(ixobrychus_exilis,botaurus). cspecies to wrong genus         Success
107. isaStrict(ixobrychus_exilis,pelecanidae). cspecies to wrong family     Success
108. isaStrict(exilis,ixobrychus). raw species to genus                     Success
109. isaStrict(ixobrychus_exilis,X).                                        Success
110. isa(exilis,exilis). equal raw species                                  Success
111. isa(ardeidae,ardeidae). equal families                                 Success
112. isa(x,x). equal but unknown name                                       Success
113. isa(ixobrychus_exilis,ixobrychus). cspecies to genus                   Success
114. isa(ixobrychus_exilis,ardeidae). cspecies to family                    Success
115. isa(ixobrychus_exilis,pelecaniformes). cspecies to top                 Success
116. isa(ixobrychus_exilis,botaurus). cspecies to wrong genus               Success
117. isa(ixobrychus_exilis,pelecanidae). cspecies to wrong family           Success
118. isa(exilis,ixobrychus). raw species to genus                           Success
119. isa(ixobrychus_exilis,X).                                              Success
120. isa(X,pelecanidae).                                                    Success
121. isa(plegadis,ibis). equal genera/common                                Success
122. isa(plegadis_chihi,ibis). equal cspecies/common                        Success
123. isa(cattleEgret,cattleEgret). equal common/common                      Success
124. isa(chihi,ibis). equal rawSpecies/common                               Success
125. isa(platalea_ajaja,pelecaniformes). bottom to top                      Success
126. isa(cattleEgret,bubulcus_ibis). equal commonName to compound species   Success
127. isa(whiteIbis,eudocimus). common species name to genus                 Success
128. isa(leastBittern,ardeidae). common species name to family              Success
129. isa(leastBittern,bittern). common species name to common family        Success
130. isa(whiteFacedIbis,chihi). common species name to species alone        Success
131. isa(plegadis_falcinellus,threskiornithidae). compound species name to family Success
132. isa(nyctanassa,nightHeron). genus to genus common name                 Success
133. isa(nyctanassa,egret). genus to wrong genus common name                Success
134. isa(nyctanassa_violacea,nightHeron). cspecies to genus common name     Success
135. isa(nyctanassa_violacea,egret). cspecies to wrong genus common name    Success
136. isa(x,X). unknown/                                                     Success
137. isa(ardea_herodias,X). species                                         Success
138. isa(greatBlueHeron,X). common species                                  Success
139. isa(ixobrychus_exilis,X). compound species                             Success
140. isa(butorides,X). genus                                                Success
141. isa(X,ardeidae). family                                                Success
142. isa(X,eudocimus_albus). compound species                               Success
143. isa(X,bittern). common species (multi)                                 Success
144. countSpecies(botaurus_lentiginosus,1). species                         Success
145. countSpecies(botaurus,1). single-species genus                         Success
146. countSpecies(egretta,4). 4-species genus                               Success
147. countSpecies(ardeidae,12). 12-species family                           Success
148. countSpecies(pelecaniformes,18). 18-species order                      Success
149. countSpecies(x,0). 0-species unknown name                              Success
150. countSpecies(botaurus_lentiginosus,X). species                         Success
151. countSpecies(botaurus,X). single-species genus                         Success
152. countSpecies(egretta,X). 4-species genus                               Success
153. countSpecies(ardeidae,X). 12-species family                            Success
154. countSpecies(pelecaniformes,X). 18-species order                       Success
155. countSpecies(x,X). 0-species unknown name                              Success
156. rangesTo(botaurus_lentiginosus,alberta). simple species                Success
157. rangesTo(botaurus_lentiginosus,canada). species, inferred location     Success
158. rangesTo(pelecanus,alberta). simple genus                              Success
159. rangesTo(pelecanus,canada). genus, inferred location                   Success
160. rangesTo(pelecanidae,canada). order, inferred location                 Success
161. rangesTo(ardea_alba,alberta). speces, wrong location                   Success
162. rangesTo(platalea_ajaja,canada). speces, wrong location                Success
163. rangesTo(botaurus_lentiginosus,X). species, inferred location          Success
164. rangesTo(pelecanus,X). simple genus                                    Success
165. rangesTo(pelecanus,X). genus, inferred location                        Success
166. rangesTo(pelecanidae,X). order, inferred location                      Success
167. rangesTo(ardea_alba,alberta). speces, wrong location                   Success
168. rangesTo(platalea_ajaja,canada). speces, wrong location                Success
169. rangesTo(X,alberta). /alberta                                          Success
170. rangesTo(X,canada). /canada                                            Success
171. rangesTo(X,Y). * / *                                                   Success
172. habitat(pelecanus_erythrorhynchos,lakePond). true                      Success
173. habitat(botaurus_lentiginosus,marsh). true                             Success
174. habitat(botaurus_lentiginosus,ocean). false                            Success
175. habitat(x,ocean). false                                                Success
176. habitat(egretta_tricolor,X). single                                    Success
177. habitat(X,ocean). single                                               Success
178. habitat(X,marsh). multiple                                             Success
179. habitat(pelecanus,ocean). genus                                        Success
180. habitat(pelecaniformes,ocean). order                                   Success
181. habitat(pelecaniformes,X). multiple                                    Success
182. food(pelecanus_erythrorhynchos,fish). true                             Success
183. food(bubulcus_ibis,insects). true                                      Success
184. food(botaurus_lentiginosus,insects). false                             Success
185. food(x,fish). false                                                    Success
186. food(egretta_tricolor,X). single                                       Success
187. food(X,insects). single                                                Success
188. food(pelecanus,fish). genus                                            Success
189. food(pelecaniformes,insects). order                                    Success
190. food(pelecaniformes,X). multiple                                       Success
191. nesting(pelecanus_erythrorhynchos,ground). true                        Success
192. nesting(egretta_tricolor,tree). true                                   Success
193. nesting(botaurus_lentiginosus,tree). false                             Success
194. nesting(x,tree). false                                                 Success
195. nesting(egretta_tricolor,X). single                                    Success
196. nesting(X,ground). multi                                               Success
197. nesting(X,tree). multi                                                 Success
198. nesting(pelecanus,ground). genus                                       Success
199. nesting(pelecanus,tree). genus                                         Success
200. nesting(pelecaniformes,tree). order                                    Success
201. nesting(pelecaniformes,X). multiple                                    Success
202. behavior(pelecanus_erythrorhynchos,surfaceDive). true                  Success
203. behavior(botaurus_lentiginosus,stalking). true                         Success
204. behavior(botaurus_lentiginosus,aerialDive). false                      Success
205. behavior(x,stalking). false                                            Success
206. behavior(egretta_tricolor,X). single                                   Success
207. behavior(X,aerialDive). single                                         Success
208. behavior(X,stalking). multiple                                         Success
209. behavior(pelecanus,aerialDive). genus                                  Success
210. behavior(pelecanus,surfaceDive). genus                                 Success
211. behavior(pelecaniformes,groundForager). order                          Success
212. behavior(pelecaniformes,X). multiple                                   Success
213. conservation(pelecanus_erythrorhynchos,lc). true                       Success
214. conservation(egretta_rufescens,nt). true                               Success
215. conservation(botaurus_lentiginosus,nt). false                          Success
216. conservation(x,lc). false                                              Success
217. conservation(egretta_tricolor,X). single                               Success
218. conservation(X,nt). single                                             Success
219. conservation(X,lc). multiple                                           Success
220. conservation(egretta,nt). genus                                        Success
221. conservation(egretta,lc). genus                                        Success
222. conservation(pelecaniformes,nt). order                                 Success
223. conservation(pelecaniformes,X). multiple                               Success

Summary:
223 Success                                 
---
223     Total Tests (version 3)
  0/0   Strict Tests Passed
223/223 Non-Strict Tests Passed

Nominal mark: 4.0 (4.00)
</pre>
Tszs-MBP:Prolog tszyeunglam$ 
